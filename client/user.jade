template(name='stackuser_page')
    unless stackuser_doc
        // .ui.header no user found
        .ui.hidden.divider
        .ui.hidden.divider
        .ui.hidden.divider
        .ui.center.aligned.basic.segment.search
            i.massive.grey.loading.yin.yang.icon
        // .ui.massive.fluid.circular.button.f17.zoomer.pointer.search 
        //     i.download.icon
            // |download user info
    with stackuser_doc
        .ui.stackable.padded.grid
            .row
                .six.wide.right.aligned.column
                    .ui.right.header      
                        |#{site}
                    .ui.two.item.fluid.menu
                        a.ui.basic.item.say_users(href="/site/#{site}/users")
                            i.users.icon
                            |users
                        a.ui.basic.item.say_questions(href="/site/#{site}")
                            i.question.icon
                            |questions
                    .spacer
                    .ui.big.inline.right.aligned.header(class=post_header_class)
                        |!{display_name} 
                        small #{reputation}
                    div
                    .ui.inline.right.aligned.header.set_location.pointer.zoomer
                        |!{location}
                    img.ui.rounded.centered.image.pointer.zoomer.boop(src=profile_image)
                    each tags
                        // +stack_tag_selector
                        .ui.tertiary.button #{this}
                    +print_this
                    .ui.horizontal.list
                        // .item #{boops} boops
                        // .item account id #{account_id}
                        // .item employee #{is_employee}
                        .item modified {{ufrom last_modified_date}}
                        .item accessed  {{ufrom last_access_date}}
                        // .item rep change year #{reputation_change_year}
                        // .item quarterly #{reputation_change_quarter}
                        // .item monthly  #{reputation_change_month}
                        // .item weekly rep change #{reputation_change_week}
                        // .item daily #{reputation_change_day}
                        // .item reputation #{reputation}
                        .item created {{ufrom creation_date}}
                        .item #{user_type}
                        .item id #{user_id}
                        .item accepts #{accept_rate}%                        if website_url
                            a.item(href=website_url target="_window")
                                i.globe.icon
                                |#{website_url}
                    a.ui.external.icon.button(href=link target='_window') 
                        i.linkify.icon
                        // |#{link}
                .ten.wide.column
                    .ui.grey.inline.header.get_question.agg
                        i.question.icon
                        |#{user_questions.count} questions
                    .ui.inline.header 
                        |#{max_emotion_name} #{max_emotion_percent}
                    each user_tag_agg
                        .ui.tertiary.button #{title}
                            small #{count}
                    if skv_is 'view_detail' true
                        .ui.black.circular.compact.icon.button.toggle_detail
                            i.list.large.icon
                            // |detail
                    else
                        .ui.compact.circular.basic.icon.button.toggle_detail
                            i.list.large.icon
                            // |simple
        
                    div
                    .scrolling
                        each user_questions
                            +user_question_item
                    .ui.header.get_answers
                        i.exclamation.icon
                        |#{user_answers.count} answers
                    .ui.list.scrolling
                        each user_answers
                            +answer_item
                // .three.wide.column
                //     .ui.grey.small.header 
                //         i.fork.icon
                //         |related accounts
                //     each related_accounts
                //         .ui.small.header !{title}
                //     .ui.grey.small.header
                //         i.tags.icon
                //         |tags
                //     with site_doc
                //         .ui.segment
                //             a.ui.grey.header(href="/site/#{name}") #{name}
                                
                //     .ui.grey.header.get_badges
                //         i.certificate.icon
                //         |#{user_badges.count} badges
                //     .ui.horizontal.list
                //         .item 
                //             +i n='medal2--v1' cl="#{currentUser.invert_class} ui avatar image"
                //             |gold #{badge_counts.gold}
                //         .item 
                //             +i n='medal-second-place--v1' cl="#{currentUser.invert_class} ui avatar image"
                //             |silver #{badge_counts.silver}
                //         .item
                //             +i n='medal2-third-place--v1' cl="#{currentUser.invert_class} ui avatar image"
                //             |bronze #{badge_counts.bronze}
                //     // .ui.list.smallscroll
                //     each user_badges
                //         .ui.basic.label 
                //             span.header #{name}
                //             // span.description
                //             //     |#{rank}
                //             //     .ui.label #{badge_id}
                //             //     a(href=link target="_window")
                //             //         i.external.grey.icon

                // .four.wide.column
                //     .ui.header emotion
                //     .ui.large.list 
                //         .item joy avg
                //         .item sad avg
                //         .item disgust avg
                //         .item anger avg
                //         .item fear avg
                // .four.wide.column
                //     .ui.header.get_tags
                //         i.tag.icon
                //         |tags
                //     .ui.list
                //         each user_tags
                //             .item #{name}: #{count}
                // .four.wide.column
                //     .ui.header.get_comments
                //         i.chat.outline.icon
                //         |comments
                //     .ui.list
                //         each user_comments
                //             .item #{title}
                //     +comments        
                            
                            
template(name='answer_item')
    |!{body}
    +print_this
    // hi#{answer_question.title}
    +remove_button
    .ui.divider
    
    
    
template(name='user_question_item')
    .ui.item
        a.ui.header.zoomer.say_title(href="/site/#{site}/doc/#{_id}" class=post_header_class)
            .ui.basic.circular.label #{score}:
            |!{title}
        .description
            if skv_is 'view_detail' true
                each tags 
                    .ui.tiny.basic.circular.label #{this}
            +doc_emotion_small    
            span(title="#{view_count} views")
                i.grey.eye.icon
                |#{view_count}
            span(title="#{answer_count} answers")
                i.grey.exclamation.icon
                |#{answer_count}
            if creation_date
                span(title="created {{ufrom creation_date}}")
                    i.grey.clock.icon
                    |{{ufrom creation_date}}
            if last_modified_date
                i.pencil.icon
                |{{ufrom last_modified_date}}
            // .ui.large.label #{site}
            // .ui.large.label #{owner.display_name}
    .spacer