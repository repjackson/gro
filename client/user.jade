template(name='stackuser_page')
    unless stackuser_doc
        // .ui.header no user found
        .ui.massive.fluid.button.search 
            i.download.icon
            |download user info
    with stackuser_doc
        .ui.stackable.padded.grid
            .row
                .three.wide.column
                    img.ui.rounded.fluid.image(src=profile_image class=currentUser.invert_class)
                    .ui.center.aligned.header !{display_name}
                    +print_this
                    .ui.list
                        .item account id #{account_id}
                        .item employee #{is_employee}
                        .item last modified {{ufrom last_modified_date}}
                        .item last accessed  {{ufrom last_access_date}}
                        // .item reputation_change_year #{reputation_change_year}
                        // .item quarterly #{reputation_change_quarter}
                        // .item monthly  #{reputation_change_month}
                        // .item weekly rep change #{reputation_change_week}
                        // .item daily #{reputation_change_day}
                        .item reputation #{reputation}
                        .item created  {{ufrom creation_date}}
                        .item type #{user_type}
                        .item user id #{user_id}
                        .item accept rate #{accept_rate}
                        a.item.select_location
                            i.marker.icon
                            | #{location}
                        if website_url
                            a.item(href=website_url target="_window")
                                i.globe.icon
                                |#{website_url}
                    a.ui.external.icon.button(href=link target='_window') 
                        i.linkify.icon
                        // |#{link}
                .nine.wide.column
                    .ui.grey.header.get_question.agg
                        i.question.icon
                        |#{user_questions.count} questions
                    .ui.small.header 
                        |max emotion: #{max_emotion_name}
                    .ui.large.selection.list.scrolling
                        each user_questions
                            a.zoomer.item(href="/site/#{site}/doc/#{_id}") 
                                .header
                                    |!{title}
                                .description
                                    each tags 
                                        .ui.tiny.basic.circular.label #{this}
                                    +doc_emotion_small    
                    .ui.header.get_answers
                        i.exclamation.icon
                        |#{user_answers.count} answers
                    .ui.list.scrolling
                        each user_answers
                            +answer_item
                .four.wide.column
                    .ui.segment
                        a.ui.header(href="/site/#{site}")
                            |#{site}
                    .ui.grey.small.header 
                        i.fork.icon
                        |related accounts
                    each related_accounts
                        .ui.small.header !{title}
                    .ui.grey.small.header
                        i.tags.icon
                        |tags
                    with site_doc
                        .ui.segment
                            a.ui.grey.header(href="/site/#{name}") #{name}
                                
                    .ui.grey.header.get_badges
                        i.certificate.icon
                        |#{user_badges.count} badges
                    .ui.horizontal.list
                        .item 
                            +i n='medal2--v1' cl="#{currentUser.invert_class} ui avatar image"
                            |gold #{badge_counts.gold}
                        .item 
                            +i n='medal-second-place--v1' cl="#{currentUser.invert_class} ui avatar image"
                            |silver #{badge_counts.silver}
                        .item
                            +i n='medal2-third-place--v1' cl="#{currentUser.invert_class} ui avatar image"
                            |bronze #{badge_counts.bronze}
                    .ui.list.smallscroll
                        each user_badges
                            .item 
                                .content 
                                    span.header #{name}
                                    span.description
                                        |#{rank}
                                        .ui.label #{badge_id}
                                        a(href=link target="_window")
                                            i.external.grey.icon

                .four.wide.column
                    .ui.header emotion
                    .ui.large.list 
                        .item joy avg
                        .item sad avg
                        .item disgust avg
                        .item anger avg
                        .item fear avg
                .four.wide.column
                    .ui.header.get_tags
                        i.tag.icon
                        |tags
                    .ui.list
                        each user_tags
                            .item #{name}: #{count}
                .four.wide.column
                    .ui.header.get_comments
                        i.chat.outline.icon
                        |comments
                    .ui.list
                        each user_comments
                            .item #{title}
                            
                            
                            
template(name='answer_item')
    |!{body}
    // hi#{answer_question.title}