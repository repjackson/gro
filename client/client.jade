head
    title dao
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="black")
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300&display=swap" rel="stylesheet")
    link(href="https://fonts.googleapis.com/css?family=Lato:300&display=swap" rel="stylesheet")
    //- script(src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js")

    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")
    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')

    link(href="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/css/suneditor.min.css" rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/suneditor.min.js")
    script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/src/lang/en.js")

    // script(src="https://cdn.jsdelivr.net/npm/sweetalert2@9")

    link(rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.css")
    script(src="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.js")
    script(async src="https://www.googletagmanager.com/gtag/js?id=G-GLYPPRGJFQ")
    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'G-GLYPPRGJFQ');


template(name='layout')
    .ui.bottom.attached.pushable.segment
        +yield


            
template(name='home')
    .ui.stackable.grid
        .sixteen.wide.left.aligned.column.seg
            if picked_tags
                    
                .ui.left.icon.big.transparent.input
                    if is_loading
                        i.yin.yang.loading.large.icon
                    else
                        if nsfw_mode
                            i.large.fire.icon
                        else
                            if session_is 'simple'
                                i.yin.yang.large.grey.link.icon.simple_off(title='simple mode')
                            unless session_is 'simple'
                                i.sliders.horizontal.large.black.link.icon.simple_on(title='make advanced')
                    input.search_tag(type='text' value=query autofocus='' placeholder="search #{counter}")
                // if many_tags
                //     a#clear_tags.ui.black.invert.icon.compact.button.pick_term
                //         i.remove.icon
                each picked_tags
                    +unpick_tag
            |&nbsp;
            unless picked_tags
                .ui.center.aligned.basic.segment
                .ui.left.icon.massive.transparent.input
                    if is_loading
                        i.yin.yang.loading.large.icon
                    else
                        if nsfw_mode
                            i.large.fire.icon
                        else
                            i.search.icon
                    input.search_tag(type='text' value=query autofocus='' placeholder='search')
                
            unless simple
                i.fire.icon
                i.clock.icon
                i.chevron.down.icon
                i.chevron.right.icon
                i.chevron.left.icon
           
           
            // div
            each result_tags
                +tag_picker
            .ui.hidden.divider
            .ui.four.column.centered.stackable.grid.scrolling.pushed
                each posts
                    +post_card_small
                
                
                
template(name='tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    button.ui.basic.grey.tertiary.button.zoomer.pick_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        // if term
        //     if term.watson.metadata.image
        //         img.ui.avatar.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
            
template(name='unpick_tag')
    button.unpick_tag.ui.black.circular.compact.large.secondary.button.invert
        // if term
        //     if term.watson.metadata.image
        //         img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

template(name='flat_tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    a.ui.compact.small.basic.tertiary.button.zoomer.pick_flat_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        | #{this}
        // if in_dev
        //     small #{count}

        
        
   
template(name='post_card_small')
    .center.aligned.column.smallscroll
        .content.zoomer.card_small.invert
            // a.ui.header.zoomer(href="/#{group}/p/#{_id}") #{title}
            // a.ui.center.aligned.small.header.view_post(href="/#{group}/p/#{_id}" class=emotion_color)
            a.ui.center.aligned.invert.header.thin.title(href=url target='_window')
                // |!{data.title} #{lowered_title}
                |#{lowered_title}
            .spacer
            if embed
                span.rounded.full
                    |!{embed}
                div
            else if is_image
                a(href=url target='_window')
                    img.ui.fluid.rounded.image.toggle_view(src=url)
            else if data.thumbnail_width
                a(href=url target='_window')
                    img.ui.fluid.rounded.image.zoomer(src=data.thumbnail)    
            span.ui.text {{ufrom data.created}}
            unless simple
                i.circular.chevron.down.icon.dl.invert
                span.invert
                    |#{ups}
                    i.thumbs.up.outline.icon
                    |#{comment_count}
                    i.chat.outline.icon
                with subreddit
                    +flat_tag_picker
                    // .ui.basic.label #{this}
                each five_tags
                    +flat_tag_picker
                a.ui.icon.compact.circular.basic.button(href="https://www.reddit.com#{permalink}" target='_window' title=domain)
                    // |#{domain}
                    i.external.icon
                // div
                .ui.tiny.invert.transparent.left.icon.input
                    i.tag.icon
                    input.add_tag(type='text' placeholder='...')
            .ui.hidden.divider   
            if data.selftext_html
                unless simple
                    span.invert.smallscroll
                        |{{#markdown}} !{data.selftext_html} {{/markdown}}