head
    title dao
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="black")
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300&display=swap" rel="stylesheet")
    // link(href="https://fonts.googleapis.com/css?family=Lato:300&display=swap" rel="stylesheet")
    //- script(src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js")

    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")
    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')

    // link(href="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/css/suneditor.min.css" rel="stylesheet")
    // script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/suneditor.min.js")
    // script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/src/lang/en.js")

    // script(src="https://cdn.jsdelivr.net/npm/sweetalert2@9")

    link(rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.css")
    script(src="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.js")
    // script(async src="https://www.googletagmanager.com/gtag/js?id=G-GLYPPRGJFQ")
    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'G-GLYPPRGJFQ');


template(name='layout')
    +yield

            

template(name='not_found')
    .ui.center.aligned.basic.segment
        a(href="/")
            i.massive.yin.yang.grey.link.icon.pulse

template(name='post_view')
    with current_doc
        .ui.stackable.grid
            .row 
                .twelve.wide.column.scrolling
                    .ui.center.aligned.header #{title}
                    if url
                        a.ui.center.aligned.small.header(href=url target='_window') #{url}
                        
                    if embed
                        span.f11.full
                            |!{embed}
                    else if is_image
                        a.view_post(href="/" class=post_header_class)
                            img.ui.fluid.rounded.image.toggle_view(src=data.url)
                    else if data.is_reddit_media_domain
                        img.ui.centered.rounded.image.pointer.call_visual(src=data.url)
                    else if has_thumbnail
                        img.ui.fluid.rounded.image.pointer.call_thumbnail(src=data.thumbnail)
                    // else if watson.metadata.image
                    //     img.ui.rounded.image.pointer.call_meta(src=watson.metadata.image)
                    if is_youtube
                        div
                        // .ui.fluid.embed
                        //     iframe(id="ytplayer" type="text/html" width="100%" height="500" src="https://www.youtube.com/embed/#{youtube_parse}" frameborder="0" allowfullscreen)
                        iframe(width="100%" height="600" src="https://www.youtube.com/embed/#{youtube_parse}?autoplay=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                    if data.link_url
                        img.ui.image.pointer.call_visual(src=data.link_url)
            
                    if image_link
                        a(href="/")
                            img.ui.image(src=image_link)
                    if image_id
                        a(href="/")
                            img.ui.zoomer.image(src="{{c.url image_id }}" )
                    if youtube_id
                        +youtube_view key='youtube_id' label='youtube id'
                    
                    if image_link
                        +image_link_view key='image_link'
                    if image_id
                        img.ui.fluid.rounded.image.no_left(src="{{c.url image_id }}" )
                    if youtube_id
                        .no_left
                            +youtube_view key='youtube_id' label='youtube id'
                    if raw 
                        |!{raw}
                    .say_this.say_body.f12
                        |!{content}
                    .say_this.say_body.f12
                        |!{description}
                    .say_this.say_body.f12
                        |!{body}
                    div 
                    .spacer
                    .spacer
                    +comments
                    div
                .four.wide.column.scrolling
                    a.ui.large.icon.basic.button(href="/")
                        i.chevron.left.large.icon
                        i.large.home.icon
                    if in_dev
                        a.ui.icon.large.basic.button(href="/p/#{_id}/edit")
                            i.big.pencil.icon
                    i.large.eye.icon
                    | #{views} views
                    if comment_count
                        i.large.chat.icon
                        | #{comment_count} views
                    +array_edit key='tags' label='tags' icon='tag'
                    +link_view key='link' label='link'
                    +array_edit key='time_tags' label='time tags' icon='clock'
                    +array_edit key='location_tags' label='location tags' icon='marker'
                    +voting
                    // i.large.thumbs.up.icon.voteup
                    // i.large.thumbs.down.icon.anon_votedown
                    +print_this
                    
   
                    
                    
                        
template(name='home')
    .ui.padded.stackable.grid
        .sixteen.wide.column
            // i.plus.link.icon.add
            .ui.icon.input
                if is_loading
                    i.yin.yang.loading.large.icon
                else
                    i.search.icon
                input.search_tag(type='text' value=query)
                // .ui.label #{this}
            
            if picked_tags
                // if many_tags
                //     a#clear_tags.ui.red.invert.icon.button.pick_term
                //         i.remove.icon
                each picked_tags
                    +unpick_tag
            each result_tags
                // .ui.label #{this}
                +tag_picker
        // if skv_is 'view_sidebar' true
        //     .four.wide.column.scrolling       
        //         if location_results.count
        //             i.big.marker.icon
        //         each picked_locations
        //             a.unpick_location.ui.large.button(href='#')
        //                 strong #{this}
        //         each location_results
        //             if name
        //                 .ui.tiny.basic.button.pick_location #{name}
        //         div
        //         i.big.user.icon
        //         each picked_authors
        //             a.unpick_author.ui.large.button(href='#')
        //                 strong #{this}
        //         each author_results
        //             if name
        //                 .ui.tiny.basic.button.pick_author #{name}
        //         div
        //         i.clock.big.icon
        //         each picked_times
        //             a.unpick_time.ui.large.large.button(href='#')
        //                 strong #{this}
        //         each time_results
        //             .ui.tiny.basic.button.pick_time #{name}
        //         .ui.inline.header 
        //             |#{post_counter}
        //         // +alpha
        //         each picked_locations
        //             a.unpick_location_tag.ui.black.large.button(href='#')
        //                 | #{this}
        //         if location_tags
        //             i.big.marker.grey.icon
        //             each location_tags
        //                 .ui.small.button.zoomer.pick_location_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        //                     | #{name}
                                
        div(class=main_column_class)
            // .ui.disabled.button shared with me
            // if skv_is 'view_sidebar' false
            //     .ui.icon.basic.button.enable_sidebar
            //         i.ellipsis.vertical.icon
            // else
            //     .ui.icon.compact.active.button.disable_sidebar
            //         i.ellipsis.vertical.icon
            if skv_is 'sort_direction' 1
                .ui.icon.compact.basic.button.sort_down
                    i.caret.down.icon
            else
                .ui.icon.compact.basic.button.sort_up
                    i.caret.up.icon
            .ui.large.icon.button.sort_timestamp(class=sort_timestamp_class)
                i.clock.icon
            .ui.large.icon.button.sort_points(class=sort_points_class)
                i.thumbs.up.icon
            // if skv_is 'view_detail' true
            //     .ui.black.large.icon.basic.button.toggle_detail
            //         i.list.icon
            // else
            //     .ui.large.icon.basic.button.toggle_detail
            //         i.minus.icon
            //     // i.line.chart.icon
            if skv_is 'view_layout' 'grid'
                .ui.large.icon.black.button.set_grid(class=grid_class) 
                    i.th.icon
            else
                .ui.large.icon.basic.button.set_grid(class=grid_class) 
                    i.th.icon
            if skv_is 'view_layout' 'list'
                .ui.black.icon.large.button.set_list(class=list_class)
                    i.list.icon
            else
                .ui.large.icon.basic.button.set_list(class=list_class)
                    i.list.icon
            .ui.icon.basic.button.skip_left
                i.chevron.left.icon
            .ui.icon.basic.button.skip_right
                i.chevron.right.icon
            .ui.icon.button.view_videos(class=video_class)
                i.film.icon
            .ui.icon.button.view_images(class=image_class)
                i.picture.icon
            .ui.icon.button.view_commented
                i.chat.icon            
            if skv_is 'view_layout' 'grid'
                .ui.stackable.four.cards.scrolling
                    each posts
                        +post_card
            else 
                .ui.divided.link.items
                    each posts
                        +post_item

template(name='post_card')
    .ui.card.smallscroll(class=card_class)
        if embed
            // span.f11.full
            a.view_post(href="/p/#{_id}" class=post_header_class)
                |!{embed}
        else if is_image
            a.view_post(href="/p/#{_id}" class=post_header_class)
                img.ui.fluid.zoomer.rounded.image.toggle_view(src=data.url)
        else if data.is_reddit_media_domain
            a.view_post(href="/p/#{_id}" class=post_header_class)
                img.ui.centered.rounded.image.pointer.call_visual(src=data.url)
        else if has_thumbnail
            a.view_post(href="/p/#{_id}" class=post_header_class)
                img.ui.fluid.rounded.image.pointer.call_thumbnail.zoomer(src=data.thumbnail)
        // else if watson.metadata.image
        //     img.ui.rounded.image.pointer.call_meta(src=watson.metadata.image)
        if is_youtube
            div
            // .ui.fluid.embed
            //     iframe(id="ytplayer" type="text/html" width="100%" height="500" src="https://www.youtube.com/embed/#{youtube_parse}" frameborder="0" allowfullscreen)
            iframe(width="100%" height="600" src="https://www.youtube.com/embed/#{youtube_parse}?autoplay=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
        if data.link_url
            img.ui.image.pointer.call_visual(src=data.link_url)

        if image_link
            a(href="/p/#{_id}")
                img.ui.zoomer.image(src=image_link)
        if image_id
            a(href="/p/#{_id}")
                img.ui.zoomer.image(src="{{c.url image_id }}" )
        if youtube_id
            +youtube_view key='youtube_id' label='youtube id'

        .content
            a.ui.header(href="/p/#{_id}") #{title}
            div
            a.f12.zoomer(href="/p/#{_id}")
                |!{content}
                |!{description}
                |!{body}
            // .ui.tiny.icon.input
            //     i.grey.tag.icon
            //     input.add_tag(type='text' placeholder='+')
            each seven_tags
                +flat_tag_picker
                // .ui.small.button.pick_flat_tag #{this}
            // each timestamp_tags
            //     .ui.small.button.pick_flat_time #{this}
            if location
                i.grey.marker.icon
                |#{location}
            if in_dev
                +print_this
        .content
            |#{when}
            // +voting
            // if in_dev
            //     i.large.lock.link.grey.icon.make_private
            a.ui.icon.large.basic.button(href="/p/#{_id}")
                |#{views}
                i.chevron.right.large.icon
        //   +comments
           
                                
template(name='post_item')
    .ui.item.mark_viewed(class=card_class)
        if image_link
            a(href="/p/#{_id}")
                img.ui.zoomer.small.image(src=image_link)
        if image_id
            a(href="/p/#{_id}")
                img.ui.small.image(src="{{c.url image_id }}" )
        if youtube_id
            a(href="/p/#{_id}")
                i.massive.youtube.link.icon
            // +youtube_view key='youtube_id' label='youtube id'

        .content
            a.ui.header(href="/p/#{_id}") #{title}
            div
            |#{when}
            // a(href="/p/#{_id}")
            //     |!{content}
            +voting
            // .ui.tiny.icon.input
            //     i.grey.tag.icon
            //     input.add_tag(type='text' placeholder='+')
            each seven_tags
                +flat_tag_picker
                // .ui.small.button.pick_flat_tag #{this}
            if skv_is 'view_detail' true
                each timestamp_tags
                    .ui.small.button.pick_flat_time #{this}
            if location
                i.grey.marker.icon
                |#{location}
            // if author
            //     i.grey.user.outline.icon
            //     |#{author}
            if in_dev
                +print_this
        .content
            if in_dev
                i.large.lock.link.grey.icon.make_private
            a.ui.icon.large.basic.button(href="/p/#{_id}")
                |#{views}
                i.chevron.right.large.icon
                                
                                
template(name='tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    .ui.tertiary.button.zoomer.pick_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.avatar.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='unpick_tag')
    a.unpick_tag.ui.black.image.big.label.no_blink(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    .ui.basic.small.compact.button.zoomer.pick_flat_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        // if term
        //     if term.watson.metadata.image
        //         img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        | #{this}
        // if in_dev
        //     small #{count}
                        
                        
                        
template(name='skve')
    // a.ui.image.big.link.label.set_session_v(class=calculated_class)
    .ui.basic.button.set_session_v.say(class=calculated_class title=t)
        // if i
        if selected 
            // +i n=i cl='ui mini inline image'
            i.large.icon(class=i)
        else
            // +iios n=i cl='ui mini inline image'
            i.grey.icon(class=i)
        unless ionly
            if l
                span #{l}
            else 
                span #{v}

template(name='comments_view_small')            
    if doc_comments.count
        .meta
            each doc_comments 
                i.grey.chat.outline.icon
                // img.ui.avatar.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=user_class)
                |#{body}
                div


template(name='session_edit_toggle')
    .ui.icon.button.toggle_edit(class=toggle_button_class)
        i.pencil.icon




template(name='ismall')
    img(src="https://img.icons8.com/color/24/000000/#{name}.png" class=classes title=title)
    //- img(src="https://img.icons8.com/cotton/24/000000/#{name}.png" class=classes title=title)
    //- img(src="https://img.icons8.com/ultraviolet/24/000000/#{name}.png" class=classes title=title)
template(name='ibig')    
    //- img.ui.image(src="https://img.icons8.com/dusk/256/000000/#{name}.png" class=cl)
    //- img.ui.image(src="https://img.icons8.com/cotton/256/000000/#{name}.png" class=cl)
    //- img.ui.image(src="https://img.icons8.com/office/256/000000/#{name}.png" class=cl)
    //- img.ui.image(src="https://img.icons8.com/plasticine/256/000000/#{name}.png" class=cl)
    //- img.ui.image(src="https://img.icons8.com/color/256/000000/#{name}.png" class=cl)
    //- img.ui.image(src="https://img.icons8.com/ios/256/000000/#{name}.png" class=cl)
template(name='icon')    
    i.icon(class=name)
    // img.ui.image(src="https://img.icons8.com/color/48/000000/#{name}.png" class=cl)
    // img.ui.image(src="https://img.icons8.com/plasticine/48/000000/#{name}.png" class=cl)
    // img.ui.image(src="https://img.icons8.com/ios/48/000000/#{name}.png" class=cl)
    // img.ui.image(src="https://img.icons8.com/color/48/000000/#{name}.png" class=cl)
    //- img.ui.image(src="https://img.icons8.com/fluent/48/000000/#{name}.png" class=cl)
    // img.ui.image(src="https://img.icons8.com/cotton/48/000000/#{name}.png" class=cl)
    //- img.ui.image(src="https://img.icons8.com/office/48/000000/#{name}.png" class=cl)

template(name='print_this')
    i.code.link.icon.print_this

template(name='session_boolean_toggle')
    .ui.button.toggle_session_key(class=calculated_class)
        +icolor name=icon cl='ui avatar image'
        |#{label}
        //- if icon_view 
        //- else 
            if label
                |#{label}
            else 
                |#{value}
template(name='session_edit_value_button')
    .ui.button.set_session_value(class=calculated_class)
        if icon_view 
            i.icon(class=icon)
        else 
            if label
                |#{label}
            else 
                |#{value}

template(name='session_toggle_button')
    .ui.icon.button.toggle(class=session_toggle_button_class title=title)
        i.large.icon(class=icon)


        
template(name='comments')
    div
    .ui.fluid.icon.input
        i.chat.outline.icon
        input.add_comment(model='text')
    .ui.comments
        each doc_comments
            .comment
                .content
                    .metadata
                        span.date #{when}
                    .text
                        | !{body}
                    span.actions
                        if can_edit
                            +remove_icon
                        // else
                        i.thumbs.up.outline.icon.upvote
                        i.thumbs.down.outline.icon.downvote
    

template(name='loading')
    i.massive.yin.yang.loading.grey.icon


template(name='toggle_edit')
    .ui.basic.button.toggle_edit
        i.pencil.icon



template(name='voting')
    i.thumbs.up.large.link.outline.grey.icon.upvote(class=upvote_class title='upvote')
    i.thumbs.down.large.link.grey.outline.icon.downvote(class=downvote_class title='downvote')
    // if in_dev
    //     +number_edit key='points' label='edit points'
    if points
        strong #{points} pts
    // if anon_points
    //     strong #{anon_points} anon pts
    



template(name='remove_button')
    .ui.icon.button.remove_doc(title='delete')
        i.remove.icon
        // |delete
template(name='remove_icon')
    i.remove.link.icon.remove_doc(title='delete')

template(name='toggle_button')
    .ui.icon.toggle.basic.button(title=label)
        i.icon(class=icon)




            
template(name='key_value_edit')
    a.ui.large.button.set_key_value(class=set_key_value_class title=value href='#')
        if i
            // +icon name=icon cl='ui avatar image'
            i.icon(class=i)
        unless icon_only
            if l
                |#{l}
            else 
                |#{v}
        

template(name='session_key_value')
    .ui.button.set_session_value(class=button_class) 
        if icon 
            i.icon(class=icon)
        if label
            |#{label}
        else 
            |#{value}                        