template(name='ruser')
    +nav
    unless ruser_doc
        // .ui.header no user found
        .ui.hidden.divider
        .ui.hidden.divider
        .ui.hidden.divider
        .ui.center.aligned.basic.segment.search
            i.massive.grey.download.link.icon.get_user_info
        // .ui.massive.fluid.button.f17.zoomer.pointer.search 
        //     i.download.icon
            // |download user info
    with ruser_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    img.ui.image(src=data.snoovatar_img)
                    .ui.large.inline.header.get_user_posts(class=post_header_class)
                        |!{username} 
                        small(title='reputation') {{ commafy karma }}
                        strong(title="#{site} rank") ##{site_rank} 
                        strong(title='global rank') ##{global_rank}
                    with data
                        .ui.list
                            .item #{total_karma} total karma
                            .item #{comment_karma} comment karma
                            .item #{link_karma} link karma
                            .item #{awardee_karma} awardee karma
                            .item #{awarder_karma} awarder karma
                            .item created {{ufrom created_utc}}
                        if is_gold
                            i.large.yellow.star.icon(title='is gold')
                        if is_mod
                            i.large.blue.shield.icon(title='is mod')
                        if has_verified_email
                            i.large.mail.icon(title='verified email')
                    i.info.icon.get_user_info
                    img.ui.rounded.inline.image.pointer.zoomer(src=profile_image)
                    a.ui.large.compact.basic.button(href="http://www.reddit.com/user/#{username}" target='_window' title="#{site} profile")
                        i.reddit.icon
                        i.external.icon
                    +print_this
                .twelve.wide.column
                    a.ui.button(href="/user/#{username}")
                        i.dashboard.icon
                        |overview
                    a.ui.button(href="/user/#{username}/posts")
                        i.edit.icon
                        |posts
                    a.ui.button(href="/user/#{username}/comments")
                        i.chat.outline.icon
                        |comments
                    a.ui.button(href="/user/#{username}/upvoted")
                        i.thumbs.up.outline.icon
                        |upvoted
                    a.ui.button(href="/user/#{username}/downvoted")
                        i.thumbs.down.outline.icon
                        |downvoted
                    a.ui.button(href="/user/#{username}/hidden")
                        i.eye.slash.icon
                        |hidden
                    a.ui.button(href="/user/#{username}/saved")
                        i.save.icon
                        |saved
                    div
                    if skv_is 'view_post_detail' true
                        .ui.black.tertiary.large.button.toggle_post_detail.agg
                            i.post.icon
                            |#{user_posts.count} posts
                    if skv_is 'view_detail' true
                        .ui.black.compact.icon.button.toggle_detail
                            i.list.large.icon
                            // |detail
                    else
                        .ui.compact.basic.icon.button.toggle_detail
                            i.minus.large.icon
                            // |simple
                    div
                    +yield
         
         
template(name='ruser_overview')
    .ui.stackable.grid
        .eight.wide.column
            .ui.header 
                i.edit.icon
                |posts
            .medscroll
                each ruser_posts
                    .ui.segment
                        a.ui.small.inline.header(href="/r/#{subreddit}/post/#{_id}")
                            |#{data.ups}
                            |#{data.link_title} #{data.title}
                        a.ui.label(href="/r/#{subreddit}") #{subreddit}
                        each five_tags 
                            .ui.small.label #{this}
                        // +skve k='view_preview' v='preview' l=' ' i='caret down'
                        // if skv_is 'view_preview' 'preview'
                        |#{data.body}
                        .ui.label {{ufrom data.created}}
                        +print_this
        .eight.wide.column
            .ui.header.get_user_comments
                i.chat.icon
                |comments
            .medscroll
                each rcomments
                    .ui.grid.call_watson_comment
                        .sixteen.wide.column
                            .ui.small.inline.header {{data.score}}
                            span.metadata 
                                span.date {{ufrom data.created}}
                                +doc_emotion_small
                            .pointer.say(class=post_header_class)
                                |{{#markdown}} {{data.body}} {{/markdown}}
                            .actions
                                each tags 
                                    +flat_sub_tag_selector
                                    // .ui.tiny.basic.label #/{this}
                                a.author.say(href="/r/#{data.subreddit}") #{data.subreddit}
                                if in_dev
                                    +print_this
                        // if data.replies.data.children
                        //     .ui.grid
                        //         each data.replies.data.children
                        //             .one.wide.column
                        //             .fifteen.wide.column
                        //                 a.author(href="/user/#{data.author}") #{data.author}
                        //                 .pointer.content.say
                        //                     |{{#markdown}} {{data.body}} {{/markdown}}
                        //                     // .text.say #{data.score} #{data.body}
        .eight.wide.column
            .ui.header upvoted
            each top_upvoted
                .ui.header #{title}
        .eight.wide.column
            .ui.header downvoted
            each top_downvoted
                .ui.header #{title}
        .eight.wide.column
            .ui.header hidden
            each top_hidden
                .ui.header #{title}
        .eight.wide.column
            .ui.header saved
            each top_saved
                .ui.header #{title}
                    
template(name='ruser_posts')
    .scrolling
        each user_posts
            +ruser_doc_item
                            
                            
template(name='ruser_doc_item')
    .ui.item
        if is_image
            a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                img.ui.centered.rounded.zoomer.inline.small.image.toggle_view(src=data.url)
        else if watson.metadata.image
            a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                img.ui.rounded.inline.small.image.zoomer.toggle_view(src=watson.metadata.image)
        else if data.thumbnail
            a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                img.ui.rounded.inline.small.image.zoomer(src=data.thumbnail)    
        a.ui.header.zoomer.say_title(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
            strong #{data.score}:
            |!{data.link_title} #{data.title}
        .description
            if skv_is 'view_detail' true
                each tags 
                    .ui.tiny.basic.tertiary.button #{this}
            +doc_emotion_small    
            span(title="#{view_count} views")
                i.grey.eye.icon
                |#{view_count}
            if creation_date
                span(title="created {{ufrom creation_date}}")
                    i.grey.clock.icon
                    |{{ufrom creation_date}}
            if last_modified_date
                i.pencil.icon
                |{{ufrom last_modified_date}}
            .ui.basic.label #{data.domain}
            .ui.basic.label #{data.num_comments}
            .ui.basic.label #{data.subreddit}
            // .ui.large.label #{owner.display_name}
    .spacer
    
    
    
template(name='ruser_comments')
    a.ui.icon.button(href="www.reddit.com/user/#{ruser_doc.username}/comments" target='_window')
        i.external.icon
    .scrolling
        each user_comments
            +ruser_comment
                            
                            
template(name='ruser_comment')
    .ui.item
        .ui.header #{body}    
    