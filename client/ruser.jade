template(name='ruser')
    unless ruser_doc
        // .ui.header no user found
        .ui.hidden.divider
        .ui.hidden.divider
        .ui.hidden.divider
        .ui.center.aligned.basic.segment.search
            i.massive.grey.loading.yin.yang.link.icon.get_user_info
        // .ui.massive.fluid.circular.button.f17.zoomer.pointer.search 
        //     i.download.icon
            // |download user info
    with ruser_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    .ui.large.inline.header.get_user_posts(class=post_header_class)
                        |!{username} 
                        small(title='reputation') {{ commafy karma }}
                        strong(title="#{site} rank") ##{site_rank} 
                        strong(title='global rank') ##{global_rank}
                    div
                    img.ui.rounded.inline.image.pointer.zoomer(src=profile_image)
                    a.ui.large.compact.circular.basic.button(href=link target='_window' title="#{site} profile")
                        i.stack.exchange.icon
                        i.external.icon
                    +print_this
                    .ui.horizontal.list
                        .item account id #{account_id}
                        .item employee #{is_employee}
                        .item modified {{ufrom last_modified_date}}
                        .item accessed  {{ufrom last_access_date}}
                        .item created {{ufrom creation_date}}
                        .item #{user_type}
                        .item account id #{account_id}
                        .item user id #{user_id}
                        .item accepts #{accept_rate}%                        
                        // .item badge_counts: #{badge_counts}
                        // .item view_count: #{view_count}
                        // .item down_vote_count: #{down_vote_count}
                        // .item up_vote_count: #{up_vote_count}
                        // .item answer_count: #{answer_count}
                        // .item question_count: #{question_count}
                        // .item profile_image: #{profile_image}
                        // .item display_name: #{display_name}
                    a.ui.external.icon.button(href=link target='_window') 
                        i.linkify.icon
                        // |#{link}
                .twelve.wide.column
                    .ui.grey.tiny.statistic
                        .value #{down_vote_count}
                        .label 
                            i.thumbs.down.outline.icon
                            |down votes
                    .ui.grey.tiny.statistic
                        .value #{up_vote_count}
                        .label 
                            i.thumbs.up.outline.icon
                            |up votes
                    .ui.grey.tiny.statistic
                        .value #{answer_count}
                        .label 
                            i.reply.icon
                            |answers
                    .ui.grey.tiny.statistic
                        .value #{question_count}
                        .label 
                            i.question.icon
                            |questions
                    .ui.grey.tiny.statistic
                        .value #{view_count}
                        .label 
                            i.eye.icon
                            |views
                    .ui.grey.header 
                        i.rss.icon
                        |feed
                    each user_events
                        .ui.header #{title}
                    .ui.inline.header 
                        |#{max_emotion_name} #{max_emotion_percent}
                    div
                    if skv_is 'view_question_detail' true
                        .ui.black.tertiary.large.button.toggle_question_detail.agg
                            i.question.icon
                            |#{user_questions.count} questions
                    unless skv_is 'view_question_detail' true
                        .ui.tertiary.large.button.toggle_question_detail.agg
                            i.question.icon
                            |#{user_questions.count} questions
                    if skv_is 'view_question_detail' true
                        each user_tag_agg
                            .ui.tertiary.button #{title}
                                small #{count}
                    if skv_is 'view_detail' true
                        .ui.black.circular.compact.icon.button.toggle_detail
                            i.list.large.icon
                            // |detail
                    else
                        .ui.compact.circular.basic.icon.button.toggle_detail
                            i.minus.large.icon
                            // |simple
        
                    div
                    .scrolling
                        each user_posts
                            +ruser_doc_item
                            
                            
template(name='ruser_doc_item')
    .ui.item
        a.ui.header.zoomer.say_title(href="/s/#{site}/psot/#{_id}" class=post_header_class)
            strong #{score}:
            |!{title}
        |!{about_me}
        .description
            if skv_is 'view_detail' true
                each tags 
                    .ui.tiny.basic.circular.tertiary.button #{this}
            +doc_emotion_small    
            span(title="#{view_count} views")
                i.grey.eye.icon
                |#{view_count}
            span(title="#{answer_count} answers")
                i.grey.exclamation.icon
                |#{answer_count}
            if creation_date
                span(title="created {{ufrom creation_date}}")
                    i.grey.clock.icon
                    |{{ufrom creation_date}}
            if last_modified_date
                i.pencil.icon
                |{{ufrom last_modified_date}}
            // .ui.large.label #{site}
            // .ui.large.label #{owner.display_name}
    .spacer