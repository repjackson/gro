template(name='trump')
    // unless current_subtrump
    //     .ui.basic.center.aligned.segment
    //         i.massive.yin.yang.loading.link.grey.icon.get_info.shadowed2
    .ui.stackable.grid
        .sixteen.wide.column
            .ui.inline.header trump tweets
            if selected_trump_tags
                // if many_tags
                //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                //         i.remove.icon
                each selected_trump_tags
                    +trump_unselect_tag
            .ui.icon.input
                i.search.icon
                input.search_trump(type='text' value=trump_query)
            each trump_result_tags
                // .ui.label #{this}
                +trump_tag_selector
                // .ui.large.label(title=count) #{name}
            div
            .ui.inline.header #{post_count}
            if skv_is 'trump_sort_direction' 1
                .ui.icon.compact.basic.tertiary.button.sort_down
                    i.caret.down.icon
            else
                .ui.icon.compact.basic.tertiary.button.sort_up
                    i.caret.up.icon
            .ui.icon.button.sort_retweet(class=retweet_class)
                i.large.refresh.icon
            .ui.icon.button.sort_favorite(class=fav_class)
                i.large.favorite.icon
            .ui.icon.compact.large.basic.small.button.sort_date(class=date_class)
                i.large.clock.icon
            // .ui.compact.basic.small.tertiary.button.limit_1
            //     |1
            // .ui.compact.basic.small.tertiary.button.limit_10
            //     |10
            .ui.icon.button.skip_left
                i.chevron.left.icon
            .ui.icon.button.skip_right
                i.chevron.right.icon
            |#{skip_value}
            .ui.small.input(title='skip number')
                input.skip_number(type='number')
            // img.ui.inline.image(src=data.header_img)
            // .ui.inline.header.pull_latest #{data.title}
            // +alpha
            .ui.inline.small.header 
                i.clock.icon
                |time tags
            each selected_trump_time_tags
                .ui.black.button.unselect_trump_time_tag #{this}
            each trump_time_tags
                .ui.compact.basic.button.select_trump_time_tag(class=subtrump_selector_class)
                    |#{name} 
                    small #{count}
            div
            .scrollin
                if trump_docs
                    .ui.four.stackable.cards 
                        each trump_docs
                            +trump_card
                else
                    .ui.basic.center.aligned.segment
                        i.big.loading.yin.yang.icon
        // .four.wide.column
        //     .ui.inline.small.header domains
        //     each selected_trump_domains
        //         .ui.button.unselect_trump_domain #{this}
        //     each trump_domain_tags
        //         .ui.compact.basic.button.select_domain(class=domain_selector_class)
        //             |#{name} 
        //             small #{count}
        //     div
        //     i.clock.icon            
        //     each trump_time_tags
        //         .ui.compact.basic.button.select_time_tag(class=domain_selector_class)
        //             |#{name} 
        //             small #{count}
        //     if in_dev
        //         +print_this
        //         // div
        //     with emotion_avg
        //         // .ui.list
        //         //     .item {{ to_percent avg_sent_score}}% sentiment
        //         //     .item {{ to_percent avg_joy_score}}% joy
        //         //     .item {{ to_percent avg_anger_score}}% anger
        //         //     .item {{ to_percent avg_sadness_score}}% sad
        //         //     .item {{ to_percent avg_disgust_score}}% disgust
        //         //     .item {{ to_percent avg_fear_score}}% fear
        //         // if is_positive
        //         //     span.say.ui.green.text(class="{{calculated_size doc_sentiment_score}}") {{ to_percent doc_sentiment_score }}% positive
        //         //         |&nbsp;
        //         //     div.rounded(style="height:5px;width:{{to_percent doc_sentiment_score}}%;background-color:green" title="{{to_percent doc_sentiment_score}}% #{doc_sentiment_label}")
        //         // else
        //         //     span.say.ui.red.text(class="{{calculated_size doc_sentiment_score}}") {{ to_percent doc_sentiment_score }}%  negative
        //         //         |&nbsp;
        //         //     div.rounded(style="height:5px;width:{{abs_percent doc_sentiment_score}}%;background-color:red" title="{{abs_percent doc_sentiment_score}}% #{doc_sentiment_label}")
        //         span.say.ui.green.text(class="{{calculated_size avg_sent_score}}") {{ to_percent avg_sent_score }}% sentiment 
        //             |&nbsp;
        //         div.rounded(style="height:5px;width:{{to_percent avg_sent_score}}%;background-color:green" title="{{to_percent avg_sent_score}}% joy")
        //         span.say.ui.green.text(class="{{calculated_size avg_joy_score}}") {{ to_percent avg_joy_score }}% joy 
        //             |&nbsp;
        //         div.rounded(style="height:5px;width:{{to_percent avg_joy_score}}%;background-color:green" title="{{to_percent avg_joy_score}}% joy")
        //         //- if above_50 'avg_sadness_score'
        //             //- .spacer
        //         span.say.ui.blue.text(class="{{calculated_size avg_sadness_score}}") {{ to_percent avg_sadness_score}}% sad 
        //             |&nbsp;
        //         div.rounded(style="height:5px;width:{{to_percent avg_sadness_score}}%;background-color:blue" title="{{to_percent avg_sadness_score}}% sad")
        //         //- if above_50 'avg_fear_score'
        //             //- .spacer
        //         span.say.ui.grey.text(class="{{calculated_size avg_fear_score}}") {{ to_percent avg_fear_score }}% fear 
        //             |&nbsp;
        //         div.rounded(style="height:5px;width:{{to_percent avg_fear_score}}%;background-color:grey" title="{{to_percent avg_fear_score}}% fear")
        //         //- if above_50 'avg_disgust_score'
        //             //- .spacer
        //         span.say.ui.orange.text(class="{{calculated_size avg_disgust_score}}") {{ to_percent avg_disgust_score }}% disgust 
        //             |&nbsp;
        //         div.rounded(style="height:5px;width:{{to_percent avg_disgust_score}}%;background-color:orange" title="{{to_percent avg_disgust_score}}% disgust")
        //         //- if above_50 'avg_anger_score'
        //             //- .spacer
        //         span.say.ui.red.text(class="{{calculated_size avg_anger_score}}") {{ to_percent avg_anger_score }}% anger 
        //             |&nbsp;
        //         div.rounded(style="height:5px;width:{{to_percent avg_anger_score}}%;background-color:red" title="{{to_percent avg_anger_score}}% anger")
            
        //     // .ui.list.mobile.hidden
        //         // .item.seg.say !{data.public_description}
        //         // .item.seg.say 
        //         //     |{{#markdown}} !{data.description} {{/markdown}}
        //         // .item 
        //         //     i.grey.lightning.icon
        //         //     |#{active_user_count} activeusers
        //         // .item 
        //         //     i.grey.users.icon
        //         //     |#{subscribers} subscribers
        //         // // .item 
        //         // //     strong #{audience}
        //         // a.item(href=url target="_window")
        //         //     |#{url}
        //         //     i.external.icon
        //         // .item
        //         //     |#{advertiser_category} ad category
        //         // .item #{dao_views} dao views    
        //         // .item created {{ufrom created_utc}}
        //         // .item state: #{trump_state}
        //         // // .item #{high_resolution_icon_url} high_resolution_icon_url
        //         // // .item #{favicon_url} favicon_url
        //         // // .item #{api_trump_parameter} api
        //         // .item #{trump_type} trump_type
        //         // .item main emotion: #{main_emotion}
        //         // .item 
        //         //     i.grey.thumbs.up.outline.icon
        //         //     |#{total_votes} votes
        //         // .item #{comment_count} comments

   
template(name='trump_card')
    .ui.card
        .content
            .ui.small.header(class=post_header_class) !{text}
            .ui.basic.label isRetweet: #{isRetweet}
            .ui.basic.label(title='is deleted')
                i.remove.icon
                |#{isDeleted}
            .ui.basic.label device: #{device}
            .ui.basic.label
                |#{favorites}
                i.heart.icon
            .ui.basic.label
                |#{retweets}
                i.refresh.icon
            .ui.basic.label date: {{from_now date}} {{trump_date date}}
            
            .ui.basic.label
                |isFlagged: #{isFlagged}
            each tags
                +flat_trump_tag_selector
                // a.ui.label.select_trump_tag #{this}
            each time_tags
                .ui.small.basic.label.set_time_tag #{this}
            if in_dev
                +print_this
            +doc_emotion
            .ui.big.icon.button.vote_up
                i.thumbs.up.icon
            |#{points} points
            .ui.big.icon.button.vote_down
                i.thumbs.down.icon
            .ui.fluid.icon.input
                i.plus.icon
                input.tag_tweet(type='text' placeholder='tag')
   
template(name='trump_tag_selector')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.basic.compact.tertiary.small.button.zoomer.select_tag(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='trump_unselect_tag')
    a.unselect_trump_tag.ui.black.compact.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_trump_tag_selector')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.basic.tertiary.compact.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{this}
        // if in_dev
        //     small #{count}


