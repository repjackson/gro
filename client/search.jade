template(name='home')
    .ui.stackable.grid
        .row
            .sixteen.wide.column
                // if skv_is 'nightmode' true
                //     i.moon.link.icon.toggle_nightmode
                // else
                //     i.lightbulb.link.icon.toggle_nightmode
                unless picked_tags
                    .ui.center.aligned.basic.segment
                        .ui.icon.big.input
                            i.search.icon
                            input.search_tag(type='text' value=query autofocus='' placeholder="search...")
                        div
                        +search_shortcut tag='math' icon='calculator'
                        +search_shortcut tag='camping' icon='campground'
                        +search_shortcut tag='business' icon='briefcase'
                        +search_shortcut tag='environment' icon='leaf'
                        +search_shortcut tag='money' icon='coins'
                        +search_shortcut tag='cat' icon='cat'
                        +search_shortcut tag='science' icon='flask'
                        +search_shortcut tag='video' icon='video'
                        +search_shortcut tag='gaming' icon='gamepad'
                        +search_shortcut tag='pics' icon='images'
                        +search_shortcut tag='medicine' icon='pills'
                        +search_shortcut tag='chess' icon='chess'
                        +search_shortcut tag='food' icon='food'
                        +search_shortcut tag='beer' icon='beer'
                        +search_shortcut tag='hotel' icon='bed'
                        +search_shortcut tag='winter' icon='snowflake'
                        +search_shortcut tag='photography' icon='camera'
                        +search_shortcut tag='dog' icon='dog'
                        +search_shortcut tag='covid' icon='radiation'
                        +search_shortcut tag='cheese' icon='cheese'
                        +search_shortcut tag='solar' icon='sun'
                        +search_shortcut tag='women' icon='venus'
                        +search_shortcut tag='men' icon='mars'
                        +search_shortcut tag='dungeons & dragons' icon='dice d20'
                        +search_shortcut tag='physics' icon='atom'
                        +search_shortcut tag='law' icon='balance scale'
                        +search_shortcut tag='books' icon='book'
                        +search_shortcut tag='biking' icon='biking'
                        +search_shortcut tag='news' icon='newspaper'
                        +search_shortcut tag='music' icon='music'
                        +search_shortcut tag='skiing' icon='skiing'
                        +search_shortcut tag='pizza' icon='pizza slice'
                        +search_shortcut tag='fish' icon='fish'
                        +search_shortcut tag='gardening' icon='seedling'
                        +search_shortcut tag='bible' icon='bible'
                        +search_shortcut tag='daoism' icon='yin yang'
                        +search_shortcut tag='car' icon='car'
                        +search_shortcut tag='tarot' icon='moon'
                            
                if picked_tags
                    .ui.icon.input
                        if is_loading
                            i.loading.yin.yang.icon
                        else
                            i.search.icon
                        input.search_tag(type='text' value=query autofocus='' placeholder="#{post_count}")
                        // .ui.label #{this}
                    
                    // if many_tags
                    //     a#clear_tags.ui.red.invert.icon.button.pick_term
                    //         i.remove.icon
                    each picked_tags
                        +unpick_tag
                    each result_tags
                        // .ui.label #{this}
                        +tag_picker
                        // .ui.label(title=count) #{name}
        .row
            .ui.four.wide.column
                +alpha
                each wikis
                    .ui.card
                        if watson.metadata.image
                            // a(href=url target='_window')
                            img.ui.image.toggle_view(src=watson.metadata.image)
                        .content
                            i.large.wikipedia.icon
                            a.ui.inline.header(href=url target='_window') #{title}
                            a.black_text(href=url target='_window')
                                |{{ trunc analyzed_text }}...
                            each ten_tags
                                +flat_tag_picker
                                // .ui.label.flat_tag_pick #{this}
                    // if one_post
                    //     .ui.stackable.one.column.grid
                    //         each rposts
                    //             +card
                            
                    // else if two_posts
                    //     .ui.stackable.three.centered.column.grid
                    //         each rposts
                    //             +card
                        // else if three_posts
                    // else
            if picked_tags
                .ui.eight.wide.column
                    +sort_direction_button
                    // +limit_button value=1
                    // +limit_button value=10
                    // +limit_button value=20
                    // +view_layout_button label='grid' icon='th'
                    // +view_layout_button label='list' icon='list'
                    +sort_button l='upvotes' i='thumbs up outline' key='data.ups'
                    +sort_button l='comments' i='chat outline' key='data.comment_count'
                    +sort_button l='joy' i='smile' c='green' key='rep_joy'
                    +sort_button l='anger' i='frown' c='red' key='rep_anger'
                    +sort_button l='sadness' i='frown' c='blue' key='rep_sadness'
                    +sort_button l='disgust' i='frown' c='orange' key='rep_disgust'
                    +sort_button l='fear' i='frown' c='grey' key='rep_fear'
                
                    .ui.stackable.one.column.grid.scrolling
                        each rposts
                            +card
                    //     .ui.basic.center.aligned.segment
                    //         i.big.loading.yin.yang.icon
                .ui.four.wide.column
                    .ui.inline.small.header
                        i.globe.icon
                        |domains
                    each picked_domains
                        a.ui.black.label.unpick_domain
                            |#{this}
                    each domain_results
                        a.ui.basic.label.pick_domain(class=domain_selector_class)
                            |#{name} 
                            small #{count}
                    div
                    .ui.inline.small.header
                        i.clock.icon    
                        |authors
                    each picked_authors
                        a.ui.black.label.unpick_author
                            |#{this}
                    each author_results
                        a.ui.basic.label.pick_author(class=domain_selector_class)
                            |#{name} 
                            small #{count}
                    // .ui.inline.header.pull_latest #{display_name}


template(name='search_shortcut')
    i.big.grey.link.icon.search_tag.zoomer(class=icon title=tag)

   
template(name='limit_button')
    // i.big.grey.link.icon.search_tag.zoomer(class=icon title=tag)
    .ui.circular.basic.compact.icon.button.set_limit(class=limit_button_class)
        |#{value}

template(name='card')
    .column.smallscroll
        // .ui.stackable.equal.width.compact.grid
        //     .row
        a.goto_post.pointer.zoomer
            if embed
                span.rounded.full
                    |!{embed}
                div
            else if is_image
                img.ui.fluid.zoomer.image.toggle_view(src=data.url)    
            else if watson.metadata.image
                // |metadata
                img.ui.inline.zoomer.image.toggle_view(src=watson.metadata.image)
                // else if data.thumbnail.length
            else if has_thumbnail
                a.view_post
                    img.ui.inline.zoomer.fluid.image.zoomer(src=data.thumbnail)    
        .content
            // a.ui.inline.header.view_post.zoomer(href="" class=post_header_class target='_window')
            a.ui.inline.small.header.goto_post.pointer(class=post_header_class title=domain)
                |!{data.title} 
                // span.inline.content
            |{{ufrom data.created_utc}}
            each unique_tags
                a.ui.basic.label.flat_tag_pick #{this}
            .ui.label #{data.domain}
            .ui.label 
                i.user.icon
                |#{data.author}
            a.black_text(href="r/#{sub}/post/#{_id}")
                |{{ trunc analyzed_text }}...
            +print_this
            // div
   
template(name='print_this')
    i.code.icon.print
   
template(name='unpick_tag')
    a.unpick.ui.black.image.large.label
        if term
            if term.watson.metadata.image
                img.ui.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

template(name='flat_tag_picker')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.basic.image.label.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.image.superzoom(src=term.watson.metadata.image )    
        strong #{this}
        // if in_dev
        //     small #{count}

template(name='tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    a.ui.basic.image.large.label.zoomer.pick_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.avatar.image.superzoom(src=term.watson.metadata.image)    
        strong #{name}
        // if in_dev
        //     small #{count}