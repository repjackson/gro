template(name='group')
    .ui.stackable.grid
        .row 
            .sixteen.wide.center.aligned.column
                .ui.inline.small.header    
                    |#{counter}
                .ui.inline.header    
                    |#{current_group}
                // a.ui.header(href=link title='link')
                //     i.link.icon
                //     |link
                if in_dev
                    +print_this
                // +voting_full
                // +array_view key='tags' label='tags' icon='tags' direct=true
                // +comments
                // .f11 #{description}
                // +image_link_view key='image' label='image' direct=true
                .ui.icon.button.add_post
                    i.plus.icon
                if selected_tags
                    // if many_tags
                    //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                    //         i.remove.icon
                    each selected_tags
                        +unselect_tag
                .ui.icon.input
                    i.search.icon
                    input.search_group_tag(type='text' value=group_query)
                each result_tags
                    // .ui.label #{this}
                    +tag_selector
                i.big.clock.grey.icon(title='when tags')
                if selected_time_tags
                    each selected_time_tags
                        a.unselect_time_tag.ui.active.large.compact.button(href='#')
                            strong #{this}
                each time_tags
                    .ui.compact.small.button.zoomer.select_time_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
                i.big.marker.grey.icon(title='where tags')
                if selected_location_tags
                    each selected_location_tags
                        a.unselect_location_tag.ui.active.large.compact.button(href='#')
                            strong #{this}
                each location_tags
                    .ui.compact.small.button.zoomer.select_location_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
                .ui.hidden.divider
            .sixteen.wide.column
                .ui.stackable.four.column.centered.grid
                    each posts
                        .center.aligned.column.medscroll
                            .content
                                a.header.zoomer(href="/#{current_group}/p/#{_id}") #{title}
                                if image_id
                                    a(href="/#{current_group}/p/#{_id}")
                                        img.ui.fluid.rounded.zoomer.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                                if image_link
                                    a(href="/#{current_group}/p/#{_id}")
                                        +image_link_view key='image_link' direct=true
                                if youtube_id
                                    +youtube_view key='youtube_id' label='youtube id' direct=true
                                if in_dev
                                    +text_edit key='group' label='slug' direct=true
                                a(href="/#{current_group}/p/#{_id}")
                                    |!{content}
                                    if raw
                                        |!{raw}
                                each tags
                                    +flat_tag_selector
                                    // .ui.small.label #{this}
                            // .ui.divider

                
                
template(name='tag_selector')
    // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.compact.circular.basic.button.zoomer.select_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='unselect_tag')
    a.unselect_tag.ui.large.active.compact.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_tag_selector')
    // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.compact.tiny.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        | #{this}
        // if in_dev
        //     small #{count}

template(name='post_view')
    with doc_by_id
        .ui.stackable.grid
            .row 
                .four.wide.column
                    .ui.segmen
                        a.ui.large.icon.button(href="/#{group}")
                            i.chevron.left.icon
                        .ui.large.inline.header #{title}
                        // div
                        // .ui.inline.grey.header {{from_now start_datetime}}
                        
                        if can_edit
                            a.edit_group_post(href="/#{group}/p/#{_id}/edit" title='edit')
                                i.large.link.pencil.icon
                        | #{views} views
                        +array_edit key='tags' label='tags' direct=true
                        // +voting_full
                        +link_view key='link' label='link' direct=true
    
                        +array_edit key='time_tags' label='time tags' icon='clock' direct=true
                        +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                .twelve.wide.column.scrolling
                    if image_link
                        a(href="/#{group}")
                            +image_link_view key='image_link' direct=true
                    if image_id
                        a(href="/#{group}")
                            img.ui.fluid.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                    if youtube_id
                        +youtube_view key='youtube_id' label='youtube id' direct=true
                    if raw 
                        |!{raw}
                    .say_this.say_body
                        |!{content}
                    div 
                    .spacer
                    .spacer
                    +comments
                    if watson
                        +watson_view

template(name='post_edit')
    with doc_by_id
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    a.ui.icon.green.big.button(href="/#{group}/p/#{_id}" title='save')
                        i.checkmark.big.icon
                    .ui.inline.header 
                        i.pencil.icon
                        |edit group post
                    i.large.link.red.remove.icon.delete_group_post
                    +image_edit key='image_id' label='image' direct=true
                    div 
                    +array_edit key='tags' label='tags' direct=true
                    +link_edit key='link' label='link' direct=true
                    +array_edit key='time_tags' label='time tags' icon='clock' direct=true
                    +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                    +raw_edit key='raw' label='raw' direct=true
                .twelve.wide.column
                    +text_edit key='title' label='title' direct=true
                    +html_edit key='content' label='content' direct=true
                    +image_link_edit key='image_link' direct=true
                    +youtube_edit key='youtube_id' label='youtube id' direct=true
        