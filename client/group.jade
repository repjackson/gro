template(name='group')
    .ui.stackable.grid
        .row 
            .sixteen.wide.column
                .ui.inline.header    
                    |#{current_group}
                .ui.icon.circular.basic.button.add_post
                    i.plus.icon
                if selected_tags
                    // if many_tags
                    //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                    //         i.remove.icon
                    each selected_tags
                        +unselect_tag
                .ui.icon.small.input
                    i.search.icon
                    input.search_group_tag(type='text' value=group_query placeholder="#{counter} results")
                    // .ui.label #{this}
                if result_tags.count
                    each result_tags
                        +tag_selector
                // else
                //     i.big.grey.loading.yin.yang.icon
            .four.wide.column.scrolling
                i.big.clock.grey.icon(title='when tags')
                if selected_time_tags
                    each selected_time_tags
                        a.unselect_time_tag.ui.active.large.compact.button(href='#')
                            strong #{this}
                each time_tags
                    a.ui.basic.large.label.zoomer.select_time_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
                div
                i.big.smile.grey.icon(title='where tags')
                if picked_emotion
                    each picked_emotion
                        a.unpick_emotion.ui.active.large.compact.button(href='#')
                            strong #{this}
                each emotion_results
                    if name
                        a.ui.basic.large.label.zoomer.pick_emotion(title="#{count} results" class="#{selector_class} #{thinking_class}")
                            strong #{name}
                div
                div
                i.big.marker.grey.icon(title='where tags')
                if selected_location_tags
                    each selected_location_tags
                        a.unselect_location_tag.ui.active.large.compact.button(href='#')
                            strong #{this}
                each location_tags
                    a.ui.basic.large.label.zoomer.select_location_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
                div
                i.big.users.grey.icon(title='where tags')
                if selected_people_tags
                    each selected_people_tags
                        a.unselect_people_tag.ui.active.large.compact.button(href='#')
                            strong #{this}
                each people_tags
                    a.ui.basic.large.label.zoomer.select_people_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
                div
                i.big.marker.grey.icon(title='where tags')
                if selected_timestamp_tags
                    each selected_timestamp_tags
                        a.unselect_timestamp_tag.ui.active.large.compact.button(href='#')
                            strong #{this}
                each timestamp_tags
                    a.ui.basic.large.label.zoomer.select_timestamp_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
                .ui.hidden.divider
                with emotion_avg
                    // .ui.list
                    //     .item {{ to_percent avg_sent_score}}% sentiment
                    //     .item {{ to_percent avg_joy_score}}% joy
                    //     .item {{ to_percent avg_anger_score}}% anger
                    //     .item {{ to_percent avg_sadness_score}}% sad
                    //     .item {{ to_percent avg_disgust_score}}% disgust
                    //     .item {{ to_percent avg_fear_score}}% fear
                    if kv_is 'doc_sentiment_label' 'positive'
                        span.say.ui.green.text(class="{{calculated_size doc_sentiment_score}}") {{ to_percent doc_sentiment_score }}% #{doc_sentiment_label}
                            |&nbsp;
                        div.rounded(style="height:5px;width:{{to_percent doc_sentiment_score}}%;background-color:green" title="{{to_percent doc_sentiment_score}}% #{doc_sentiment_label}")
                    else if kv_is 'doc_sentiment_label' 'negative'
                        span.say.ui.red.text(class="{{calculated_size doc_sentiment_score}}") {{ to_percent doc_sentiment_score }}%  #{doc_sentiment_label} 
                            |&nbsp;
                        div.rounded(style="height:5px;width:{{abs_percent doc_sentiment_score}}%;background-color:red" title="{{abs_percent doc_sentiment_score}}% #{doc_sentiment_label}")
                        
                    span.say.ui.green.text(class="{{calculated_size avg_sent_score}}") {{ to_percent avg_sent_score }}% joy 
                        |&nbsp;
                    div.rounded(style="height:5px;width:{{to_percent avg_sent_score}}%;background-color:green" title="{{to_percent avg_sent_score}}% joy")
          
                    span.say.ui.green.text(class="{{calculated_size avg_joy_score}}") {{ to_percent avg_joy_score }}% joy 
                        |&nbsp;
                    div.rounded(style="height:5px;width:{{to_percent avg_joy_score}}%;background-color:green" title="{{to_percent avg_joy_score}}% joy")
                    //- if above_50 'avg_sadness_score'
                        //- .spacer
                    span.say.ui.blue.text(class="{{calculated_size avg_sadness_score}}") {{ to_percent avg_sadness_score}}% sad 
                        |&nbsp;
                    div.rounded(style="height:5px;width:{{to_percent avg_sadness_score}}%;background-color:blue" title="{{to_percent avg_sadness_score}}% sad")
                    //- if above_50 'avg_fear_score'
                        //- .spacer
                    span.say.ui.grey.text(class="{{calculated_size avg_fear_score}}") {{ to_percent avg_fear_score }}% fear 
                        |&nbsp;
                    div.rounded(style="height:5px;width:{{to_percent avg_fear_score}}%;background-color:grey" title="{{to_percent avg_fear_score}}% fear")
                    //- if above_50 'avg_disgust_score'
                        //- .spacer
                    span.say.ui.orange.text(class="{{calculated_size avg_disgust_score}}") {{ to_percent avg_disgust_score }}% disgust 
                        |&nbsp;
                    div.rounded(style="height:5px;width:{{to_percent avg_disgust_score}}%;background-color:orange" title="{{to_percent avg_disgust_score}}% disgust")
                    //- if above_50 'avg_anger_score'
                        //- .spacer
                    span.say.ui.red.text(class="{{calculated_size avg_anger_score}}") {{ to_percent avg_anger_score }}% anger 
                        |&nbsp;
                    div.rounded(style="height:5px;width:{{to_percent avg_anger_score}}%;background-color:red" title="{{to_percent avg_anger_score}}% anger")

                
            .twelve.wide.column
                |sort by
                if skv_is 'group_sort_key' 'points'
                    .ui.circular.black.icon.button.set_sort_points
                        i.large.thumbs.up.icon
                else
                    .ui.circular.basic.icon.button.set_sort_points
                        i.large.thumbs.up.icon
                if skv_is 'group_sort_key' '_timestamp'
                    .ui.circular.black.icon.button.set_sort_timestamp
                        i.clock.large.icon
                else
                    .ui.circular.basic.icon.button.set_sort_timestamp
                        i.clock.large.icon
                if skv_is 'group_sort_key' 'views'
                    .ui.circular.black.icon.button.set_sort_views
                        i.eye.large.icon
                else
                    .ui.circular.basic.icon.button.set_sort_views
                        i.eye.large.icon
                .ui.inline.header
                    |view
                +group_view_mode key='video' icon='video'
                +group_view_mode key='image' icon='image'
                +group_view_mode key='content' icon='content'
                if one_post
                    .ui.one.column.centered.padded.grid.scrolling
                        each posts
                            +post_card_med
                else if two_posts
                    .ui.two.column.centered.padded.grid.scrolling
                        each posts
                            +post_card_med
                else 
                    .ui.stackable.two.column.centered.padded.grid.scrolling
                        if posts.count
                            each posts
                                +post_card
                        else
                            i.massive.grey.loading.yin.yang.icon

template(name='group_view_mode')
    .ui.circular.icon.button
        i.icon(class=icon)

     
template(name='post_card')     
    .column.medscroll
        .content
            a.ui.header.zoomer(href="/#{group}/p/#{_id}" class=post_header_class) #{title}
            if image_id
                a(href="/#{group}/p/#{_id}")
                    img.ui.fluid.rounded.zoomer.image(src="{{c.url image_id }}" class=currentUser.invert_class)
            if image_link
                a(href="/#{group}/p/#{_id}")
                    +image_link_view key='image_link' direct=true
            if youtube_id
                +youtube_view key='youtube_id' label='youtube id' direct=true
            // if is_admin
            //     +text_edit key='group' label='slug' direct=true
            if tone 
                +tone
            else 
                a.pointer.black_text.zoomer(href="/#{group}/p/#{_id}")
                    |!{content}
                // if raw
                //     |!{raw}
            a.ui.inline.grey.header(href="/#{group}/p/#{_id}") #{when}
            each tags
                +flat_tag_selector
            if is_admin 
                +remove_button
            +doc_emotion_small    
            span(title='views')
                i.grey.eye.icon
                |#{views}
            +voting
            +array_view key='people_tags' icon='user outline' direct=true
            +array_view key='time_tags' icon='clock' direct=true
            +array_view key='location_tags' icon='marker' direct=true
     
                
template(name='voting')
    i.thumbs.up.outline.link.large.icon.upvote
    .ui.inline.header #{points}
    i.thumbs.down.outline.link.large.icon.downvote
    
                
template(name='post_card_med')     
    .column
        .content
            a.ui.header.zoomer(href="/#{group}/p/#{_id}" class=post_header_class) #{title}
            if image_id
                a(href="/#{group}/p/#{_id}")
                    img.ui.fluid.rounded.zoomer.image(src="{{c.url image_id }}" class=currentUser.invert_class)
            if image_link
                a(href="/#{group}/p/#{_id}")
                    +image_link_view key='image_link' direct=true
            if youtube_id
                +youtube_view key='youtube_id' label='youtube id' direct=true
            // if is_admin
            //     +text_edit key='group' label='slug' direct=true
            a.pointer.black_text.zoomer(href="/#{group}/p/#{_id}")
                |!{content}
                if raw
                    |!{raw}
            a.ui.inline.grey.header(href="/#{group}/p/#{_id}") #{when}
            each tags
                +flat_tag_selector
            if is_admin 
                +remove_button
            +doc_emotion_small  
            +array_view key='people_tags' icon='user outline' direct=true
            +array_view key='time_tags' icon='clock' direct=true
            +array_view key='location_tags' icon='marker' direct=true
            
            +voting    
                // .ui.small.label #{this}
        // .ui.divider
     
                
                
template(name='tag_selector')
    // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.basic.image.large.label.zoomer.select_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.metadata.image
                img.ui.avatar.image.superzoom(src=term.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='unselect_tag')
    a.unselect_tag.ui.big.black.image.label(href='#')
        if term
            if term.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.metadata.image)    
        strong #{this}

        
        
template(name='flat_tag_selector')
    // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.compact.tiny.basic.image.label.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.metadata.image )    
        | #{this}
        // if in_dev
        //     small #{count}
template(name='group_post_view')
    with current_doc
        .ui.stackable.grid
            .row 
                .four.wide.column
                    a.ui.large.fluid.basic.button(href="/#{group}")
                        i.chevron.left.icon
                        |#{group}
                    .ui.basic.segment
                        .ui.large.inline.header #{title}
                        // div
                        .ui.grey.header {{when}}
                        +voting
                        if can_edit
                            a.edit_group_post(href="/#{group}/p/#{_id}/edit" title='edit')
                                i.large.link.pencil.icon
                        | #{views} views
                        +array_edit key='tags' label='tags' direct=true
                        // +voting_full
                        +link_view key='link' label='link' direct=true
    
                        +array_edit key='people_tags' label='people tags' icon='user outline' direct=true
                        +array_edit key='time_tags' label='time tags' icon='clock' direct=true
                        +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                        +call_tone
                .twelve.wide.column.scrollin
                    if tone
                        +tone
                    if image_link
                        a(href="/#{group}")
                            +image_link_view key='image_link' direct=true
                    if image_id
                        a(href="/#{group}")
                            img.ui.fluid.image.pointer(src="{{c.url image_id }}" class=currentUser.invert_class)
                    if youtube_id
                        +youtube_view key='youtube_id' label='youtube id' direct=true
                    if raw 
                        |!{raw}
                    .say_this.say_body.black_text
                        |!{content}
                    div 
                    .spacer
                    .spacer
                    +comments
                    if watson
                        +watson_view

template(name='group_post_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    a.ui.icon.green.big.button(href="/#{group}/p/#{_id}" title='save')
                        i.checkmark.big.icon
                    .ui.inline.header 
                        i.pencil.icon
                        |edit group post
                    i.large.link.red.remove.icon.delete_group_post
                    +image_edit key='image_id' label='image' direct=true
                    div 
                    +array_edit key='tags' label='tags' direct=true
                    +link_edit key='link' label='link' direct=true
                    +array_edit key='time_tags' label='time tags' icon='clock' direct=true
                    +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                    +array_edit key='people_tags' label='people tags' icon='user' direct=true
                    // +raw_edit key='raw' label='raw' direct=true
                .twelve.wide.column
                    +text_edit key='title' label='title' direct=true
                    +image_link_edit key='image_link' direct=true
                    +youtube_edit key='youtube_id' label='youtube id' direct=true
                    +html_edit key='content' label='content' direct=true