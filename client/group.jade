template(name='group')
    .ui.stackable.grid
        .twelve.wide.column.seg
            .ui.inline.small.header    
                |#{counter}
            .ui.inline.header    
                |#{current_group}
            // a.ui.header(href=link title='link')
            //     i.link.icon
            //     |link
            if in_dev
                +print_this
            // +voting_full
            // +array_view key='tags' label='tags' icon='tags' direct=true
            // +comments
            // .f11 #{description}
            // +image_link_view key='image' label='image' direct=true
            .ui.icon.circular.basic.button.add_post
                i.plus.icon
            if selected_tags
                // if many_tags
                //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                //         i.remove.icon
                each selected_tags
                    +unselect_tag
            .ui.icon.input
                i.search.icon
                input.search_tag(type='text' value=query)
                // .ui.label #{this}
            if result_tags.count
                each result_tags
                    +tag_selector
            else
                i.big.grey.loading.yin.yang.icon
        
            .ui.inline.header.get_info #{current_group}
            div
            .ui.inline.header #{post_count}
            if skv_is 'sort_direction' 1
                .ui.icon.compact.basic.circular.button.sort_down
                    i.caret.down.icon
            else
                .ui.icon.compact.basic.circular.button.sort_up
                    i.caret.up.icon
            .ui.icon.compact.small.circular.basic.button.sort_created(class=sort_created_class)
                i.clock.icon
            .ui.icon.compact.small.circular.basic.button.sort_ups(class=sort_ups_class)
                i.thumbs.up.icon
            if skv_is 'view_detail' true
                .ui.black.compact.icon.circular.basic.button.toggle_detail
                    i.list.icon
                    // |detail
            else
                .ui.compact.icon.circular.basic.button.toggle_detail
                    i.minus.icon
                    // |simple
                // i.line.chart.icon
            if skv_is 'view_layout' 'grid'
                .ui.compact.icon.circular.basic.button.set_grid(class=grid_class) 
                    i.th.icon
                    // |grid
            else
                .ui.icon.compact.circular.basic.button.set_grid(class=grid_class) 
                    i.th.icon
            if skv_is 'view_layout' 'list'
                .ui.compact.icon.circular.basic.button.set_list(class=list_class)
                    i.list.large.icon
                    // |list
            else
                .ui.icon.compact.circular.basic.button.set_list(class=list_class)
                    i.list.large.icon
            .scrolling
                if posts.count
                    if skv_is 'view_layout' 'grid'
                        .ui.stackable.three.column.grid 
                            each posts
                                +post_card_small
                    else if skv_is 'view_layout' 'list'
                        each posts
                            +doc_item
                else
                    .ui.center.aligned.basic.segment
                        i.massive.grey.loading.yin.yang.icon
        .four.wide.column.scrolling.seg
            // +alpha
            i.big.marker.grey.icon(title='where tags')
            if selected_location_tags
                each selected_location_tags
                    a.unselect_location_tag.ui.active.large.compact.button(href='#')
                        strong #{this}
            each location_tags
                .ui.compact.small.button.zoomer.select_location_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                    strong #{name}
            if Locations
                .ui.header
                    i.marker.icon
                    |locations
                each locations
                    .ui.link.label.pick_Location #{name}
            if HealthConditions
                .ui.grey.header 
                    i.doctor.icon
                    |health conditions
                each HealthConditions
                    .ui.link.label.select_healthcondition #{name}
            if Persons
                .ui.header 
                    i.user.icon
                    |people
                each Persons
                    .ui.label.select_person #{name}
            if Organizations
                .ui.header 
                    i.building.icon
                    |organizations
                each Organizations
                    .ui.label.select_organization #{name}
            if Companies
                .ui.header company
                each companies
                    .ui.label.select_company #{name}
            i.big.globe.grey.icon
            if selected_domain
                each selected_domain
                    .ui.active.button.unselect_domain
                        |#{this}
            each domain_tags
                .ui.compact.basic.circular.button.select_domain(class=domain_selector_class)
                    |#{name} 
                    // small #{count}
            div
            i.clock.big.grey.icon            
            if selected_time_tags
                each selected_time_tags
                    .ui.active.button.unselect_time_tag
                        |#{this}
            each time_tags
                .ui.compact.basic.circular.button.select_time_tag(class=domain_selector_class)
                    |#{name} 
                    // small #{count}
            div
            i.user.big.grey.icon            
            if selected_authors
                each selected_authors
                    .ui.active.basic.circular.button.unselect_author
                        |#{this}
            each authors
                .ui.compact.basic.circular.button.select_author(class=domain_selector_class)
                    |#{name} 
                    // small #{count}
            // .ui.inline.header.pull_latest #{display_name}
            if in_dev
                +print_this
                // div
            with emotion_avg
                // .ui.list
                //     .item {{ to_percent avg_sent_score}}% sentiment
                //     .item {{ to_percent avg_joy_score}}% joy
                //     .item {{ to_percent avg_anger_score}}% anger
                //     .item {{ to_percent avg_sadness_score}}% sad
                //     .item {{ to_percent avg_disgust_score}}% disgust
                //     .item {{ to_percent avg_fear_score}}% fear
                // if is_positive
                //     span.say.ui.green.text(class="{{calculated_size doc_sentiment_score}}") {{ to_percent doc_sentiment_score }}% positive
                //         |&nbsp;
                //     div.rounded(style="height:5px;width:{{to_percent doc_sentiment_score}}%;background-color:green" title="{{to_percent doc_sentiment_score}}% #{doc_sentiment_label}")
                // else
                //     span.say.ui.red.text(class="{{calculated_size doc_sentiment_score}}") {{ to_percent doc_sentiment_score }}%  negative
                //         |&nbsp;
                //     div.rounded(style="height:5px;width:{{abs_percent doc_sentiment_score}}%;background-color:red" title="{{abs_percent doc_sentiment_score}}% #{doc_sentiment_label}")
                span.say.ui.green.text(class="{{calculated_size avg_sent_score}}") {{ to_percent avg_sent_score }}% sentiment 
                    |&nbsp;
                div.rounded(style="height:5px;width:{{to_percent avg_sent_score}}%;background-color:green" title="{{to_percent avg_sent_score}}% joy")
                span.say.ui.green.text(class="{{calculated_size avg_joy_score}}") {{ to_percent avg_joy_score }}% joy 
                    |&nbsp;
                div.rounded(style="height:5px;width:{{to_percent avg_joy_score}}%;background-color:green" title="{{to_percent avg_joy_score}}% joy")
                //- if above_50 'avg_sadness_score'
                    //- .spacer
                span.say.ui.blue.text(class="{{calculated_size avg_sadness_score}}") {{ to_percent avg_sadness_score}}% sad 
                    |&nbsp;
                div.rounded(style="height:5px;width:{{to_percent avg_sadness_score}}%;background-color:blue" title="{{to_percent avg_sadness_score}}% sad")
                //- if above_50 'avg_fear_score'
                    //- .spacer
                span.say.ui.grey.text(class="{{calculated_size avg_fear_score}}") {{ to_percent avg_fear_score }}% fear 
                    |&nbsp;
                div.rounded(style="height:5px;width:{{to_percent avg_fear_score}}%;background-color:grey" title="{{to_percent avg_fear_score}}% fear")
                //- if above_50 'avg_disgust_score'
                    //- .spacer
                span.say.ui.orange.text(class="{{calculated_size avg_disgust_score}}") {{ to_percent avg_disgust_score }}% disgust 
                    |&nbsp;
                div.rounded(style="height:5px;width:{{to_percent avg_disgust_score}}%;background-color:orange" title="{{to_percent avg_disgust_score}}% disgust")
                //- if above_50 'avg_anger_score'
                    //- .spacer
                span.say.ui.red.text(class="{{calculated_size avg_anger_score}}") {{ to_percent avg_anger_score }}% anger 
                    |&nbsp;
                div.rounded(style="height:5px;width:{{to_percent avg_anger_score}}%;background-color:red" title="{{to_percent avg_anger_score}}% anger")

                
                
                
template(name='tag_selector')
    // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.compact.circular.tertiary.button.zoomer.select_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.avatar.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='unselect_tag')
    a.unselect_tag.ui.large.active.circular.compact.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_tag_selector')
    // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.compact.tiny.basic.circular.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        | #{this}
        // if in_dev
        //     small #{count}

template(name='post_view')
    with doc_by_id
        .ui.stackable.grid
            .row 
                .four.wide.column.scrolling
                    .ui.segmen
                        a.ui.large.circular.button(href="/#{group}")
                            i.chevron.left.icon
                            |#{group}
                        .ui.inline.header #{title}
                        // div
                        // .ui.inline.grey.header {{from_now start_datetime}}
                        
                        if in_dev
                            a.edit_post(href="/#{group}/p/#{_id}/edit" title='edit')
                                i.large.link.pencil.circular.icon
                        div
                        span(title='views')
                            | #{views}
                            i.grey.eye.icon
                        +array_edit key='tags' label='tags' direct=true
                        // +voting_full
                        +link_view key='link' label='link' direct=true
    
                        +array_edit key='time_tags' label='time tags' icon='clock' direct=true
                        +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                .twelve.wide.column.scrolling
                    if image_link
                        a(href="/#{group}")
                            +image_link_view key='image_link' direct=true
                    if image_id
                        a(href="/#{group}")
                            img.ui.fluid.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                    if youtube_id
                        +youtube_view key='youtube_id' label='youtube id' direct=true
                    if raw 
                        |!{raw}
                    .say_this.say_body
                        |!{content}
                    div 
                    .spacer
                    .spacer
                    +comments
                    if watson
                        +watson_view
                        +watson_full
                // .twelve.wide.column.scrolling

template(name='post_edit')
    with doc_by_id
        .ui.stackable.padded.grid
            .row
                .four.wide.column.scrolling
                    a.ui.icon.red.circular.big.button(href="/#{group}/p/#{_id}" title='save')
                        i.checkmark.big.icon
                    .ui.inline.header 
                        i.pencil.icon
                        |edit group post
                    i.large.link.red.remove.icon.delete_post
                    +image_edit key='image_id' label='image' direct=true
                    div 
                    +array_edit key='tags' label='tags' direct=true
                    +link_edit key='link' label='link' direct=true
                    +array_edit key='time_tags' label='time tags' icon='clock' direct=true
                    +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                    +raw_edit key='raw' label='raw' direct=true
                .twelve.wide.column.scrolling
                    +text_edit key='title' label='title' direct=true
                    +html_edit key='content' label='content' direct=true
                    +image_link_edit key='image_link' direct=true
                    +youtube_edit key='youtube_id' label='youtube id' direct=true
        
        
        
        
        
        
        
        

   
   
template(name='post_card_small')
    .center.aligned.column.medscroll
        .content
            a.ui.header.zoomer(href="/#{group}/p/#{_id}") #{title}
            if image_id
                a(href="/#{group}/p/#{_id}")
                    img.ui.fluid.rounded.zoomer.image(src="{{c.url image_id }}" class=currentUser.invert_class)
            if image_link
                a(href="/#{group}/p/#{_id}")
                    +image_link_view key='image_link' direct=true
            if youtube_id
                +youtube_view key='youtube_id' label='youtube id' direct=true
            if is_admin
                +text_edit key='group' label='slug' direct=true
            a(href="/#{group}/p/#{_id}")
                |!{content}
                if raw
                    |!{raw}
            each tags
                +flat_tag_selector
            if in_dev
                +print_this
                +remove_button
            a.ui.circular.icon.button(href="/#{group}/p/#{_id}")
                i.right.chevron.icon
    
        // .ui.stackable.equal.width.compact.grid
        //     .row
        if embed
            span.rounded.full
                |!{embed}
            div
        else if is_image
            a.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
                img.ui.fluid.zoomer.rounded.image.toggle_view(src=data.url)
        else if watson.metadata.image.length
            a.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
                img.ui.fluid.zoomer.rounded.image.toggle_view(src=watson.metadata.image)
        else if data.thumbnail_width
            a.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
                img.ui.fluid.zoomer.rounded.image.zoomer(src=data.thumbnail)    
        // // else if data.thumbnail.length
        //     .column
        //         a.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
        //             img.ui.rounded.inline.image.zoomer(src=data.thumbnail)    
        .content
            a.ui.center.aligned.header.view_post.zoomer(href="/r/#{group}/post/#{_id}" class=post_header_class)
                |!{data.title} 
            | #{data.ups}
            i.thumbs.up.outline.grey.icon
            | #{data.num_comments}
            i.comment.outline.grey.icon
            i.clock.icon
            each time_tags
                .ui.tiny.basic.circular.label #{this}
            a.ui.basic.label(href="/u/#{data.author}")
                |#{data.author}
            if watson
                +doc_emotion_small        
                
                // span.inline.content
                // span.inline.content
            if in_dev
                +print_this
   
template(name='doc_item')                  
    .ui.ite.seg
        unless skv_is 'view_detail' true
            // .ui.stackable.equal.width.compact.grid
            //     .row
            if embed
                span.rounded.full
                    |!{embed}
                div
            else if is_image
                .column
                    a.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
                        img.ui.fluid.rounded.image.toggle_view(src=data.url)
            else if watson.metadata.image.length
                .column
                    a.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
                        img.ui.rounded.inline.image.toggle_view(src=watson.metadata.image)
            else if data.thumbnail.length
                .column
                    a.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
                        img.ui.rounded.inline.image.zoomer(src=data.thumbnail)    
            // else if data.thumbnail.length
            //     .column
            //         a.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
            //             img.ui.rounded.inline.image.zoomer(src=data.thumbnail)    
            // .column
            a.ui.inline.header.view_post.zoomer(href="/r/#{group}/post/#{_id}" class=post_header_class)
                strong #{data.ups}:
                |!{data.title} 
                // span.inline.content
            if watson.analyzed_text
                // .spacer
                a.f11.view_post(href="/r/#{group}/post/#{_id}" class=post_header_class)
                    |{{trunc watson.analyzed_text}}...
            .ui.label 
                i.clock.icon
                |{{ufrom data.created}}
                small ({{long_date data.created}})
            .ui.label(title='domain') #{data.domain}
            // each tags
            //     +flat_sub_tag_selector
            if in_dev
                +print_this
            // if watson
            //     +doc_emotion_small
            // if skv_is 'view_detail' true
            // a.ui.header.view_post.zoomer(href="/r/#{group}/post/#{_id}" class=post_header_class)
            //     strong #{data.ups}:
            //     |!{data.title} 
            // span.inline.content
                    
            a.say.goto_post(href="/r/#{group}/post/#{_id}" class=post_header_class) !{data.body}
            a.say(href="/r/#{group}/post/#{_id}" class=post_header_class) !{data.html}
            // .spacer
            // if parsed_selftext_html
            //     .ui.segment
            //         |!{parsed_selftext_html}
            // if data.selftext
            //     // .ui.segment
            //     .ui.segment.say
            //         |{{#markdown}} {{data.selftext}} {{/markdown}}
            // else if data.body
            //     div
            //     .ui.segment.say
            //         |{{nl2br data.body}}
            // if data.body_html
            //     div
            //     a.pointer.say(href="/r/#{group}/post/#{_id}" class=post_header_class)
            //         |!{data.body_html}
            
            each tags
                +flat_sub_tag_selector
            // if watson
            //     +doc_emotion_small
            a.ui.inline.header(href="/u/#{data.author}")
                |#{data.author}
    


template(name='sub_tag_selector')
    // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.compact.tertiary.circular.button.zoomer.select_sub_tag(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='sub_unselect_tag')
    a.unselect_sub_tag.ui.active.compact.basic.circular.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_sub_tag_selector')
    // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.compact.basic.circular.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{this}
        // if in_dev
        //     small #{count}
// template(name='flat_sub_ruser_tag_selector')
//     // a.ui.big.image.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
//     .ui.compact.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
//         if term
//             if term.watson.metadata.image
//                 img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
//         strong #{this}
//         // if in_dev
//         //     small #{count}
        