template(name='group')
    .ui.stackable.padded.grid
        .row 
            .sixteen.wide.center.aligned.column
                .ui.center.aligned.inline.header    
                    |#{current_slug}
                // a.ui.header(href=link title='link')
                //     i.link.icon
                //     |link
                if in_dev
                    +print_this
                // +voting_full
                // +array_view key='tags' label='tags' icon='tags' direct=true
                // +comments
                // .f11 #{description}
                // +image_view key='image' label='image' direct=true
                .ui.inline.header
                    |#{counter} posts
                .ui.circular.basic.icon.button.add_post
                    i.plus.icon
                if selected_tags
                    // if many_tags
                    //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                    //         i.remove.icon
                    each selected_tags
                        +unselect_tag
                .ui.icon.input
                    i.search.icon
                    input.search_group_tag(type='text' value=group_query)
                each result_tags
                    // .ui.label #{this}
                    +tag_selector
                i.big.clock.icon
                if selected_time_tags
                    each selected_time_tags
                        a.unselect_time_tag.ui.active.large.compact.button(href='#')
                            strong #{this}
                each group_time_tags
                    .ui.basic.compact.small.button.zoomer.select_time_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
                i.big.marker.icon
                if selected_location_tags
                    each selected_location_tags
                        a.unselect_location_tag.ui.active.large.compact.button(href='#')
                            strong #{this}
                each group_location_tags
                    .ui.basic.compact.small.button.zoomer.select_location_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
                .ui.hidden.divider
            .sixteen.wide.column
                .ui.stackable.equal.width.divided.centered.grid
                    each posts
                        .column
                            .content.medscroll
                                a.header(href="/group/#{current_group}/post/#{_id}") #{title}
                                if youtube_id
                                    +youtube_view key='youtube_id' label='youtube id' direct=true
    
                                a(href="/group/#{current_group}/post/#{_id}")
                                    |!{content}
                                    if raw
                                        |!{raw}
                                each tags
                                    +flat_tag_selector
                                    // .ui.small.basic.label #{this}
                                +text_edit key='group' label='slug' direct=true
                            .ui.divider

                
                
template(name='tag_selector')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.large.tertiary.button.zoomer.select_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='unselect_tag')
    a.unselect_tag.ui.large.active.compact.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_tag_selector')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.basic.compact.tiny.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        | #{this}
        // if in_dev
        //     small #{count}

                