template(name='family')
    .ui.stackable.padded.grid
        .five.wide.column
            // .ui.header my 
            // .ui.header posts
            .ui.icon.button.add_fam_post
                i.plus.icon
            // .ui.input
            //     input.add_fam_post(type='text' placeholder='add')
            // .ui.segment
            //     a.ui.header(href="/r/news")
            //         i.globe.icon
            //         |world news
            //     div
            //     a.ui.header(href="/r/politics")
            //         i.newspaper.icon
            //         |politics
            if selected_family_tags
                // if many_tags
                //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                //         i.remove.icon
                each selected_family_tags
                    +family_unselect_tag
            .ui.icon.input
                i.search.icon
                input.search_family_tag(type='text' value=family_query)
            each family_result_tags
                // .ui.label #{this}
                +family_tag_selector
                // .ui.large.label(title=count) #{name}
            div
            .ui.inline.small.header 
                i.marker.icon
                |locations
            each selected_location_tags
                .ui.button.unselect_location_tag
                    |#{this}
            each family_location_tags
                .ui.compact.basic.button.select_location_tag(class=domain_selector_class)
                    |#{name} 
                    // small #{count}
            div
            .ui.small.inline.header 
                i.clock.icon
                |time tags
            each selected_time_tags
                .ui.button.unselect_time_tag
                    |#{this}
            each family_time_tags
                .ui.compact.basic.button.select_time_tag(class=domain_selector_class)
                    |#{name} 
                    // small #{count}
            // each selected_family_People
            //     .ui.button.unselect_family_People #{this}
            // each family_People_tags
            //     .ui.compact.basic.button.select_domain(class=domain_selector_class)
            //         |#{name} 
            //         small #{count}
        .eleven.wide.column
            .ui.inline.header #{post_count}
            // if skv_is 'family_sort_direction' 1
            //     .ui.icon.compact.basic.tertiary.button.sort_down
            //         i.caret.down.icon
            // else
            //     .ui.icon.compact.basic.tertiary.button.sort_up
            //         i.caret.up.icon
            // .ui.icon.button.sort_retweet(class=retweet_class)
            //     i.refresh.icon
            // .ui.icon.button.sort_favorite(class=fav_class)
            //     i.favorite.icon
            // .ui.icon.compact.basic.small.button.sort_date(class=date_class)
            //     i.clock.icon
            // // .ui.compact.basic.small.tertiary.button.limit_1
            // //     |1
            // // .ui.compact.basic.small.tertiary.button.limit_10
            // //     |10
            // .ui.icon.circular.basic.button.skip_left
            //     i.chevron.left.icon
            // .ui.icon.circular.basic.button.skip_right
            //     i.chevron.right.icon
            // |#{skip_value}
            // .ui.small.input(title='skip number')
            //     input.skip_number(type='number')
            // img.ui.inline.image(src=data.header_img)
            // .ui.inline.header.pull_latest #{data.title}
            // +alpha
            // div
            // .scrolling
            //     if family_docs
            //         .ui.four.stackable.cards 
            //             each family_docs
            //                 +family_card
            //     else
            //         .ui.basic.center.aligned.segment
            //             i.big.loading.yin.yang.icon
        
            // .ui.header photos
            .ui.three.stackable.cards.scrolling
                each tribe_posts
                    +family_card

   
template(name='family_card')
    .ui.card
        a(href="/post/#{_id}/view")
            img.ui.image(src="{{c.url image_id }}" class=currentUser.invert_class)
        .content
            a.ui.header(href="/post/#{_id}/view") #{title}
            .ui.small.header(class=post_header_class) !{text}
            // +array_view key='tags' label='tags' direct=true
            // +array_view key='location_tags' direct=true
            // +array_view key='time_tags' direct=true
            // +array_view key='people_tags' direct=true
            each tags
                +flat_family_tag_selector
                // a.ui.label.select_family_tag #{this}
            each family_time_tags
                .ui.small.basic.label.set_time_tag #{this}
            if in_dev
                +print_this
            // +doc_emotion
            // .ui.circular.basic.icon.button.vote_up
            //     i.thumbs.up.icon
            // |#{points}
            // .ui.circular.basic.icon.button.vote_down
            //     i.thumbs.down.icon
            // .ui.fluid.icon.input
            //     i.plus.icon
            //     input.tag_tweet(type='text' placeholder='tag')
   
template(name='family_tag_selector')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.basic.compact.tertiary.small.button.zoomer.select_tag(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='family_unselect_tag')
    a.unselect_family_tag.ui.black.compact.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_family_tag_selector')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.basic.tertiary.compact.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{this}
        // if in_dev
        //     small #{count}


                