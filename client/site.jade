template(name='site_page')
    with current_site
        .ui.stackable.padded.grid
            .row
                .three.wide.right.aligned.column
                    // a.ui.circular.icon.button(href='/')
                    //     i.large.home.icon
                    img.get_info.mobile.hidden(src=high_resolution_icon_url )
                    img.get_info(src=logo_url )
                    // img(src=icon_url)
                    // .ui.segment(style="background-color:#{styling.tag_background_color}")
                    // .ui.label #{tag_background_color}: tag_background_color
                    // .ui.label #{tag_foreground_color}: tag_foreground_color
                    // .ui.label #{link_color}: link_color
                    // .ui.grey.small.header 
                    //     |related sites
                    // .ui.inline.header !{name}
                    .ui.animated.selection.list
                        each related_sites
                            a.item(href="/site/#{api_site_parameter}") 
                                i.fork.icon
                                |!{name}
                        // .ui.list 
                        //     .item relation: #{relation}
                        //     .item api_site_parameter: #{api_site_parameter}
                        //     .item site_url: #{site_url}
                    a(href="https://www.twitter.com/#{twitter_account}" target='_window' title=twitter_account)
                        i.large.link.twitter.icon
                    a.ui.circular.basic.disabled.button(href="/site/#{site}/questions")
                        i.question.icon
                        |questions
                    a.ui.circular.basic.disabled.button(href="/site/#{site}/users")
                        i.user.icon
                        |users
                    a.ui.circular.basic.disabled.button(href="/site/#{site}/tags")
                        i.tags.icon
                        |tags
                        
                    .ui.grey.center.aligned.header 
                        |#{site_users.count}
                        i.users.icon
                    .ui.selection.animated.horizontal.list.smallscroll
                        each site_users
                            a.item(href="/site/#{site}/user/#{user_id}") 
                                img.ui.avatar.image(src=profile_image)
                                .content
                                    .header
                                        |#{display_name}
                                        small #{reputation}
                                    .description
                                        |!{location}
                    // +comments
                    // +voting_full
                .nine.wide.column
                    if selected_tags
                        // if many_tags
                        //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                        //         i.remove.icon
                        each selected_tags
                            +unselect_tag
                    .ui.icon.large.transparent.input
                        i.search.icon
                        input.search_site(type='text')
                    each site_tags
                        +stack_tag_selector
                        // .ui.large.label(title=count) #{name}
                    div
                    if skv_is 'sort_direction' 1
                        .ui.icon.compact.circular.basic.button.sort_down
                            i.caret.down.icon
                    else
                        .ui.icon.compact.circular.basic.button.sort_up
                            i.caret.up.icon
                    if skv_is 'view_bounties' 1
                        .ui.compact.circular.basic.button.unview_bounties
                            i.check.icon
                            |viewing bounties
                    else
                        .ui.compact.circular.basic.button.view_bounties
                            i.money.icon
                            |view bounties
                    if skv_is 'view_unanswered' 1
                        .ui.compact.circular.basic.button.unview_unanswered
                            i.question.icon
                            |viewing unanswered
                    else
                        .ui.compact.circular.basic.button.view_unanswered
                            i.question.icon
                            |view unanswered
                    .ui.compact.circular.basic.small.button.limit_1
                        |1
                    .ui.compact.circular.basic.small.button.limit_10
                        |10
                    .ui.icon.compact.large.circular.basic.small.button.sort_timestamp
                        i.clock.icon
                    .ui.icon.compact.large.circular.basic.small.button.set_points
                        i.line.chart.icon
                    if skv_is 'view_detail' true
                        .ui.icon.active.large.circular.button.toggle_detail
                            i.list.large.icon
                    else
                        .ui.icon.compact.large.circular.basic.button.toggle_detail
                            i.list.large.icon
                        // i.line.chart.icon
                    // .ui.icon.compact.large.button 
                    //     i.th.icon
                    // .ui.icon.compact.large.button 
                    //     i.list.icon
                    .ui.selection.link.large.list.medscroll
                        each site_questions
                            a.item.view_question.zoomer(href="/site/#{site}/doc/#{_id}")
                                // if watson.metadata.image
                                //     img.ui.avatar.invert.image(src=watson.metadata.image)    
                                .content
                                    .header 
                                        if is_answered
                                            i.green.checkmark.large.icon
                                        |!{title} 
                                        .ui.label #{score}
                                        .ui.small.basic.label 
                                            i.tag.grey.icon
                                            |#{tags.length}
                                    // if skv_is 'view_detail' true
                                    // i.tag.grey.icon
                                    if skv_is 'view_detail' true
                                        .ui.horizontal.list
                                            each tags
                                                .item #{this}
                                        .ui.horizontal.list
                                            with owner
                                                a.ui.small.header.item(href="/site/#{../site}/user/#{user_id}")
                                                    img.ui.avatar.image(src=profile_image)
                                                    |#{display_name}
                                                    small #{reputation}
                                            // |#{_when}
                                            if last_edit_date
                                                .item updated {{ufrom last_edit_date}}
                                            if creation_dat
                                                .item created {{ufrom creation_dat}}
                                        // +comments
                                        // +voting_full
                                        +doc_emotion_small
                                            // .ui.label user_id #{user_id}
                .four.wide.column
                    i.big.users.icon
                    each site_organizations
                        // .ui.label hi #{name}
                        +stack_tag_selector
                        // .ui.large.label(title=count) #{name}
                    div
                    i.big.marker.icon
                    each site_locations
                        // .ui.label hi #{name}
                        +stack_tag_selector
                        // .ui.large.label(title=count) #{name}
                    div
                    i.big.business.icon
                    each site_companys
                        // .ui.label hi #{name}
                        +stack_tag_selector
                        // .ui.large.label(title=count) #{name}
                    div
                    i.big.user.icon
                    each site_persons
                        // .ui.label hi #{name}
                        +stack_tag_selector
                        // .ui.large.label(title=count) #{name}
                    div
                
                    +comments
                    .ui.small.list.mobile.hidden
                        .item 
                            strong #{audience}
                        a.item(href=site_url target="_window")
                            |#{site_url}
                            i.external.icon
                        .item open beta {{ufrom open_beta_date}}
                        .item closed beta {{ufrom closed_beta_date}}
                        if launch_date
                            .item launched {{ufrom launch_date}}
                        .item state: #{site_state}
                        // .item #{high_resolution_icon_url} high_resolution_icon_url
                        // .item #{favicon_url} favicon_url
                        // .item #{api_site_parameter} api
                        // .item #{site_type} site_type
                        .item main emotion: #{main_emotion}
                        .item new_active_users: #{new_active_users}
                        .item total_users: #{total_users}
                        .item badges_per_minute: #{badges_per_minute}
                        .item #{total_badges} badges
                        .item #{total_votes} votes
                        .item #{total_comments} comments
                        .item #{answers_per_minute} answers/min
                        .item #{questions_per_minute} questions/min
                        .item #{total_questions} questions
                        .item #{total_answers} answers
                        .item #{total_accepted} accepted
                        .item #{total_unanswered} unanswered
                        // .item api_revision: #{api_revision}
                    if in_dev
                        +array_edit k='tags' d=true



template(name='stack_tag_selector')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.zoomer.tertiary.button.zoomer.select_tag(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        | #{name}
        // small #{count}


template(name='site_users')
    with current_site
        .ui.stackable.padded.grid
            .row
                .four.wide.column
                    // a.ui.circular.icon.button(href='/')
                    //     i.large.home.icon
                    img(src=logo_url )
                    // img(src=icon_url)
                    // .ui.segment(style="background-color:#{styling.tag_background_color}")
                    // .ui.label #{tag_background_color}: tag_background_color
                    // .ui.label #{tag_foreground_color}: tag_foreground_color
                    // .ui.label #{link_color}: link_color
                    // .ui.header related sites
                    .ui.header !{name}
                    // each related_sites
                        // .ui.small.header 
                        //     i.fork.icon
                        //     |#{name}
                        // .ui.list 
                            // .item relation: #{relation}
                            // .item api_site_parameter: #{api_site_parameter}
                            // .item site_url: #{site_url}
                    a(href="https://www.twitter.com/#{twitter_account}" target='_window' title=twitter_account)
                        i.large.link.twitter.icon
                    a.ui.large.basic.icon.button(href=site_url)
                        // |#{site_url}
                        i.external.icon
                    +print_this
                    .ui.large.button(href="/site/#{site}/questions")
                        |questions
                    .ui.large.button(href="/site/#{site}/users")
                        |users
                    .ui.large.button(href="/site/#{site}/tags")
                        |tags
                    .ui.list.mobile.hidden
                        // .item #{launch_date} launch_date
                        // .item #{open_beta_date} open_beta_date
                        // .item #{closed_beta_date} closed_beta_date
                        // .item #{site_state} site_state
                        // .item #{high_resolution_icon_url} high_resolution_icon_url
                        // .item #{favicon_url} favicon_url
                        .item #{audience}
                        // .item #{api_site_parameter} api_site_parameter
                        // .item #{site_type} site_type
                    +array_edit k='tags' d=true
                    // +comments
                    // +voting_full
                .twelve.wide.column
                    if selected_tags
                        // if many_tags
                        //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                        //         i.remove.icon
                        each selected_tags
                            +unselect_tag
                    .ui.icon.input
                        i.search.icon
                        input.search_site(type='text')
                    each site_tags
                        +stack_tag_selector
                        // .ui.large.label(title=count) #{name}
                    if skv_is 'sort_direction' 1
                        .ui.icon.compact.circular.button.sort_down
                            i.caret.down.icon
                    else
                        .ui.icon.compact.circular.button.sort_up
                            i.caret.up.icon
                    each stackusers
                        .ui.header #{name}
        