template(name='q')
    unless current_q
        +loading
    with current_q
        .ui.stackable.padded.grid.top
            .row
                .twelve.wide.column
                    a.ui.basic.circular.compact.icon.button.say_title(href="/s/#{site}" title="back to #{site}") 
                        i.chevron.left.large.grey.icon
                        // if watson.metadata.image
                        //     img.ui.tiny.inline.image(src=watson.metadata.image)    
                        // | #{site}
                    #qhead.ui.inline.header.say.get_question(class=post_header_class)
                        .ui.basic.circular.big.label #{score}
                        if is_answered
                            i.green.checkmark.icon
                        |!{title}
                    .ui.horizontal.list
                        .item.say 
                            // i.clock.icon
                            |active {{ufrom last_activity_date}}
                        .item.say
                            // i.clock.icon
                            |created {{ufrom creation_date}}
                        // div(class=currentUser.invert_class)
                        +skve k='stack_section' v='main' l='main' i='content'
                        +skve k='stack_section' v='watson' l='watson' i='brain' 
                        if tone
                            +skve k='stack_section' v='tone' l='tone' i='user' 
                        // +skve k='stack_section' v='embed' l='embed' i='layout' 
                        // .circle-wrapper
                        //     .success.circle
                        //     .icon2
                        //         i.checkmark.icon
                    .scrollin
                        if skv_is 'stack_section' 'main'
                            .f11.ui.basic.segment.say !{body}
                            .ui.horizontal.large.divider.get_q_c
                                |#{question_comments.count}
                                i.chat.outline.icon
                            // div.gb hi everyone
                            if question_comments.count
                                .ui.basic.segment
                                    .ui.relaxed.list
                                        each question_comments
                                            +c_item
                            #answers.ui.horizontal.divider.say_title(title="#{question_answers.count} answers") 
                                |#{question_answers.count}
                                i.reply.grey.icon
                            each question_answers
                                +answer_item
                        if skv_is 'stack_section' 'tone'
                            if watson 
                                if tone
                                    +tone
                            // else if skv_is 'stack_section' 'main'
                        else if skv_is 'stack_section' 'watson'
                            if watson 
                                .ui.fluid.button.call_tone 
                                    i.smile.icon
                                    |analyze tone
                                +watson_view
                                +watson_full
                        // +comments
                .four.wide.column.scrollin
                    a.ui.fluid.basic.circular.compact.tertiary.button.say(href="/s/#{current_q.site}") 
                        i.chevron.left.icon
                        if watson.metadata.image
                            img.ui.tiny.inline.image(src=watson.metadata.image)    
                        | #{site}
                    +doc_emotion
                    .ui.fluid.vertical.borderless.small.menu
                        a.item(href='#answers') #{answer_count} answers
                        each question_answers
                            a.item.say(href="##{_id}")  
                                if is_accepted
                                    i.large.checkmark.icon
                                |#{score}
                                img.ui.avatar.image(src=owner.profile_image)
                                |!{owner.display_name}

                    with owner
                        a.ui.basic.segment.zoomer.pointer.say(href="/s/#{current_q.site}/u/#{user_id}")
                            img.ui.rounded.inline.image(src=profile_image)
                            .ui.header.inline(class=post_header_class)
                                |!{display_name}
                                small {{ commafy reputation }}
                        
                    each tags 
                        +flat_tag_selector
                        // .ui.basic.pointer.circular.tertiary.button.add_stack_tag.say.zoomer #{this}
                    a.ui.circular.icon.button(href=link target='_window' title=link)
                        // |#{link}
                        i.external.large.icon
                    .ui.list
                        .item
                            // i.eye.icon
                            |#{view_count} views
                        if in_dev
                            .item.zoomer id #{_id}
                        if protected_date
                            .item.zoomer date protected {{ufrom protected_date}}
                        if accepted_answer_id
                            .item.zoomer accepted answer id #{accepted_answer_id}
                        .item.zoomer #{answer_count} answers
                        // .item.zoomer 
                        //     i.hashtag.icon
                        //     |score #{score}
                        if in_dev
                            .item.zoomer qid #{question_id}
                            .item.zoomer imported #{_when}
                        // .item.zoomer license #{content_license}
                        
                    if in_dev
                        +print_this
                    +doc_sentiment
                    +watson_full
                    // i.big.refresh.circular.link.icon.get_question
                    // i.big.exclamation.circular.link.icon.get_answers
                    // +skve k='stack_section' v='main' l='content' i='content' 
                    unless watson
                        .ui.big.fluid.button.call_watson
                            i.large.brain.icon
                            |analyze
                    .ui.grey.small.header.get_linked 
                        i.linkify.icon
                        |linked
                    each linked_question_ids
                        .ui.header #{this}
                    each linked_questions
                        .ui.header #{title}
                    .ui.grey.small.header.get_related
                        i.fork.icon
                        |related
                    each related_question_ids
                        .ui.header #{this}
                    each related_questions
                        .ui.header #{title}
                    
                    
                    
template(name='c_item')                    
    .item.say.zoomer
        .ui.inline.header #{score}
        if is_accepted 
            .ui.green.label.say
                |accepted
        span.f11 !{body}
        // +say k='body'
        with owner
            a.say.ui.inline.small.header.say.zoomer.refresh_user(href="/s/#{current_q.site}/u/#{user_id}" class=post_header_class)
                img.ui.avatar.image(src=profile_image)
                |!{display_name}
                |{{ commafy reputation }}
        | {{ufrom creation_date}}
        +say k='body'
        // div
        if creation_date
            .ui.basic.say.label
                |added {{ufrom creation_date}}
        if last_access_date
            .ui.basic.say.label
                |accessed {{ufrom last_access_date}}
        if last_activity_date
            |active {{ufrom last_activity_date}}
        // |#{site}
        if in_dev
            +print_this
            // +remove_button
            // .ui.divider
        unless watson
            .ui.small.circular.basic.icon.button.call(title='analyze')
                i.dna.icon
        each tags
            +flat_tag_selector
            // .ui.tertiary.small.button.say #{this}
        +doc_emotion_small 
                
template(name='answer_item')
    .ui.basic.segment(class=answer_class id=_id)
        // div(id=_id)
        // a(href="#qhead")
        //     i.circular.chevron.up.icon
        // .ui.divider
        .ui.horizontal.list
            if last_activity_date
                .item 
                    small active
                    |{{ufrom last_activity_date}}
            if last_edit_date
                .item
                    small edited
                    |{{ufrom last_edit_date}}
            if creation_date
                .item
                    small added
                    |{{ufrom creation_date}}
        if is_accepted 
            .ui.green.corner.attached.label.rounded
                i.checkmark.icon
        .f11.say_body !{body}
        // +say k='body'

        // |#{content_license}
        if in_dev 
            +remove_button
        with owner
            a.ui.header.say.refresh_user(href="/s/#{current_q.site}/u/#{user_id}")
                img.ui.avatar.image(src=profile_image)
                |!{display_name}
                strong {{ commafy reputation }}
                if accept_rate
                    small #{accept_rate}%
        unless watson
            .ui.small.circular.basic.icon.button.call(title='analyze')
                i.dna.icon
        each tags
            +flat_tag_selector
            // .ui.tertiary.small.button.say #{this}
        +doc_emotion  
        .ui.basic.label #{watson.usage.text_characters} characters
        .ui.basic.label #{content_license}

    .ui.divider
