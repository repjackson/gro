template(name='love')
    .ui.padded.grid
        .sixteen.wide.center.aligned.column
            // .ui.header 
            //     i.heart.icon
            //     |love
            .ui.labeled.large.input
                .ui.big.basic.label l
                input.add_l(type='text' placeholder='...')
            .ui.labeled.large.input
                .ui.big.basic.label o
                input.add_o(type='text' placeholder='...')
            .ui.labeled.large.input
                .ui.big.basic.label v
                input.add_v(type='text' placeholder='...')
            .ui.labeled.large.input
                .ui.big.basic.label e
                input.add_e(type='text' placeholder='...')
            .ui.labeled.input
                .ui.large.basic.label 
                    i.marker.grey.icon
                    |location
                input.add_location(type='text' placeholder='...')
            .ui.labeled.input
                .ui.large.basic.label 
                    i.outline.user.grey.icon
                    |author
                input.add_author(type='text' placeholder='...')
            
            if can_submit
                .ui.basic.circular.button.submit
                    |submit
            else
                .ui.basic.circular.button.submit
                    i.send.icon
                    |submit
        .sixteen.wide.center.aligned.column
            .ui.stackable.four.column.centered.grid.scrolling
                .center.aligned.column
                    if l_results.count
                        .ui.inline.big.header l
                    each picked_l
                        a.unpick_l.no_blink.ui.red.large.compact.basic.circular.button(href='#')
                            strong #{this}
                    each l_results
                        if name
                            .ui.small.compact.basic.circular.button.pick_l #{name}
                .center.aligned.column
                    if o_results.count
                        .ui.inline.big.header o
                    each picked_o
                        a.unpick_o.no_blink.ui.black.large.compact.basic.circular.button(href='#')
                            strong #{this}
                    each o_results
                        if name
                            .ui.small.compact.basic.circular.button.pick_o #{name}
                .center.aligned.column
                    if v_results.count
                        .ui.inline.big.header v
                    each picked_v
                        a.unpick_v.no_blink.ui.red.large.compact.basic.circular.button(href='#')
                            strong #{this}
                    each v_results
                        if name
                            .ui.small.compact.basic.circular.button.pick_v #{name}
                .center.aligned.column
                    if e_results.count
                        .ui.inline.big.header e
                    each picked_e
                        a.unpick_e.no_blink.ui.red.large.compact.basic.circular.button(href='#')
                            strong #{this}
                    each e_results
                        if name
                            .ui.small.compact.basic.circular.button.pick_e #{name}
                .center.aligned.column
                    if location_results.count
                        i.big.marker.icon
                    each picked_locations
                        a.unpick_location.ui.red.large.compact.basic.circular.button(href='#')
                            strong #{this}
                    each location_results
                        if name
                            .ui.tiny.compact.basic.circular.button.pick_location #{name}
                .center.aligned.column
                    if author_results.count
                        i.big.user.icon
                    each picked_authors
                        a.unpick_author.ui.red.large.compact.basic.circular.button(href='#')
                            strong #{this}
                    each author_results
                        if name
                            .ui.tiny.compact.basic.circular.button.pick_author #{name}
                .center.aligned.column
                    if time_results.count
                        i.clock.big.icon
                    each picked_times
                        a.unpick_time.ui.large.large.compact.basic.circular.button(href='#')
                            strong #{this}
                    each time_results
                        .ui.tiny.compact.basic.circular.button.pick_time #{name}
                .center.aligned.column.smallscroll
                    .ui.inline.header 
                        |#{expressions.count}
                    // i.large.clock.icon
                    // i.large.thumbs.up.icon
                    if picked_tags
                        // if many_tags
                        //     a#clear_tags.ui.red.invert.icon.compact.basic.circular.button.pick_term
                        //         i.remove.icon
                        each picked_tags
                            +love_unpick_tag
                    // .ui.icon.input
                    //     i.search.icon
                    //     input.search_group_tag(type='text' value=group_query)
                    each result_tags
                        // .ui.label #{this}
                        +love_tag_picker
        .ui.divider
        .sixteen.wide.column
            .ui.stackable.four.centered.cards.scrolling
                each expressions
                    .card
                        .content 
                            .ui.tertiary.large.basic.circular.button.pick_l #{l_value}
                            .ui.tertiary.large.basic.circular.button.pick_o #{o_value}
                            .ui.tertiary.large.basic.circular.button.pick_v #{v_value}
                            .ui.tertiary.large.basic.circular.button.pick_e #{e_value}
                            div
                            i.thumbs.up.link.outline.icon.upvote
                            |#{points}
                            i.thumbs.down.link.outline.icon.downvote
                            |#{made_when}
                            +voting_full
                            // .ui.tiny.icon.input
                            //     i.grey.tag.icon
                            //     input.add_tag(type='text' placeholder='+')
                            // each tags
                            //     +flat_love_tag_picker
                                // .ui.small.compact.basic.circular.button.pick_flat_tag #{this}
                            // each timestamp_tags
                            //     .ui.small.compact.basic.circular.button.pick_flat_time #{this}
                            if location
                                i.grey.marker.icon
                                |#{location}
                            if author
                                i.grey.user.outline.icon
                                |#{author}
                            a.ui.icon.compact.basic.circular.button(href="/love/#{_id}/view")
                                |#{views}
                                i.chevron.right.icon
                                    
                                
                                
                                
template(name='love_tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    .ui.compact.tertiary.basic.circular.button.zoomer.pick_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.avatar.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='love_unpick_tag')
    a.love_unpick_tag.ui.large.red.compact.basic.circular.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_love_tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    .ui.compact.tiny.basic.circular.button.zoomer.pick_flat_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        // if term
        //     if term.watson.metadata.image
        //         img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        | #{this}
        // if in_dev
        //     small #{count}
template(name='love_view')
    with current_doc
        .ui.stackable.grid
            .row 
                .four.wide.column
                    .ui.segmen
                        a.ui.large.icon.basic.circular.button(href="/love")
                            i.chevron.left.large.icon
                            i.big.heart.outline.icon
                        .ui.large.inline.header
                            each tags
                                .ui.label #{this}
                        // div
                        // .ui.inline.grey.header {{from_now start_datetime}}
                        
                        if can_edit
                            a.edit_group_post(href="/#{group}/p/#{_id}/edit" title='edit')
                                i.large.link.pencil.icon
                        | #{views} views
                        +array_edit key='tags' label='tags' direct=true
                        // +voting_full
                        +link_view key='link' label='link' direct=true
    
                        +array_edit key='time_tags' label='time tags' icon='clock' direct=true
                        +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                .eight.wide.column.scrolling
                    .ui.big.header #{l_value}
                    .ui.big.header #{o_value}
                    .ui.big.header #{v_value}
                    .ui.big.header #{e_value}
                    if image_link
                        a(href="/#{group}")
                            +image_link_view key='image_link' direct=true
                    if image_id
                        a(href="/#{group}")
                            img.ui.fluid.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                    if youtube_id
                        +youtube_view key='youtube_id' label='youtube id' direct=true
                    if raw 
                        |!{raw}
                    .say_this.say_body
                        |!{content}
                    div 
                    .spacer
                    .spacer
                    +comments
                .four.wide.column
                    if can_edit 
                        a.ui.circular.icon.basic.button(href="/love/#{_id}/edit")
                            i.big.pencil.icon
                    .ui.header viewed by
                    each viewer_ids
                        +user_info
                    .ui.header tip
                    +tip
                    .ui.header anon vote
                    i.large.thumbs.up.icon.anon_voteup
                    i.large.thumbs.down.icon.anon_votedown
                    .ui.header user vote
                    if currentUser
                        +voting_full
                        // i.large.thumbs.up.icon.voteup
                        // i.large.thumbs.down.icon.anon_votedown
                        
                    .ui.header related links
                    .ui.button.search_dao search in dao
                    
                    
                    
                    
template(name='love_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column.scrolling
                    a.ui.icon.circular.basic.big.button(href="/love/#{_id}" title='save')
                        i.checkmark.big.green.icon
                    .ui.inline.header 
                        i.pencil.icon
                        |edit love post
                    i.large.link.red.remove.icon.delete_post
                    +image_edit key='image_id' label='image' direct=true
                    div 
                    +array_edit key='tags' label='tags' direct=true
                    +link_edit key='link' label='link' direct=true
                    +array_edit key='time_tags' label='time tags' icon='clock' direct=true
                    +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                    // +raw_edit key='raw' label='raw' direct=true
                    +boolean_edit key='private' label='private' direct=true
                    // +text_edit key='group' label='group' direct=true
                .twelve.wide.column.scrolling
                    +text_edit key='l_value' label='l value' direct=true
                    +text_edit key='o_value' label='o value' direct=true
                    +text_edit key='v_value' label='v value' direct=true
                    +text_edit key='e value' label='e value' direct=true
                    +html_edit key='content' label='content' direct=true
                    +image_link_edit key='image_link' direct=true
                    +youtube_edit key='youtube_id' label='youtube id' direct=true
                    