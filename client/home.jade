head
    title dao
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="black")
    // link(href="https://fonts.googleapis.com/css?family=Ubuntu:300&display=swap" rel="stylesheet")
    // link(href="https://fonts.googleapis.com/css?family=Lato:300&display=swap" rel="stylesheet")
    //- script(src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js")

    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")
    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')

    // link(href="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/css/suneditor.min.css" rel="stylesheet")
    // script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/dist/suneditor.min.js")
    // script(src="https://cdn.jsdelivr.net/npm/suneditor@latest/src/lang/en.js")

    // script(src="https://cdn.jsdelivr.net/npm/sweetalert2@9")

    link(rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.css")
    script(src="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.js")
    // script(async src="https://www.googletagmanager.com/gtag/js?id=G-GLYPPRGJFQ")
    // script.
    //     window.dataLayer = window.dataLayer || [];
    //     function gtag(){dataLayer.push(arguments);}
    //     gtag('js', new Date());
        
    //     gtag('config', 'G-GLYPPRGJFQ');


template(name='layout')
    // +nav
    .ui.bottom.attached.pushable.segment
        // +topbar
        // +leftbar
        // +rightbar
                
        #main_area.global_container.pusher
            +yield
    
    // .ui.bottom.attached.pushable.segment
    //     #main_area.pusher(class=currentUser.invert_class)
    

            

template(name='not_found')
    .ui.center.aligned.basic.segment
        a(href="/")
            i.massive.yin.yang.grey.link.icon.pulse



template(name='home')
    .ui.stackable.padded.grid
        .sixteen.wide.column
            // if skv_is 'nightmode' true
            //     i.moon.link.icon.toggle_nightmode
            // else
            //     i.lightbulb.link.icon.toggle_nightmode
            .ui.icon.input
                i.search.icon
                input.search_tag(type='text' value=query autofocus='' placeholder="#{post_counter}")
                // .ui.label #{this}
            if picked_tags
                // if many_tags
                //     a#clear_tags.ui.red.invert.icon.button.pick_term
                //         i.remove.icon
                each picked_tags
                    +unpick_tag
            each result_tags
                // .ui.label #{this}
                +tag_picker
                // .ui.label(title=count) #{name}
        .ui.sixteen.wide.column                
            .scrolling
                each wikis
                    .ui.segment
                        a.ui.header(href=url target='_window') #{title}
                        each seven_tags
                            .ui.label #{this}
                        if watson.metadata.image
                            // |metadata
                            img.ui.inline.tiny.image.toggle_view(src=watson.metadata.image)
                            
                if one_post
                    .ui.stackable.one.column.grid
                        each rposts
                            +card
                        
                else if two_posts
                    .ui.stackable.two.centered.column.grid
                        each rposts
                            +card
                    // else if three_posts
                else
                    .ui.stackable.three.column.centered.grid.scrolling
                        each rposts
                            +card
                //     .ui.basic.center.aligned.segment
                //         i.big.loading.yin.yang.icon
   
template(name='card')
    .column
        // .ui.stackable.equal.width.compact.grid
        //     .row
        a(href=data.url target='_window')
            if embed
                span.rounded.full
                    |!{embed}
                div
            else if is_image
                img.ui.fluid.zoomer.image.toggle_view(src=data.url)    
            else if watson.metadata.image
                // |metadata
                img.ui.inline.zoomer.image.toggle_view(src=watson.metadata.image)
                // else if data.thumbnail.length
            else if has_thumbnail
                // |thumbnail
                a.view_post
                    img.ui.inline.zoomer.fluid.image.zoomer(src=data.thumbnail)    
            // else if data.thumbnail.length
            //     .column
            //         a.view_post(href=data.url class=post_header_class)
            //             img.ui.rounded.inline.image.zoomer(src=data.thumbnail)    
            // .column
        .content
            // a.ui.inline.header.view_post.zoomer(href="" class=post_header_class target='_window')
            a.ui.inline.header(href="https://www.reddit.com#{permalink}" target='_window' title=domain)
            
                // strong #{data.ups}:
                |!{data.title} 
                // span.inline.content
            |{{ufrom data.created_utc}}
            each unique_tags
                a.ui.basic.label.flat_tag_pick #{this}
            // div
   
   
   
        
template(name='unpick_tag')
    a.unpick.ui.black.compact.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}


        

template(name='flat_tag_picker')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.basic.compact.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        // if term
        //     if term.watson.metadata.image
        //         img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{this}
        // if in_dev
        //     small #{count}



           
                                   
           
                                
                                
                                
template(name='tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    .ui.compact.basic.button.zoomer.pick_tag.penny.add_global_karma(title="#{count} results" class="#{picker_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.avatar.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}