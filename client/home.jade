template(name='questions')
    .ui.padded.stackable.grid
        .four.wide.column
            .ui.icon.fluid.input
                i.search.icon
                input.search_questions(type='text' placeholder='search questions')
            // .ui.icon.input
            //     i.plus.icon
            //     input.ask_question(type='text' placeholder='ask question')
            +cloud filter='question'
            .ui.small.grey.header total bounty available
            .ui.small.grey.header total bounty earned
            if selected_tags
                // if many_tags
                //     a#clear_tags.ui.black.icon.small.compact.circular.button.select_term
                //         i.remove.icon
                each selected_tags
                    +unselect_tag
            .ui.inline.input 
                input.search_title(type='text' autofocus='')
            each tag_results
                +tag_selector
            +session_boolean_toggle key='view_open' label='view open'
            +session_boolean_toggle key='view_your_questions' label='your questions'
            +session_boolean_toggle key='view_your_answers' label='your answers'
        
        .twelve.wide.column
            |limit
            +session_kve key='limit' value=1 label='1'
            +session_kve key='limit' value=10 label='10'
            |sort
            +session_kve key='sort_key' value='_timestamp' label='when'
            +session_kve key='sort_key' value='bounty' label='bounty'
            +session_kve key='sort_direction' value=-1 label='up'
            +session_kve key='sort_direction' value=1 label='down'
            |view
            +session_kve key='view_mode' value='cards' label='cards' icon='clone'
            +session_kve key='view_mode' value='list' label='list' icon='list'
            .spacer
            if session_kv_is 'view_mode' 'list'
                .ui.big.link.selection.list 
                    each questions 
                        a.item(href="/question/#{_id}/view")
                            if image_id
                                // a(href="/question/#{_id}/view")
                                img.ui.avatar.image.view(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            else if image_url
                                // a(href="/question/#{_id}/view")
                                img.ui.avatar.image.view(src=image_url class=currentUser.invert_class)
                            .content
                                .header #{title}
            else
                .ui.cards
                    each questions
                        +question_card
                
template(name='question_card')
    .ui.card
        if image_id
            // a(href="/question/#{_id}/view")
            img.ui.pointer.image.view(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        else if image_url
            // a(href="/question/#{_id}/view")
            img.ui.pointer.image.view(src=image_url class=currentUser.invert_class)
        .content
            a.ui.header.select_question(href="/question/#{_id}/view") #{title}
            .ui.list 
                .item #{views} views
                .item 
                    i.user.outline.icon
                    |#{_author.username}
                .item 
                    |bounty: 
                    |#{bounty}pts
                .item 
                    |bounty: 
                    |#{bounty_total}pts
                .item 
                    each tags 
                        .ui.label #{this}
            .ui.big.circular.icon.compact.button.vote_true(class=vote_true_class)
                i.thumbs.up.icon(class=vote_true_icon_class)
            .ui.big.circular.icon.compact.button.vote_false(class=vote_false_class)
                i.thumbs.down.icon(class=vote_false_icon_class)
            if can_edit
                +session_kve key='edit_question_id' value=_id label='edit'
            if session_kv_is 'edit_question_id' _id
                .ui.inline.header editing
                +text_edit key='title' d=true
                +number_edit key='bounty' d=true
                +session_kve key='edit_question_id' value=null label='save'
                +number_edit key='bounty_total' label='total bounty' d=true
                // +kve key='question_type' value='true_false' label='true/false'
                // +kve key='question_type' value='multiple_choice' label='multiple choice'
                // if kv_is 'question_type' 'multiple_choice'
                //     // +number_edit key='answer_count' label='number of answers' d=true
                //     // each answers
                //     +text_edit key='answer_choice_one' label='answer choice one' d=true
                //     +text_edit key='answer_choice_two' label='answer choice two' d=true
    
        
        
        
        
template(name='session_kve')    
    .ui.compact.circular.button.set_session_var(class=session_button_class)
        if icon 
            i.icon(class=icon)
        |#{label}
                        
// template(name='kve')    
//     .ui.button.set_key_value
//         |#{label}
                        
                        
                        
// template(name='unselect_tag')
//     a.unselect_tag.ui.black.big.image.circular.label.select_term(href='#')
//         if term
//             img.ui.avatar.compact.image(src=term.watson.metadata.image)    
//         strong #{this}

// template(name='tag_selector')
//     // a.ui.big.image.circular.label.pointer.select_tag.select_term(href='#' title="#{count} results" class=selector_header_class)
//     a.ui.tertiary.basic.circular.button.select_tag.select_term(href='#' title="#{count} results" class=selector_header_class)
//         if term
//             if term.watson.metadata.image
//                 img.ui.avatar.compact.invert.image(src=term.watson.metadata.image)    
//         | #{name}
//         // small #{count}
                        