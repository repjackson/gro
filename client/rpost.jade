template(name='rpost')
    with current_doc
        .ui.stackable.grid
            .sixteen.wide.column
                a.ui.basic.icon.circular.button(href="/")
                    i.chevron.left.large.icon
                    // |#{data.subreddit}
                span.ui.header(class=post_header_class)
                    if ups
                        .ui.label #{ups}
                    if title
                        |!{title}
                    else 
                        |#{link_title} #{metadata.title}
                .ui.basic.circular.compact.small.button.get_post
                    i.external.icon
                    |#{permalink}
                div
                // if skv_is 'view_section' 'main'
                .scrollin
                    if is_dev
                        unless watson
                            +call_watson id=_id key='url' url=url mode='url'

                    // blockquote(class="reddit-card")
                    //     a(href="https://www.reddit.com/r/therewasanattempt/comments/lt5gfm/to_eat_the_fish_and_complete_the_challenge/")
                    //         |To eat the fish and complete the challenge.
                    //     |from 
                    //     a(href="http://www.reddit.com/r/therewasanattempt") r/therewasanattempt
                    if is_reddit_media_domain
                        img.ui.centered.rounded.image.pointer.call_visual(src=url)
                    else if metadata.image
                        img.ui.rounded.image.pointer.call_meta(src=metadata.image)
                    else if is_youtube
                        div
                        // .ui.fluid.embed
                        //     iframe(id="ytplayer" type="text/html" width="100%" height="500" src="https://www.youtube.com/embed/#{youtube_parse}" frameborder="0" allowfullscreen)
                        iframe(width="100%" height="600" src="https://www.youtube.com/embed/#{youtube_parse}?autoplay=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                    else if is_image
                        a.zoom_cursor(href=url target='_window')
                            img.ui.fluid.rounded.image.toggle_view(src=url)
                    else if embed
                        span.f11.full
                            |!{embed}

                    else if link_url
                        img.ui.image.pointer.call_visual(src=link_url)
                    else if has_thumbnail
                        a.view_post
                            img.ui.inline.fluid.image(src=thumbnail)    

                    div
                    span.f12.say !{html}
                    if parsed_selftext_html
                        .ui.segment
                            |!{parsed_selftext_html}
                    if selftext
                        // .ui.segment
                        .f12.say
                            // .ui.header nl2br data selftext
                            |{{#markdown}} {{selftext}} {{/markdown}}
                            // .ui.header nl2br data selftext
                            // |#{inner}
                            // |{{#markdown}} {{inner}} {{/markdown}}
                    else if body
                        div
                        .f12.say
                            // .ui.header nl2br data body
                            |{{nl2br body}}
                    else if body_html
                        div
                        .f12.say
                            |!{body_html}
                    else if analyzed_text
                        .say.f12
                            |{{nl2br analyzed_text}}
                    // iframe(width="100%" height="600" src="https://v.redd.it/9vk3khyb08e51/DASH_360.mp4?source=fallback" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                    .spacer
                    +print_this
                    +call_watson
                    .ui.input
                        input.tag_post(type='text' placeholder='tag...')
                    // img(src=url)
                    // div(style='position:relative; padding-bottom:calc(125.00% + 44px)')
                    //     iframe(src='https://gfycat.com/ifr/MeanFatAmurratsnake' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen)
                    // .rounded
                    //     |!{embed}
                // +skve k='view_section' v='related' l='related' i='fork'
                a.ui.button(href=url target='_window')
                    |#{url}
                each tags
                    +flat_tag_picker
                
                
template(name='rcomments_tab')                
    .ui.horizontal.divider.get_post_comments
        i.grey.comment.outline.icon
        |#{rcomments.count} comments
    // .ui.items
    each rcomment_tags
        .ui.compact.button #{name}
            small #{count}
    .spacer
    .ui.comments
        each rpost_comments
            +rcomment
                
                
template(name='rcomment')                
    // .ui.grid.call_watson_comment
    .ui.comment
        .content
            .pointer.text.say.autotag_watson(class=post_header_class)
                |{{#markdown}} {{data.body}} {{/markdown}}
            .actions
                .ui.circular.basic.label {{data.score}}
                a.author.inline.say(href="/user/#{data.author}") #{data.author}
                span.metadata 
                    span.date {{ufrom data.created}}
                    unless max_emotion_percent
                        i.smile.large.link.outline.icon.get_comment_emotion
                if in_dev
                    +print_this
                each tags 
                    +flat_tag_picker
                    // .ui.tiny.basic.label #/{this}
                +doc_emotion_small
        if data.replies.data.children
            .ui.grid
                each data.replies.data.children
                    .two.wide.column
                    .fourteen.wide.column
                        a.inline.author(href="/user/#{data.author}") #{data.author}
                        |{{#markdown}} {{data.body}} {{/markdown}}
            // if in_dev
            //     +print_this
                
                
                
template(name='post_related')
    .ui.header related
    .ui.list
        each related_posts
            a.item.say.pointer(href="/r/#{subreddit}/post/#{_id}" class=post_header_class) 
                if data.is_reddit_media_domain
                    a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                        img.ui.small.rounded.image.toggle_view(src=data.url)
                else if metadata.image
                    a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                        img.ui.rounded.small.inline.image.toggle_view(src=metadata.image)
                else if data.thumbnail
                    a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                        img.ui.rounded.small.inline.image(src=data.thumbnail)    
            
                .ui.inline.small.header !{data.title} #{data.link_title}
                .ui.basic.label #{data.ups}
                .ui.label #{subreddit}
                each tags
                    .ui.mini.basic.label #{this}        
                    
template(name='related_questions')
    .ui.header related questions
    .ui.list
        each qs
            a.item.say.pointer.set_main(href="/s/#{site}/q/#{question_id}" class=post_header_class) 
                if data.is_reddit_media_domain
                    a.view_post(href="/s/#{site}/q/#{question_id}" class=post_header_class)
                        img.ui.small.rounded.image.toggle_view(src=data.url)
                else if metadata.image
                    a.view_post(href="/s/#{site}/q/#{question_id}" class=post_header_class)
                        img.ui.rounded.small.inline.image.toggle_view(src=metadata.image)
                else if data.thumbnail
                    a.view_post(href="/s/#{site}/q/#{question_id}" class=post_header_class)
                        img.ui.rounded.small.inline.image(src=data.thumbnail)    
            
                .ui.inline.small.header !{title}
                .ui.basic.label #{score}
                .ui.label #{site}
                each tags
                    .ui.mini.basic.label #{this}