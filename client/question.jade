template(name='question')
    .ui.card
        if image_id
            img.ui.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        else if image_url
            img.ui.image(src=image_url class=currentUser.invert_class)
        .content
            a.ui.header.select_question(href="/question/#{_id}/view") #{title}
            .ui.list 
                .item #{views} views
                .item 
                    i.user.outline.icon
                    |#{_author.username}
                .item 
                    |bounty: 
                    |#{bounty}pts
                .item 
                    |bounty: 
                    |#{bounty_total}pts
                .item 
                    each tags 
                        .ui.label #{this}
            .ui.big.circular.icon.compact.button.vote_true(class=vote_true_class)
                i.thumbs.up.icon(class=vote_true_icon_class)
            .ui.big.circular.icon.compact.button.vote_false(class=vote_false_class)
                i.thumbs.down.icon(class=vote_false_icon_class)
            if can_edit
                +session_key_value_edit key='edit_question_id' value=_id label='edit'
            if session_key_value_is 'edit_question_id' _id
                .ui.inline.header editing
                +text_edit key='title' direct=true
                +number_edit key='bounty' direct=true
                +session_key_value_edit key='edit_question_id' value=null label='save'
                +number_edit key='bounty_total' label='total bounty' direct=true
                // +key_value_edit key='question_type' value='true_false' label='true/false'
                // +key_value_edit key='question_type' value='multiple_choice' label='multiple choice'
                // if key_value_is 'question_type' 'multiple_choice'
                //     // +number_edit key='answer_count' label='number of answers' direct=true
                //     // each answers
                //     +text_edit key='answer_choice_one' label='answer choice one' direct=true
                //     +text_edit key='answer_choice_two' label='answer choice two' direct=true
    

                    
template(name='question_view')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .sixteen.wide.column
                    if is_editing
                        +text_edit key='title' label='title' input_class='fluid large' direct=true
                    else
                        .ui.header(class=question_header_class) #{title}
            .row 
                .eight.wide.column
                    .scrollin
                        if url 
                            a(href=url target='_window') #{url}
                            img.ui.image(src=url class='invert')    
                        if image_id
                            a(href="{{c.url image_id }}" target='_window')
                                img.ui.rounded.image(src="{{c.url image_id gravity='face' crop='fit'}}" class='invert')
                        if youtube_id
                            +youtube_view key='youtube_id' direct=true
                        .f12
                            |!{description}
                    +comments
                    .ui.button.add_answer
                        i.plus.icon 
                        |answer
                    each question_answers
                        .ui.segment
                            .ui.header #{title}
                            if can_edit
                                +session_boolean_toggle 
                            if is_editing
                                +text_edit key='title' direct=true
                            .ui.label 
                                i.user.outline.icon
                                |#{_author.username}
                .four.wide.column
                    .ui.header question type: #{question_type}
                    if can_edit
                        a.ui.circular.icon.big.button.edit_question(href="/question/#{_id}/edit")
                            i.large.pencil.icon
                    +vote
                    div
                .four.wide.column
                    .ui.segment
                        .ui.grey.header 
                            i.fork.icon
                            |dependencies
                        .ui.button.add_dependency
                            i.plus.icon
                            |add dependency
                        .ui.selection.link.large.list
                            each dependencies
                                a.item(href="/question/#{_id}/view") #{title}
                    .ui.segment
                        .ui.inline.grey.header 
                            i.sitemap.icon
                            |#{dependents.length}
                            |dependents
                        .ui.icon.circular.button.add_dependent
                            i.plus.icon
                        .ui.selection.link.large.list
                            each dependents
                                a.item(href="/question/#{_id}/view") #{title}
                        // .ui.button.connect_existing
                        //     i.fork.icon
                        //     |connect existing
                        // div
                        div
                    .ui.inline.small.grey.header 
                        i.grey.clock.icon
                        |#{when}
                    div
                    .ui.label #{views} views
                    div
                    |#{tags.length}
                    i.tag.icon
                    +array_view key='tags' direct=true
                    if dev
                        +print_this
                    +author_block
                    +viewing
                    
                    