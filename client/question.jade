
                    
template(name='question_view')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .sixteen.wide.column
                    if is_editing
                        +text_edit key='title' label='title' input_class='fluid large' direct=true
                    else
                        .ui.header(class=question_header_class) #{title}
            .row 
                .eight.wide.column
                    if url 
                        a(href=url target='_window') #{url}
                        img.ui.image(src=url class='invert')    
                    if image_id
                        a(href="{{c.url image_id }}" target='_window')
                            img.ui.rounded.image(src="{{c.url image_id gravity='face' crop='fit'}}" class='invert')
                    else if image_url
                        // a(href="/question/#{_id}/view")
                        img.ui.pointer.image(src=image_url class=currentUser.invert_class)
                
                    if youtube_id
                        +youtube_view key='youtube_id' direct=true
                    .f12
                        |!{body}
                    +comments
                    .ui.button.add_answer
                        i.plus.icon 
                        |answer
                    each question_answers
                        .ui.segment
                            .ui.header #{title}
                            if can_edit
                                +session_boolean_toggle key='is_editing'
                            if session is_editing
                                +text_edit key='title' direct=true
                            .ui.label 
                                i.user.outline.icon
                                |#{_author.username}
                .four.wide.column
                    .ui.header question type: #{question_type}
                    if can_edit
                        a.ui.circular.icon.big.button.edit_question(href="/question/#{_id}/edit")
                            i.large.pencil.icon
                    +vote
                    div
                    .ui.segment
                        .ui.grey.header 
                            i.hand.holding.heart.icon
                            |bounties
                        .ui.circular.icon.button.add_bounty(title='add bounty')
                            i.plus.icon
                        each question_bounties
                            +question_bounty
                .four.wide.column
                    .ui.segment
                        .ui.grey.header 
                            i.fork.icon
                            |dependencies
                        .ui.button.add_dependency
                            i.plus.icon
                            |add dependency
                        .ui.selection.link.large.list
                            each dependencies
                                a.item(href="/question/#{_id}/view") #{title}
                    .ui.segment
                        .ui.inline.grey.header 
                            i.sitemap.icon
                            |#{dependents.length}
                            |dependents
                        .ui.icon.circular.button.add_dependent
                            i.plus.icon
                        .ui.selection.link.large.list
                            each dependents
                                a.item(href="/question/#{_id}/view") #{title}
                        // .ui.button.connect_existing
                        //     i.fork.icon
                        //     |connect existing
                        // div
                        div
                    .ui.inline.small.grey.header 
                        i.grey.clock.icon
                        |#{when}
                    div
                    .ui.label #{views} views
                    div
                    |#{tags.length}
                    i.tag.icon
                    +array_view key='tags' direct=true
                    if dev
                        +print_this
                    +author_block
                    +viewing
                    
                    
                    
template(name='question_bounty')
    .ui.segment
        .ui.header #{amount}
        if can_edit
            +session_boolean_toggle key='editing_mode' label='edit'
        if session_is 'editing_mode'
            +number_edit key='amount' direct=true