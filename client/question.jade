template(name='question')
    .ui.segment
        a.ui.header.select_question(href="/m/question/#{_id}/view") #{title}
        .ui.list 
            .item #{views} views
            .item 
                i.user.outline.icon
                |#{_author.username}
            .item 
                |bounty: 
                |#{bounty}pts
            .item 
                |bounty: 
                |#{bounty_total}pts
            .item 
                each tags 
                    .ui.label #{this}
        .ui.big.circular.icon.compact.button.vote_true(class=vote_true_class)
            i.thumbs.up.icon(class=vote_true_icon_class)
        .ui.big.circular.icon.compact.button.vote_false(class=vote_false_class)
            i.thumbs.down.icon(class=vote_false_icon_class)
        if can_edit
            +session_key_value_edit key='edit_question_id' value=_id label='edit'
        if session_key_value_is 'edit_question_id' _id
            .ui.inline.header editing
            +text_edit key='title' direct=true
            +number_edit key='bounty' direct=true
            +session_key_value_edit key='edit_question_id' value=null label='save'
            +number_edit key='bounty_total' label='total bounty' direct=true
            // +key_value_edit key='question_type' value='true_false' label='true/false'
            // +key_value_edit key='question_type' value='multiple_choice' label='multiple choice'
            // if key_value_is 'question_type' 'multiple_choice'
            //     // +number_edit key='answer_count' label='number of answers' direct=true
            //     // each answers
            //     +text_edit key='answer_choice_one' label='answer choice one' direct=true
            //     +text_edit key='answer_choice_two' label='answer choice two' direct=true


template(name='question_card')
    .ui.stackable.grid
        .four.wide.column
            a.ui.fluid.rounded.image.pointer(href="/m/question/#{_id}/view")
                if watson.metadata.image
                    img(src=watson.metadata.image class='invert')    
                else if is_youtube
                    .ui.embed(data-source="youtube" data-id=youtube_parse class='invert')
                else if is_image
                    if url
                        img(src=url class='invert')    
            if youtube_id
                +youtube_view key='youtube_id' direct=true
            if image_id
                a.zoom.pointer.image(href="/m/question/#{_id}/view")
                    img.ui.rounded.image(src="{{c.url image_id }}" class='invert')
            if thumbnail
                a.image(href="/m/question/#{_id}/view")
                    img.ui.rounded.image(src=thumbnail class='invert')
        .twelve.wide.column
            .content
                a.ui.header.pointer(href="/m/question/#{_id}/view" class=question_header_class)
                    |#{title}
                .description.f11.smallscroll
                    if body
                        |{{nl2br body}}
                    else if description
                        |!{description}
                if domain
                    .ui.label(title='domain') #{domain}
                    // if tone
                    //     +tone
                    // |!{body}
                if rd.ups
                    .ui.label #{rd.ups} ups
                +autotag
                +vote
                // a(href="/m/question/#{_id}/view")
                //     i.right.chevron.circular.link.big.icon
                if is_admin
                    +print_this
                +array_edit key='tags' direct=true
                each tags
                    a.ui.large.image.zoom.pointer.label.add_tag
                        if tag_term
                            img.ui.invert.image(src=tag_term.watson.metadata.image)    
                    
                        // i.minus.link.grey.icon.minus_tag(title='pay a point to lessen tag')
                        | #{this}
                        // i.plus.link.grey.icon.plus_tag(title='pay a point to promote tag')
                |#{when}
                if can_edit 
                    a.ui.circular.icon.zoom.pointer.button(href="/m/question/#{_id}/edit")
                        i.pencil.icon
                a.ui.icon.zoom.pointer.button(href="/m/question/#{_id}/view")
                    i.chevron.right.icon
                // +call_watson mode='url' key='url'
                // if watson
                //     +call_tone mode='url' key='url'
            
        // .ui.divider
    

template(name='question_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .eight.wide.column
                    a.ui.icon.circular.large.button(href="/m/question/#{_id}/view" title='save' class='invert')
                        i.checkmark.big.icon
                    .ui.inline.large.header 
                        small edit question
                        // |#{title}
                    div
                    +text_edit key='title' label='title' direct=true
                    div
                    +image_edit key='image_id' label='image' direct=true
                    div
                    +link_edit key='link' label='link' direct=true
                    +date_edit key='date' label='date' direct=true
                    +number_edit key='bounty_total' label='total bounty' direct=true
                    div
                    +boolean_edit key='has_recipient' label='has recipient' direct=true
                    // if has_recipient
                    +single_user_edit key='recipient_id' key2='recipient_username' label='recipient' direct=true
                    +number_edit key='point_amount' label='point amount' direct=true
                .eight.wide.column
                    |tag = -1p
                    +smart_tagger
                    +textarea_edit key='body' label='body' direct=true
                    if description
                        +html_edit key='description' label='description' direct=true
                    +youtube_edit key='youtube_id' label='youtube id' direct=true
                    i.remove.link.circular.big.icon.delete_question(title='delete question')
                    
                    
template(name='question_view')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .ten.wide.column
                    // a.ui.circular.icon.button(href='/')
                    //     i.big.yin.yang.icon
                    if title 
                        .ui.header(class=question_header_class) #{title}
                    .scrollin
                        if url 
                            a(href=url target='_window') #{url}
                            img.ui.image(src=url class='invert')    
                            
                        if image_id
                            a(href="{{c.url image_id }}" target='_window')
                                img.ui.rounded.image(src="{{c.url image_id gravity='face' crop='fit'}}" class='invert')
                        if youtube_id
                            +youtube_view key='youtube_id' direct=true
                        .f12
                            if tone
                                +tone
                            else if key_value_is 'model' 'reddit'
                                |{{nl2br body}}
                                // |!{body}
                            else
                                |!{description}
                        // +watson_view
                        // if is_admin
                        +viewing
                    +comments
                    .ui.button.add_answer
                        i.plus.icon 
                        |answer
                    each question_answers
                        .ui.segment
                            .ui.header #{title}
                            if can_edit
                                +session_boolean_toggle 
                            if is_editing
                                +text_edit key='title' direct=true
                            .ui.label 
                                i.user.outline.icon
                                |#{_author.username}
                .six.wide.column.scrolling
                    if can_edit
                        a.ui.circular.icon.button.edit_question(href="/m/question/#{_id}/edit")
                            i.large.pencil.icon
                    +vote
                    .ui.inline.small.grey.header #{when}
                    .ui.label #{views} views
                    |#{tags.length}
                    +array_edit key='tags' direct=true
                    each tags 
                        .ui.label #{this}
                    if dev
                        +print_this
                    +author_block
                    
                    