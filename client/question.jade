template(name='stack_page')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .four.wide.column.scrolling
                    a.ui.fluid.basic.circular.compact.tertiary.button.say_site(href="/site/#{site}") 
                        i.chevron.left.icon
                        if watson.metadata.image
                            img.ui.invert.tiny.inline.image(src=watson.metadata.image)    
                        | #{site}
                    with owner
                        a.ui.basic.segment.zoomer.pointer.say_name(href="/site/#{current_doc.site}/user/#{user_id}")
                            img.ui.rounded.inline.image(src=profile_image)
                            .ui.header.inline(class=post_header_class)
                                if is_answered
                                    i.green.checkmark.large.icon
                                    // .ui.basic.inverted.green.large.tertiary.button
                                    // |answered
                                    // else
                                    // .ui.basic.tertiary.button
                                    // i..icon
                                    // |unanswered

                                |!{display_name}
                                small #{reputation}
                                // .ui.basic.label id #{user_id}
                                // .ui.basic.label type #{user_type}
                                // a.ui.circular.icon.button(href=link)
                                //     i.large.external.icon
                        
                    each tags 
                        .ui.basic.pointer.circular.tertiary.button.add_stack_tag.speak_this.zoomer #{this}
                    a.ui.circular.icon.button(href=link target='_window' title=link)
                        // |#{link}
                        i.external.large.icon
                    .ui.list
                        .item
                            // i.eye.icon
                            |#{view_count} views
                        if in_dev
                            .item.zoomer id #{_id}
                        if protected_date
                            .item.zoomer date protected {{ufrom protected_date}}
                        if accepted_answer_id
                            .item.zoomer accepted answer id #{accepted_answer_id}
                        .item.zoomer #{answer_count} answers
                        // .item.zoomer 
                        //     i.hashtag.icon
                        //     |score #{score}
                        if in_dev
                            .item.zoomer qid #{question_id}
                            .item.zoomer imported #{_when}
                        // .item.zoomer license #{content_license}
                        
                    // +bookmark_button
                    // +voting
                    if in_dev
                        +print_this
                    +doc_sentiment
                    +doc_emotion
                    +watson_full
                    // i.big.refresh.circular.link.icon.get_question
                    // i.big.exclamation.circular.link.icon.get_answers
                    // +skve k='stack_section' v='main' l='content' i='content' 
                    unless watson
                        .ui.big.fluid.button.call_watson
                            i.large.brain.icon
                            |analyze
                    
                .twelve.wide.column
                    .ui.header.say_title.get_question(class=post_header_class)
                        .ui.basic.circular.big.label #{score}
                        |!{title}
                    .ui.horizontal.list
                        .item.zoomer 
                            // i.clock.icon
                            |active {{ufrom last_activity_date}}
                        .item.zoomer
                            // i.clock.icon
                            |created {{ufrom creation_date}}
                        // div(class=currentUser.invert_class)
                        +skve k='stack_section' v='main' l='main' i='content' 
                        +skve k='stack_section' v='watson' l='watson' i='brain' 
                        if tone
                            +skve k='stack_section' v='tone' l='tone' i='user' 
                        // +skve k='stack_section' v='embed' l='embed' i='layout' 

                    .scrolling
    
                        if skv_is 'stack_section' 'main'
                            .ui.basic.segment.speak_this
                                .f11.speak_body.pointer !{body}
                            .ui.small.grey.header.get_question_comments
                                i.chat.outline.icon
                                // |comments
                            each question_comments
                                .ui.basic.segment
                                    if is_accepted 
                                        .ui.green.label.zoomer
                                            |accepted
                                    // div(class=currentUser.invert_class)
                                    .f11.speak_body.pointer !{body}
                                    with owner
                                        .ui.divider
                                        i.chat.icon
                                        a.ui.inline.header.say_name.zoomer(href="/site/#{current_doc.site}/user/#{user_id}" class=post_header_class)
                                            img.ui.avatar.invert.image(src=profile_image)
                                            |!{display_name}
                                            |#{reputation}
                                        .ui.basic.small.label #{user_id}
                                        .ui.basic.small.label #{user_type}
                                        .ui.basic.small.label #{accept_rate}
                                        a(href=link) #{link}
                                    
                                    small #{content_license}
                                    +voting
                                    +comments
                            
                            
                            each question_answers
                                .ui.basic.segment(class=answer_class)
                                    if is_accepted 
                                        .ui.green.corner.attached.label.zoomer
                                            i.checkmark.icon
                                    // div(class=currentUser.invert_class)
                                    .f11.speak_body.pointer.goto_q !{body}
                                    .ui.divider
                                    .ui.horizontal.list
                                        .item 
                                            small active
                                            |{{ufrom last_activity_date}}
                                        .item
                                            small edited
                                            |{{ufrom last_edit_date}}
                                        .item
                                            small created
                                            |{{ufrom creation_date}}
        
                                    with owner
                                        div
                                        a.ui.header.say_name.zoomer(href="/site/#{current_doc.site}/user/#{user_id}")
                                            img.ui.avatar.invert.image(src=profile_image)
                                            |!{display_name}
                                            small #{reputation}
                                        // |#{user_id}
                                        // |#{user_type}
                                        // |#{accept_rate}
                                        a.ui.icon.small.basic.circular.button(href=link)
                                            i.external.icon
                                    |#{content_license}
                                    +voting
                                    +comments
                                    if in_dev 
                                        +remove_button
                                .ui.divider
                        if skv_is 'stack_section' 'tone'
                            if watson 
                                if tone
                                    +tone
                            // else if skv_is 'stack_section' 'main'
                        else if skv_is 'stack_section' 'watson'
                            if watson 
                                .ui.fluid.button.call_tone 
                                    i.smile.icon
                                    |analyze tone
                                +watson_view
                                +watson_full
                        // +comments
                        // .three.wide.column
                        // .ui.grey.small.header.get_linked 
                        //     i.linkify.icon
                        //     |linked
                        // each linked_question_ids
                        //     .ui.header #{this}
                        // each linked_questions
                        //     .ui.header hi #{title}
                        // .ui.grey.small.header.get_related
                        //     i.fork.icon
                        //     |related
                        // each related_question_ids
                        //     .ui.header #{this}
                        // each related_questions
                        //     .ui.header hi #{title}