template(name='posts')
    .ui.padded.stackable.grid 
        .row
            .three.wide.column
                .ui.inline.header 
                    i.big.posts.icon
                    |posts
                .ui.large.icon.basic.button.add_post
                    i.plus.icon
                // i.large.clock.icon
                // i.large.thumbs.up.icon
                .ui.icon.transparent.input
                    // if is_loading
                    //     i.yin.yang.loading.icon
                    // else
                    i.search.icon
                    input.search_tag(type='text' value=query)
                    // .ui.label #{this}
                
                if picked_tags
                    // if many_tags
                    //     a#clear_tags.ui.red.invert.icon.compact.button.pick_term
                    //         i.remove.icon
                    each picked_tags
                        +unpick_tag
                each result_tags
                    // .ui.label #{this}
                    +tag_picker
                        
            .thirteen.wide.column
                div(class=main_column_class)
                    // .ui.disabled.button shared with me
                    if skv_is 'view_sidebar' false
                        .ui.icon.compact.basic.button.enable_sidebar
                            i.ellipsis.vertical.icon
                    else
                        .ui.icon.compact.active.button.disable_sidebar
                            i.ellipsis.vertical.icon
                    if skv_is 'sort_direction' 1
                        .ui.icon.compact.basic.button.sort_down
                            i.caret.down.icon
                    else
                        .ui.icon.compact.basic.button.sort_up
                            i.caret.up.icon
                    .ui.compact.large.icon.basic.button.sort_created(class=sort_created_class)
                        i.clock.icon
                    .ui.compact.large.icon.basic.button.sort_ups(class=sort_ups_class)
                        i.thumbs.up.icon
                    if skv_is 'view_detail' true
                        .ui.black.large.icon.compact.basic.button.toggle_detail
                            i.list.icon
                    else
                        .ui.compact.large.icon.basic.button.toggle_detail
                            i.minus.icon
                        // i.line.chart.icon
                    if skv_is 'view_layout' 'grid'
                        .ui.compact.large.icon.black.button.set_grid(class=grid_class) 
                            i.th.icon
                    else
                        .ui.compact.large.icon.basic.button.set_grid(class=grid_class) 
                            i.th.icon
                    if skv_is 'view_layout' 'list'
                        .ui.compact.black.icon.large.button.set_list(class=list_class)
                            i.list.icon
                    else
                        .ui.compact.large.icon.basic.button.set_list(class=list_class)
                            i.list.icon
                    .ui.icon.basic.button.skip_left
                        i.chevron.left.icon
                    .ui.icon.basic.button.skip_right
                        i.chevron.right.icon
                    .ui.input
                        input(type='text' )
            
                .ui.stackable.cards
                    each post_docs
                        +post_card
                        

// template(name='post_card')
//     .ui.card
//         if image_id
//             a(href="/post/#{_id}")
//                 img.ui.fluid.image(src="{{c.url image_id}}")
//         else if image_link
//             a(href="/post/#{_id}")
//                 img.ui.fluid.image(src=image_link)
        
//         .content
//             a.ui.header(href="/post/#{_id}")
//                 |#{title}
//             a.ui.inline.small.header(href="/person/#{person_id}")
//                 |#{post_person.first_name} #{post_person.last_name}
//         .content.smallscroll
//             |!{content}
//             //- +ismall name='tags' classes='ui inline image'
//             each tags
//                 .ui.basic.label #{this}
//             div
//             if is_admin
//                 .ui.small.header slug: #{slug}
//             if can_edit
//                 a.ui.basic.icon.button(href="/post/#{_id}/edit")
//                     i.pencil.blue.icon
//         .content
//             a.ui.button(href="/post/#{_id}/")
//                 |view
                
                
template(name='wikipedia_card')
    .ui.card
        a(href="/m/post/#{_id}/view")
            img.ui.image(src=watson.metadata.image class=currentUser.invert_class) 
        .content
            a.ui.header(href="/m/post/#{_id}/view") #{title}

template(name='post_card')
    .ui.card
        a.image(href="/m/post/#{_id}/view")
            if is_youtube
                .ui.embed(data-source="youtube" data-id=youtube_parse class=currentUser.invert_class)
        
            else if rd.thumbnail.length
                unless is_image
                    img.ui.image(src=rd.thumbnail class=currentUser.invert_class)    
            if watson.metadata.image
                img.ui.image(src=watson.metadata.image class=currentUser.invert_class) 
            if reddit_image
                // |reddit image
                img.ui.image(src=reddit_image class=currentUser.invert_class)   
            if is_image
                img.ui.image(src=url class=currentUser.invert_class)    
        if youtube_id
            +youtube_view key='youtube_id' direct=true
        else if image_id
            a.image(href="/m/post/#{_id}/view")
                img.ui.image(src="{{c.url image_id }}" class=currentUser.invert_class)
        // img.invert(src=url)
                
        // else if image_link
        //     img.ui.rounded.image(src=image_link class=currentUser.invert_class)
                
        .content
            a.header(href="/m/post/#{_id}/view")
                i.right.chevron.circular.icon
                |#{title}
            +vote
            .ui.label #{points}
            if is_admin
                +print_this
                +text_edit key='model' direct=true
            +user_list_toggle key='bookmark_ids' add_icon='bookmark outline' remove_icon='bookmark' label="bookmark"
            each seven_tags
                .ui.basic.label #{this}
            .ui.basic.label
                i.donate.icon
                |#{tip_count} tips
            .ui.basic.label
                i.chat.outline.icon
                |#{comment_count} comments
            
        // .meta
        //     |#{when}
        // .content
        //     a.meta(href=)
        //         |by 
        //         if _author.profile_image_id
        //             img.ui.avatar.compact.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        //         |#{_author.username}
            // +multi_user_view key='coauthor_ids' label='coauthors' direct=true
            // .description
                
            //     |!{blurb}
            //     // +comments_view_small   
        
    // .ui.divider
    
template(name='one_post_view')
    .ui.fluid.card.view_post
        if youtube_id
            +youtube_view key='youtube_id' direct=true
        if is_youtube
            +youtube_view key='url' direct=true
        else if image_id
            a.image(href="/m/post/#{_id}/view")
                img.ui.image(src="{{c.url image_id width=1000 crop='fill'}}" class=currentUser.invert_class) 
        else
            a.image(href="/m/post/#{_id}/view")
                img.ui.image(src=watson.metadata.image class=currentUser.invert_class)    
 
        .content
            a.inline.header(href="/m/post/#{_id}/view")
                i.right.chevron.circular.icon
                |#{title}
            a.meta(href="/user/#{_author.username}/")
                |by 
                if _author.profile_image_id
                    img.ui.avatar.compact.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                |#{_author.username}
                
            .meta
                |#{when}
            .description
                +tone
                |!{description}
                |!{body}
                // |!{analyzed_text}
            .description
                .ui.basic.label
                    i.donate.icon
                    |#{tip_count}
                .ui.basic.label
                    i.chat.outline.icon
                    |#{comment_count}
                
                |!{blurb}
                each tags
                    .ui.compact.large.circular.button.add_tag #{this}
                +comments_view_small  
            // +voting
            +vote
    // .ui.divider
                 
template(name='post_section_button')                 
    .ui.circular.compact.button 
        if icon 
            i.icon(class=icon)
        |#{label}                