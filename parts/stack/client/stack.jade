template(name='site_users')
template(name='stack')
    .ui.stackable.padded.grid
        .row
            .sixteen.wide.center.aligned.column
                .ui.inline.header.get_sites
                    i.big.stack.exchange.icon
                    |stackexchange sites
                .ui.icon.input
                    i.search.icon
                    input.search_site_name(type='text')
                // +cloud filter='stack_site'
                // .spacer
                unless site_docs.count
                    i.big.loading.yin.yang.icon
                if site_docs.count
                    // +skve k='limit' v=1 l='1'
                    // +skve k='limit' v=10 l='10'
                    // +navskve k='limit' v=20 l='20'
                    +skve k='sort_key' v='name' l='name' i='header'
                    +skve k='sort_key' v='total_answers' l='a' i='reply'
                    +skve k='sort_key' v='total_questions' l='q' i='question'
                    +skve k='sort_direction' v=-1 i='chevron up'
                    +skve gm bk='sort_direction' v=1 i='chevron down'
            // .four.wide.column
            //     .ui.header stack docs
            .sixteen.wide.column.scrollin
                // .ui.four.column.stackable.center.aligned.grid
                .ui.centered.cards
                    each site_docs
                        a.ui.card.goto_site(href='/s/#{api_site_parameter}')
                            .content
                                // img.ui.inline.tiny.image.mobile.hiden.site.shadowed.zoomer(src=high_resolution_icon_url)
                                img.ui.small.image.site.shadowed(src=logo_url)
                                // .header
                                //     |!{name}
                                .description
                                    span(style="color:#{styling.tag_foreground_color}") !{audience}
                                    |#{total_answers}
                                    i.reply.grey.icon
                                    |#{total_questions}
                                    i.question.grey.icon
                                    // span(style="color:#{styling.link_color}") !{audience}
                .ui.inline.header 
                    i.question.icon
                    |questions
                .ui.dropdown
                    span.text {{sv 'limit'}}
                    i.dropdown.icon
                    .menu 
                    .item 1
                    .item 5
                    .item 10
                    .item 20
                        |sort
                |view
                +skve k='view_mode' v='cards' l='cards' i='squared-menu' ionly=true
                +skve k='view_mode' v='list' l='list' i='list' ionly=true
                if skv_is 'view_mode' 'list'
                    .ui.large.list 
                        each stack_docs
                            .item
                                a.ui.small.header(href="/s/#{site}/doc/#{_id}")
                                    |#{title}
                else
                    .ui.cards
                        each stack_docs
                            +stack_card
                        
                        
template(name='stack_site_card')
    .ui.card
        .content
            a.ui.header(href="/s/#{api_site_parameter}")
                img(src=icon_url)
                |!{name}
            .ui.small.header #{audience}
            each tags 
                a.ui.basic.pointer.label.add_stack_tag #{this}
            if is_answered
                .ui.basic.green.label
                
                
template(name='stack_card')
    .ui.card
        .content
            a.ui.header(href="/s/#{site}/q/#{question_id}") !{title}
            each tags 
                a.ui.basic.pointer.label.add_stack_tag #{this}
            if is_answered
                .ui.basic.green.label
                    i.green.checkmark.icon
                    |answered
            else
                .ui.basic.label
                    // i..icon
                    |unanswered
            .ui.label 
                i.eye.icon
                |#{view_count}
                
            .ui.label protected_date #{protected_date}
            .ui.label accepted_answer_id #{accepted_answer_id}
            .ui.label #{answer_count} answers
            .ui.label score #{score}
            .ui.label qid #{question_id}
            .ui.label last_activity_date #{last_activity_date}
            .ui.label creation #{creation_date}
            .ui.label #{_when}
            a(href=link target='_window')
                |#{link}
            with owner
                .ui.compact.segment
                    .ui.inline.header #{display_name}
                    img.ui.tiny.inline.centered.image(src=profile_image)
                    .ui.label reputation {{ commafy reputation }}
                    .ui.label user_id #{user_id}
                    .ui.label user_type #{user_type}