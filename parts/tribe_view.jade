template(name='tribe_view')
    unless current_tribe
        .ui.center.aligned.basic.segment
            i.massive.loading.yin.yang.link.icon.create_tribe
    with current_tribe
        .ui.stackable.grid
            .row 
                .twelve.wide.column
                    a.ui.circular.basic.icon.button(href="/tribes" title='tribes')
                        i.chevron.left.icon
                        i.big.fire.icon
                        // |tribes
                    .ui.inline.header 
                        img.ui.avatar.image(src="{{c.url image_id height=200 width=200 gravity='face' crop='fill'}}")
                        |#{title}
                    if is_admin 
                        a.ui.circular.icon.button(href="/m/tribe/#{_id}/edit" title='edit tribe instance')
                            i.pencil.large.icon
                    +skve k='view_section' v='posts' l='posts' i='content'
                    // +skve k='view_section' v='events' l='events' i='calendar'
                    // +skve k='view_section' v='chat' l='chat' i='chat outline'
                    +skve k='view_section' v='members' l='members' i='users'
                    +skve k='view_section' v='stats' l='stats' i='line chart'
                    // div
                    if skv_is 'view_section' 'posts'
                        +tribe_posts
                    if skv_is 'view_section' 'members'
                        div
                        +tribe_membership
                .four.wide.column
                    if is_admin 
                        +print_this
                    +html_view key='description' label='description' direct=true
                    +multi_user_view key='leader_ids' label='tribe admins' direct=true
                    +multi_user_view key='member_ids' label='tribe members' direct=true
                    each members
                        a.ui.header(href="/user/#{username}")
                            img.ui.avatar.image(src="{{c.url profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
                            |#{username}
                    div 
                    +array_view key='tags' label='tags' direct=true
                    



template(name='tribe_posts')
    .ui.stackable.grid    
        .sixteen.wide.column
            if currentUser
                .ui.circular.icon.basic.button.create_post
                    i.plus.green.large.icon
            i.tags.icon
            if selected_tribe_tags
                // #clear_tags.ui.black.circular.icon.compact.button
                //     i.remove.icon
                each selected_tribe_tags
                    .unselect_tag.ui.black.circular.compact.button
                        strong #{this}
            each all_tags
                // +tribe_selector
                .ui.compact.circular.small.basic.tertiary.button.say.select_tag(class=cloud_tag_class) 
                    strong #{this.name}
            // div
            i.large.marker.icon
            if selected_tribe_location_tags
                // #clear_location_tags.ui.black.circular.icon.compact.button
                //     i.remove.icon
                each selected_tribe_location_tags
                    .unselect_location_tag.ui.black.circular.compact.button
                        strong #{this}
            each all_location_tags
                // +tribe_selector
                .ui.compact.circular.small.basic.tertiary.button.say.select_location_tag(class=cloud_tag_class) 
                    +tribe_selector
                    strong #{this.name}
            // div
            i.large.clock.icon
            if selected_tribe_time_tags
                // #clear_time_tags.ui.black.circular.icon.compact.button
                //     i.remove.icon
                each selected_tribe_time_tags
                    .unselect_time_tag.ui.black.circular.compact.button
                        strong #{this}
            each all_time_tags
                // +tribe_selector
                .ui.compact.circular.small.basic.tertiary.button.say.select_time_tag(class=cloud_tag_class) 
                    // if term
                    //     if term.watson.metadata.image
                    //         img.ui.avatar.image.zoomer(src=term.watson.metadata.image)
                    +tribe_selector
                    strong #{this.name}
            // div
            i.large.users.icon
            if selected_tribe_people_tags
                // #clear_people_tags.ui.black.circular.icon.compact.button
                //     i.remove.icon
                each selected_tribe_people_tags
                    .unselect_people_tag.ui.black.circular.compact.button
                        strong #{this}
            each all_people_tags
                .ui.compact.circular.small.basic.tertiary.button.say.select_people_tag(class=cloud_tag_class) 
                    strong #{this.name}
            // div
            .ui.inline.header #{q_count}
            if skv_is 'sort_direction' 1
                .ui.icon.compact.basic.tertiary.button.sort_down
                    i.caret.down.icon
            else
                .ui.icon.compact.basic.tertiary.button.sort_up
                    i.caret.up.icon
            // if skv_is 'view_bounties' 1
            //     .ui.compact.black.button.unview_bounties
            //         i.hand.holding.heart.icon
            //         | bounties
            // else
            //     .ui.compact.basic.tertiary.button.view_bounties
            //         i.hand.holding.heart.icon
            //         | bounties
            // if skv_is 'view_unanswered' 1
            //     .ui.compact.black.button.unview_unanswered
            //         i.checkmark.icon
            //         | unanswered
            // else
            //     .ui.compact.basic.tertiary.button.view_unanswered
            //         i.question.icon
            //         | unanswered
            // i.big.fire.link.icon
            .ui.compact.basic.small.tertiary.button.limit_1
                |1
            .ui.compact.basic.small.tertiary.button.limit_10
                |10
            .ui.icon.compact.large.basic.small.tertiary.button.sort_timestamp
                i.clock.icon
            .ui.icon.compact.large.basic.small.tertiary.button.set_points
                i.line.chart.icon
            // if skv_is 'view_detail' true
            //     .ui.black.compact.icon.button.toggle_detail
            //         i.list.large.icon
            //         // |detail
            // else
            //     .ui.compact.basic.large.icon.tertiary.button.toggle_detail
            //         i.minus.large.icon
            //         // |simple
            //     // i.line.chart.icon
            .ui.icon.compact.circular.large.button.set_grid(class=grid_class) 
                i.th.large.icon
            .ui.icon.compact.circular.large.button.set_list(class=list_class)
                i.list.large.icon
                    
            .scrolling
                if skv_is 'tribe_view_layout' 'grid'
                    .ui.grid 
                        each posts
                            +tribe_post_card_small
                else if skv_is 'tribe_view_layout' 'list'
                    each posts
                        +tribe_post_card
                        .ui.divider
        
template(name='tribe_selector')
    if term
        if term.watson.metadata.image
            img.ui.avatar.image.superzoom(src=term.watson.metadata.image)    
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    // a.ui.zoomer.tertiary.button.say.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
        | #{name}
        // else
        small #{count}
        
        
        
template(name='tribe_post_card_small')
    .four.wide.column
        // .ui.segment
        a(href="/post/#{_id}/view") 
            img.ui.fluid.rounded.superzoom.image(src="{{c.url image_id }}" class=currentUser.invert_class)
        a.ui.header(href="/post/#{_id}/view") 
            |#{title}
        // i.large.tag.icon(title='tags')
        // each tags
        //     .ui.basic.small.compact.button.pick(class=tag_selector_class) #{this}
        // i.large.marker.icon(title='location tags')
        // each location_tags
        //     .ui.basic.small.compact.button.pick_location(class=tag_selector_class) #{this}
        // i.large.clock.icon(title='time tags')
        // each time_tags
        //     .ui.basic.small.compact.button.pick_time(class=tag_selector_class) #{this}
        // i.large.users.icon(title='users tags')
        // each people_tags
        //     .ui.basic.small.compact.button.pick_person(class=tag_selector_class) #{this}
    
        // | !{body}
        // if is_admin
        //     +remove_button
        //     +print_this
        
        // //- div
        // +author_info
        // +creation_info
        // | #{_views} views
        // each _viewer_usernames
        //     .ui.label #{this}
        // +voting_full
    
    
template(name='tribe_post_card')
    // .ui.segment
    a(href="/post/#{_id}/view") 
        img.ui.fluid.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
    a.ui.header(href="/post/#{_id}/view") 
        |#{title}
    i.large.tag.icon(title='tags')
    each tags
        .ui.basic.small.compact.button.pick(class=tag_selector_class) #{this}
    i.large.marker.icon(title='location tags')
    each location_tags
        .ui.basic.small.compact.button.pick_location(class=tag_selector_class) #{this}
    i.large.clock.icon(title='time tags')
    each time_tags
        .ui.basic.small.compact.button.pick_time(class=tag_selector_class) #{this}
    i.large.users.icon(title='users tags')
    each people_tags
        .ui.basic.small.compact.button.pick_person(class=tag_selector_class) #{this}

    | !{body}
    if is_admin
        +remove_button
        +print_this
    
    //- div
    +author_info
    +creation_info
    | #{_views} views
    each _viewer_usernames
        .ui.label #{this}
    +voting_full
