template(name='icon')    
    // i.icon(class=name)
    img.ui.image(src="https://img.icons8.com/color/48/000000/#{name}.png" class=cl)
    // img.ui.image(src="https://img.icons8.com/plasticine/48/000000/#{name}.png" class=cl)
    // img.ui.image(src="https://img.icons8.com/ios/48/000000/#{name}.png" class=cl)
    // img.ui.image(src="https://img.icons8.com/color/48/000000/#{name}.png" class=cl)
    // img.ui.invert.image(src="https://img.icons8.com/fluent/48/000000/#{name}.png" class=cl)
    // img.ui.image(src="https://img.icons8.com/cotton/48/000000/#{name}.png" class=cl)
    //- img.ui.image(src="https://img.icons8.com/office/48/000000/#{name}.png" class=cl)

template(name='user_button')
    a.ui.button(href="/u/#{username}")
        img.ui.avatar.compact.image(src="{{c.url profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
        |#{name}

template(name='new')
    .ui.header
        

// template(name='viewed')
//     .ui.header viewed by
//     each viewed_by


template(name='smart_tagger')
    .ui.inline.header
        i.tag.icon
        |tags
    .ui.input
        input.new_tag(type='text' placeholder='+' autocomplete="off")
        //- +clear_v                
    each terms 
        a.ui.large.basic.button.select_term(href='#')
            if image
                img.ui.mini.rounded.inline.image(src="{{c.url image height=200 width=200 gravity='face' crop='fill'}}" class='invert')
            |#{title}
    each tags
        .ui.large.basic.label
            i.delete.icon.remove_element
            |#{this}
    if suggestions.count
        div
        .ui.small.inline.header suggestions
    each suggestions
        a.ui.large.basic.button.select_term(href='#')
            // if image
            //     img.ui.mini.rounded.inline.image(src="{{c.url image height=200 width=200 gravity='face' crop='fill'}}" class='invert')
            |#{title}



template(name='print_this')
    .ui.icon.basic.button.print_this
        i.orange.code.icon


template(name='viewing')
    if currentUser
        unless viewed_by
            .ui.icon.button.mark_read(title='mark read')
                i.eye.icon
        else 
            //- if is_dev
            .ui.icon.button.mark_unread(title='mark unread')
                i.eye.slash.icon
    else 
        i.eye.icon
    .ui.grey.inline.header 
        |viewers
    each read_ids
        +user_info




template(name='vote')
    a.ui.icon.button.upvote(title='upvote')
        i.thumbs.up.outline.big.icon
    if points
        strong #{points}
    a.ui.icon.button.downvote(title='downvote')
        i.thumbs.down.outline.big.icon


template(name='sbt')
    .ui.compact.large.button.toggle_session_key(class=calculated_class)
        +icolor name=icon cl='ui avatar image'
        // i.icon(class=i)
        |#{l}
        //- if icon_view 
        //- else 
            if label
                |#{label}
            else 
                |#{v}
                
                
template(name='skve')
    // a.ui.image.big.link.label.set_session_v(class=calculated_class)
    .ui.zoomer.compact.icon.button.set_session_v(class=calculated_class title=t)
        // if i
        if selected 
            +i n=i cl='ui mini image'
        else
            +iios n=i cl='ui mini image'
            // i.icon(class=icon)
        // unless ionly
        //     if l
        //         |#{l}
        //     else 
        //         |#{v}

                        


template(name='session_toggle_button')
    .ui.compact.icon.button.toggle(class=session_toggle_button_class title=title)
        i.large.icon(class=icon)
        |#{label}




template(name='comments')
    // .ui.top.attached.tabular.menu.top_rounded.comments_menu
    //     a.item.active(data-tab='first')
    // .ui.grey.header(data-tooltip='comments cost 1p each which goes to post op')
    .ui.grey.header
        i.chat.outline.icon
        | #{doc_comments.count} comments
        // a.item(data-tab='second') second
        // a.icon.item(data-tab='info') 
        //     i.large.info.icon
    // .ui.bottom.attached.tab.segment.bottom_rounded.active(data-tab='first')
    .ui.fluid.icon.large.input
        i.plus.icon
        input.add_comment(model='text' placeholder='comment (-1p)...')
    if currentUser
        .ui.comments
            each doc_comments
                .comment
                    // a.avatar(href="/u/#{_author.username}") 
                    //     img.ui.avatar.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=user_class)
                    .content
                        // a.author(href="/u/#{_author.username}") 
                        //     |#{_author.username}
                        .metadata
                            span.date #{when}
                        .text
                            | !{body}
                        span.meta
                            if can_edit
                                +remove_icon
                            // else
                            // +voting_small
                            // i.donate.link.icon
                            // i.gift.link.icon
        // |First
    // .ui.bottom.attached.tab.segment(data-tab='second')
    //     |second
    // .ui.bottom.attached.tab.segment.bottom_rounded(data-tab='info')
    //     .ui.small.header comments cost 1p each which goes to post op
    //     // .ui.small.header subcomments cost 1p per level which goes to each parent op
    //     .ui.small.header each upvote costs 1p which goes to author






template(name='month_selector')
    +kve k='month' v='jan'
    +kve k='month' v='feb'
    +kve k='month' v='mar'
    +kve k='month' v='april'
    +kve k='month' v='may'
    +kve k='month' v='jun'
    +kve k='month' v='jul'
    +kve k='month' v='aug'
    +kve k='month' v='sep'
    +kve k='month' v='oct'
    +kve k='month' v='nov'
    +kve k='month' v='dec'



template(name='follow')
    .ui.segment
        .ui.header
            i.user.plus.icon
            |follow
        +user_list_toggle k='follower_ids' i='rss' add_l='Follow' remove_l='Unfollow' color='black'


template(name='toggle_edit')
    .ui.basic.button.toggle_edit
        i.pencil.icon

template(name='user_list_info')
    a.ui.basic.button.item(href="/u/#{user.username}/view")
        img.ui.avatar.image(src=user.profile.profilePic title=name)
        |#{user.username}
        +user_status user



template(name='user_status')
    if online 
        // .ui.label(class='{{labelClass}}') 
        .ui.empty.label(title='online')
        // img.ui.avatar.image(src="https://img.icons8.com/connection-user_status-on/color/48" title='Online' width="48" height="48")
        // |Online
    else if idle
        .ui.empty.yellow.label(title='idle')
        // .ui.label(class='{{labelClass}}') Idle
    // else 
    //     |Offline

// template(name='user_card')
//     with user
//         .ui.small.horizontal.card
//             .image
//                 img.ui.rounded.mini.image(src="{{c.url profile_image_id width=300 height=300 gravity='face' crop='fill'}}")
//             .content    
//                 a.header(href="/u/#{username}") #{username} 
//                 //- .meta @#{username}
//                 strong $#{credit}
//                 small credit
//                 //- +emails_edit    
//         //- +user_status user



template(name='user_email')
    .ui.small.inline.header #{email_address}
    if email_verified
        .ui.basic.label 
            i.checkmark.icon
            |verified
    else
        .ui.label 
            i.ban.icon
            |unverified
        

template(name='big_user_card')
    with user
        //- .ui.card
        //- .ui.card(class=student_status_class)
        .ui.card
            .image
                img.ui.rounded.image(src="{{c.url image_id width=300 height=300 gravity='face' crop='fill'}}")
            .content
                a.header(href="/u/#{username}")
                     |#{username} 
                    //- .meta @#{username}
                    //- +array_view k='tags' l='Tags' d=true


template(name='user_info')
    a.ui.compact.basic.button(href="/u/#{user.username}/")
        if user.profile_image_id
            img.ui.avatar.image(src="{{c.url user.profile_image_id width=300 height=300 gravity='face' crop='fill'}}")
        //- .visible.content
        |#{user.username}
        // |@#{user.username}
        // +user_status user

template(name='user_info_small')
    a(href="/u/#{user.username}/")
        if user.profile_image_id
            img.ui.avatar.image.invert(src="{{c.url user.profile_image_id width=300 height=300 gravity='face' crop='fill'}}" title=name)
        else
            i.user.outline.icon(title=user.name)

template(name='user_info_tiny')
    a(href="/u/#{user.username}/")
        // if user.profile_image_id
        //     img.ui.avatar.image(src="{{c.url user.profile_image_id width=300 height=300 gravity='face' crop='fill'}}" title=name)
        // else
        //     i.user.outline.icon(title=user.name)
        .ui.basic.tiny.label #{user.username}

template(name='user_avatar')
    if user.profile_image_id
        img.ui.avatar.image(src="{{c.url user.profile_image_id width=300 height=300 gravity='face' crop='fill'}}" title=name)
    else
        i.user.outline.icon(title=user.name)


template(name='username_info')
    .ui.small.compact.basic.button.goto_profile
        if is_student
            img.ui.tiny.image(src="{{c.url user.profile_image_id width=100 height=100}}")
        |#{user.name}
        //- |@#{user.username}
        +user_status user


template(name='role_editor')
    each roles
        .ui.basic.button #{this}

template(name='author_info')
    with author
        a.ui.compact.basic.button(href="/u/#{username}")
            if profile_image_id
                img.ui.avatar.image(src="{{c.url profile_image_id width=100 height=100 gravity='face' crop='fill'}}")
            |by #{username}

template(name='creation_info')
    .ui.small.inline.header #{when}


template(name='user_list_toggle')
    if currentUser
        if in_list
            .ui.icon.compact.button.toggle(class=user_list_toggle_class title=label)
                i.large.icon(class=remove_icon)
                // |#{label}
        else
            .ui.icon.compact.button.toggle(class=user_list_toggle_class title=label)
                i.large.icon(class=add_icon)
        each list_users
            +user_info


template(name='doc_array_togggle')
    if currentUser
        .ui.button.toggle(class=doc_array_toggle_class title=label)
            if in_list
                if remove_icon
                    i.large.icon(class=remove_icon)
                |#{remove_label}
            else
                if add_icon
                    i.large.icon(class=add_icon)
                |#{add_label}
            |#{label}
        //- each list_users
        //-     +user_info


template(name='bookmark_button')
    if currentUser
        .ui.icon.compact.button.toggle(class=bookmark_button_class title=label)
            if bookmarked
                |bookmarked
                //- i.large.icon(class=remove_icon)
            else
                |bookmark
                //- i.large.icon(class=add_icon)
        //- each list_users
        //-     +user_info


// template(name='vote')
//     // i.thumbs.up.big.link.icon.upvote(class=upvote_class title='upvote')
//     // +vote_button amount=5
//     // +vote_button amount=10
//     // +vote_button amount=25
//     with user_vote
//         if is_dev
//             +number_edit k='points' l='edit points' d=true
//         if points
//             strong #{points}
//         // if anon_points
//         //     strong #{anon_points} anon pts
//     +vote_button amount=1
//     // i.thumbs.down.big.link.icon.downvote(class=downvote_class title='downvote')
//     // each upvoter_ids
//     //     +user_info_small
//     // each downvoter_ids
//     //     +user_info_small

template(name='vote_button')
    i.big.sort.up.link.icon.add_amount.zoom
    // .ui.large.compact.button.add_amount
    //     |+#{amount}


    
template(name='voting')
    i.thumbs.up.big.link.icon.upvote(class=upvote_class title='upvote')
    each upvoter_ids
        +user_info_small
    i.thumbs.down.big.link.icon.downvote(class=downvote_class title='downvote')
    each downvoter_ids
        +user_info_small
    if is_dev
        +number_edit k='points' l='edit points' d=true
    if points
        strong #{points} pts
    if anon_points
        strong #{anon_points} anon pts
    

template(name='voting_small')
    if points
        strong #{points}
    i.thumbs.up.outline.link.icon.upvote(class=upvote_class)
    // |#{upvoter_ids.length}
    each upvoter_ids
        +user_info_tiny
    i.thumbs.down.outline.link.icon.downvote(class=downvote_class)
    each downvoter_ids
        +user_info_tiny

template(name='voting_tiny')
    i.thumbs.up.outline.icon(class=upvote_class)
    // |#{upvoter_ids.length}
    each upvoter_ids
        +user_avatar


template(name='voting_full')
    unless is_author
        i.thumbs.up.outline.large.big.link.icon.upvote(class=upvote_class title='upvote')
        i.thumbs.down.outline.large.big.link.icon.downvote(class=downvote_class title='downvote')
    if points
        |&nbsp;
        span(title='points') #{points} pts
        //- .ui.large.basic.label(title='anon points') #{anon_points} anon pts
    if upvoter_ids
        div
        .ui.small.grey.inline.header(title='upvoters')
            i.thumbs.up.outline.green.icon
            //- |upvoters
        each upvoter_ids
            +user_info
    if downvoter_ids
        div
        .ui.small.grey.inline.header(title='downvoters')
            i.thumbs.down.outline.icon
            //- |downvoters
        each downvoter_ids
            +user_info



template(name='remove_button')
    .ui.icon.button.remove_doc(title='delete')
        i.remove.icon
        // |delete

template(name='remove_icon')
    i.remove.link.icon.remove_doc(title='delete')


//- template(name='edit_button')
//-     a.ui.basic.button.icon.edit(title='Edit' href="/m/#{model}/#{_id}/edit")
//-         i.blue.pencil.icon
//-         |Edit


template(name='toggle_button')
    .ui.icon.toggle.basic.button(title=label)
        i.icon(class=icon)
    each selected
        |#{username}


template(name='view_user_button')
    .view_user.view(title="view #{username}")
        i.play.icon
        |View



            
template(name='email_validation_check')
    //- if email_verified
    //-     .ui.large.basic.button
    //-         i.checkmark.icon
    //-         |email validated
    unless email_verified
        .ui.basic.fluid.button.send_verification
            //- i.user.shield.icon
            |resend verification email
        if times
            .ui.label
                |#{times}
            //- else
                //- |#{times}x sent
        if is_staff
            .ui.button.toggle_email_verified
                |mark email verified
        
        

template(name='user_array_list')
    .ui.list
        each users
            .item
                +user_info

            
template(name='user_array_element_toggle')
    .ui.compact.button.toggle_element(class=user_array_element_toggle_class)
        |#{v}

template(name='user_string_toggle')
    .ui.button.toggle_element(class=user_string_element_toggle_class)
        |#{v}



template(name='author_block')
    .ui.segment 
        img.ui.avatar.image.refresh_user_stats(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        a.ui.header(href="/u/#{_author.username}") #{_author.username}
        .ui.list
            .item #{total_question_count} questions asked
            .item #{open_question_count} open questions
            .item #{total_bounty_offered} total bounty offered


template(name='kve')
    a.ui.compact.large.button.set_key_v.select_term(class=set_kv_class title=v href='#')
        if i
            // +icon n=icon cl='ui avatar image'
            i.icon(class=i)
        unless icon_only
            if l
                |#{l}
            else 
                |#{v}
        
template(name='user_kve')
    .ui.compact.button.set_key_v(class=set_kv_class)
        if icon 
            i.icon(class=icon)
        if label
            |#{l}
        else 
            |#{v}


template(name='session_key_v')
    .ui.button.set_session_v(class=button_class) 
        if icon 
            i.icon(class=icon)
        if l
            |#{l}
        else 
            |#{v}
            
            
template(name='vid_card')
    .ui.stackable.grid
        .sixteen.wide.center.aligned.column
            each thumbs
                img.ui.small.superzoom.rounded.invert.inline.image.mobile.hidden(src=src)    
                // img.ui.tiny.zoomer.rounded.inline.image.mobile.only(src=src)    
            iframe.invert(src="https://www.pornhub.com/embed/#{video_id}" frameborder="0" width="100%" height='500' scrolling="no")
            // img.ui.image.rounded.pointer(src=default_thumb)
            //- a.ui.small.header(href=url target='_window') #{title}
            a.ui.grey.center.aligned.header(href="/vid/#{_id}/view" class=emotion_color_class) !{lowered_title}
            .spacer
                
            |#{when}
            if dev
                +print_this
                i.remove.big.icon
                i.fork.big.icon
            .ui.label #{views}
            .ui.basic.label #{rating} rating
            .ui.basic.label #{ratings} ratings
            .ui.basic.label #{views} views
            if dev 
                i.code.link.icon.print_me
            