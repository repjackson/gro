template(name='home')
    .ui.padded.grid
        .sixteen.wide.column.scrolling             
            // i.large.clock.icon
            // i.large.thumbs.up.icon
            .ui.icon.button.add_post
                i.plus.green.icon
            .ui.icon.transparent.input
                // if is_loading
                //     i.yin.yang.loading.icon
                // else
                i.search.icon
                input.search_tag(type='text' value=query)
                // .ui.label #{this}
            
            if picked_tags
                // if many_tags
                //     a#clear_tags.ui.red.invert.icon.compact.button.pick_term
                //         i.remove.icon
                each picked_tags
                    +unpick_tag
            each result_tags
                // .ui.label #{this}
                +tag_picker
        .four.wide.column.scrolling             
            if location_results.count
                i.big.marker.icon
            each picked_locations
                a.unpick_location.ui.large.compact.button(href='#')
                    strong #{this}
            each location_results
                if name
                    .ui.tiny.compact.button.pick_location #{name}
            div
            i.big.user.icon
            each picked_authors
                a.unpick_author.ui.large.compact.button(href='#')
                    strong #{this}
            each author_results
                if name
                    .ui.tiny.compact.button.pick_author #{name}
            div
            i.clock.big.icon
            each picked_times
                a.unpick_time.ui.large.large.compact.button(href='#')
                    strong #{this}
            each time_results
                .ui.tiny.compact.button.pick_time #{name}
            .ui.inline.header 
                |#{post_counter}
            // +alpha
            each picked_locations
                a.unpick_location_tag.ui.black.large.compact.button(href='#')
                    | #{this}
            if location_tags
                i.big.marker.grey.icon
                each location_tags
                    .ui.compact.small.button.zoomer.pick_location_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
                        | #{name}
            if Locations
                div
                .ui.small.grey.inline.header
                    i.marker.grey.icon
                    |locations
                each locations
                    +tag_picker
                    // .ui.link.label.pick_Location #{name}
            if HealthConditions
                div
                .ui.small.grey.inline.header
                    i.doctor.icon
                    |health conditions
                each HealthConditions
                    +tag_picker
                    // .ui.link.label.pick_healthcondition #{name}
            if Persons
                .spacer
                .ui.small.grey.inline.header
                    i.user.icon
                    |people
                each Persons
                    +tag_picker
                    // .ui.label.pick_person #{name}
            if Organizations
                .spacer
                .ui.small.grey.inline.header
                    i.building.icon
                    |organizations
                each Organizations
                    +tag_picker
                    // .ui.label.pick_organization #{name}
            if Companies
                .ui.small.grey.inline.header
                    i.building.icon
                    |companies
                each companies
                    .ui.label.pick_company #{name}                        
                                
        .twelve.wide.column
            .ui.disabled.button shared with me
            if skv_is 'sort_direction' 1
                .ui.icon.compact.button.sort_down
                    i.caret.down.icon
            else
                .ui.icon.compact.button.sort_up
                    i.caret.up.icon
            .ui.compact.small.button.sort_created(class=sort_created_class)
                i.clock.icon
                |latest
            .ui.compact.small.button.sort_ups(class=sort_ups_class)
                i.thumbs.up.icon
                |liked
            if skv_is 'view_detail' true
                .ui.black.compact.button.toggle_detail
                    i.list.icon
                    |detail
            else
                .ui.compact.button.toggle_detail
                    i.minus.icon
                    |simple
                // i.line.chart.icon
            if skv_is 'view_layout' 'grid'
                .ui.compact.black.button.set_grid(class=grid_class) 
                    i.th.icon
                    |grid
            else
                .ui.compact.button.set_grid(class=grid_class) 
                    i.th.icon
                    |grid
            if skv_is 'view_layout' 'list'
                .ui.compact.black.button.set_list(class=list_class)
                    i.list.icon
                    |list
            else
                .ui.compact.basic.button.set_list(class=list_class)
                    i.list.icon
                    |list
            .ui.icon.button
                i.film.icon
            .ui.icon.button
                i.picture.icon
            .ui.icon.button
                i.chat.icon            
            .ui.stackable.two.cards.scrolling
                each posts
                    .ui.card.mark_read(class=card_class)
                        if image_link
                            a(href="/p/#{_id}/view")
                                img.ui.zoomer.image(src=image_link)
                        if image_id
                            a(href="/p/#{_id}/view")
                                img.ui.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                        if youtube_id
                            +youtube_view key='youtube_id' label='youtube id' direct=true

                        .content.smallscroll
                            div
                            i.thumbs.up.link.outline.icon.upvote
                            |#{points}
                            i.thumbs.down.link.outline.icon.downvote
                            |#{when}
                            |!{content}
                            +voting_full
                            // .ui.tiny.icon.input
                            //     i.grey.tag.icon
                            //     input.add_tag(type='text' placeholder='+')
                            // each tags
                            //     +flat_tag_picker
                                // .ui.small.compact.button.pick_flat_tag #{this}
                            // each timestamp_tags
                            //     .ui.small.compact.button.pick_flat_time #{this}
                            if location
                                i.grey.marker.icon
                                |#{location}
                            // if author
                            //     i.grey.user.outline.icon
                            //     |#{author}
                            each read_ids
                                .ui.label #{this}
                        .content
                            if is_author
                                i.large.lock.link.circular.grey.icon.make_private
                            else if in_dev
                                i.large.lock.link.circular.grey.icon.make_private
                            a.ui.icon.large.button(href="/p/#{_id}/view")
                                |#{views}
                                i.chevron.right.large.icon
                                
                                
template(name='tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    .ui.compact.tertiary.button.zoomer.pick_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.avatar.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}
        
template(name='unpick_tag')
    a.unpick_tag.ui.large.black.compact.button.no_blink(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}

        
        
template(name='flat_tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    .ui.compact.tiny.button.zoomer.pick_flat_tag(title="#{count} results" class="#{picker_class} #{thinking_class}")
        // if term
        //     if term.watson.metadata.image
        //         img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        | #{this}
        // if in_dev
        //     small #{count}
