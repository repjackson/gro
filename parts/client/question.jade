
                    
template(name='question_view')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .sixteen.wide.center.aligned.column
                    if is_editing
                        +text_edit k='title' l='title' input_class='fluid large' d=true
                    else
                        .ui.header(class=question_header_class) #{title}
            .row 
                .five.wide.column
                    .ui.grey.inline.header 
                        i.calculator.icon
                        |alpha
                    .ui.icon.large.button(title='call tone')
                        i.smile.icon
                        |tone
                    .ui.icon.large.button(title='call alpha')
                        i.brain.icon
                        |watson
                    .ui.large.button(title='call duck')
                        i.search.icon
                        |duck it
                .six.wide.center.aligned.column
                    if url 
                        a(href=url target='_window') #{url}
                        img.ui.image(src=url class='invert')    
                    if image_id
                        a(href="{{c.url image_id }}" target='_window')
                            img.ui.rounded.image(src="{{c.url image_id gravity='face' crop='fit'}}" class='invert')
                    else if image_url
                        // a(href="/question/#{_id}/view")
                        img.ui.pointer.rounded.inset.image(src=image_url class=currentUser.invert_class)
                
                    if youtube_id
                        +youtube_view k='youtube_id' d=true
                    .f12
                        |!{body}
                    if kv_is 'question_type' 'multiple_choice'
                        +mc_select n=1
                        +mc_select n=2
                        +mc_select n=3
                        +mc_select n=4
                    if kv_is 'question_type' 'boolean'
                        .ui.big.icon.button.mark_true(title='true')
                            i.checkmark.big.icon
                            // |true
                        .ui.big.icon.button.mark_false(title='false')
                            i.ban.big.icon
                            // |false/
                    +comments
                    .ui.button.add_answer
                        i.plus.icon 
                        |answer
                    each question_answers
                        +answer_segment
                .five.wide.column
                    .ui.header question type: #{question_type}
                    if can_edit
                        a.ui.icon.big.button.edit_question(href="/question/#{_id}/edit")
                            i.large.pencil.icon
                    +vote
                    div
                    .ui.segment
                        .ui.grey.header 
                            i.eye.icon
                            |visible
                        if can_edit
                            +kve k='vis' v='public'
                            +kve k='vis' v='friends'
                            +kve k='vis' v='list'
                        else
                            .ui.small.header #{vis}
                    div
                    .ui.grey.inline.header 
                        i.hand.holding.heart.icon
                        |bounties
                    .ui.icon.button.add_bounty(title='add bounty')
                        i.plus.icon
                    each question_bounties
                        +question_bounty
                    div
                    .ui.grey.inline.header 
                        i.fork.icon
                        |dependencies
                    .ui.icon.button.add_dependency(title='add dependency')
                        i.plus.icon
                    .ui.selection.link.large.list
                        each dependencies
                            a.item(href="/question/#{_id}/view") #{title}
                    .ui.inline.grey.inline.header 
                        i.sitemap.icon
                        |#{dependents.length}
                        |dependents
                    .ui.icon.button.add_dependent
                        i.plus.icon
                    .ui.selection.link.large.list
                        each dependents
                            a.item(href="/question/#{_id}/view") #{title}
                    // .ui.button.connect_existing
                    //     i.fork.icon
                    //     |connect existing
                    // div
                    div
                    .ui.inline.small.grey.header 
                        i.grey.clock.icon
                        |#{when}
                    div
                    .ui.label #{views} views
                    div
                    |#{tags.length}
                    i.tag.icon
                    each tags
                        .ui.label #{this}
                    // +array_view k='tags' d=1
                    if dev
                        +print_this
                    +author_block
                    +viewing
                    
                  
template(name='answer_segment')                  
    .ui.segment
        .ui.header #{title}
        if can_edit
            +sbt k='is_editing' i='pencil'
            +remove_button
        if session is_editing
            +text_edit k='title' d=true
        .ui.label #{choice_num}
        .ui.label #{boolean_choice}
        +author_block
        .ui.label 
            i.user.outline.icon
            |#{_author.username}
            

                    
template(name='mc_select')
    .ui.big.button.select_option(class=mc_select_class) #{choice_text} 
    // |{{mc_option_"#{n}"}}
                    
                    
template(name='question_bounty')
    .ui.segment
        .ui.header #{amount}
        if can_edit
            +sbt k='editing_mode' l='edit'
        if session_is 'editing_mode'
            +number_edit k='amount' d=true