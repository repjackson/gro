template(name='profile')
    +nav
    .ui.bottom.attached.pushable.segment
        +leftbar
        +rightbar
        // #main_area.global_container.pusher.invert
        #main_area.global_container.pusher(class=currentUser.invert_class)
            with user
                .ui.stackable.padded.grid
                    .four.wide.column
                        span.mobile.only
                            a(href="/u/#{username}/")
                                img.ui.centered.tiny.inline.spaced.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}")
                        span.mobile.hidden
                            if editing_mode
                                +image_edit k='profile_image_id' i='picture' title='avatar' d=true
                            else 
                                a(href="/u/#{username}/")
                                    img.ui.small.inline.invert.rounded.image.boop(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}") 
                        a.ui.header.refresh_user_stats(href="/u/#{username}") 
                            |#{name}
                        // div
                        a.ui.small.header.refresh_user_stats(href="/u/#{username}") 
                            |@#{username}
                        if is_current_user
                            a(href="/u/#{username}/edit")
                                i.big.cog.pointer.icon
                        if is_dev
                            .ui.small.inline.header #{_id}
                        unless is_current_user
                            if currentUser
                                // div
                                +user_friend_button 
                        if is_dev
                            +print_this
                        .ui.vertical.fluid.menu
                            // a.zoomer.item(href="/u/#{username}" class="{{isActiveRoute 'user_debits'}}")
                            //     i.dashboard.icon
                            //     |dashboard
                            // a.zoomer.item(href="/u/#{username}/events" class="{{isActiveRoute 'user_debits'}}")
                            //     i.calendar.icon
                            //     |events
                            // a.zoomer.item(href="/u/#{username}/friends" class="{{isActiveRoute 'user_debits'}}")
                            //     i.users.icon
                            //     |friends
                            // a.zoomer.item(href="/u/#{username}/debits" class="{{isActiveRoute 'user_debits'}}")
                            //     i.money.icon
                            //     |debits
                            // a.zoomer.item(href="/u/#{username}/credits" class="{{isActiveRoute 'user_credits'}}")
                            //     i.money.icon
                            //     |credits
                            // a.zoomer.item(href="/u/#{username}/questions" class="{{isActiveRoute 'user_questions'}}")
                            //     i.question.icon
                            //     |quesions
                            // a.zoomer.item(href="/u/#{username}/answers" class="{{isActiveRoute 'user_answers'}}")
                            //     i.money.icon
                            //     |answers
                            // a.zoomer.item(href="/u/#{username}/tribes" class="{{isActiveRoute 'user_tribes'}}")
                            //     i.fire.icon
                            //     |tribes
                            // a.zoomer.item(href="/u/#{username}/overlap" class="{{isActiveRoute 'user_overlap'}}")
                            //     i.money.icon
                            //     |overlap
                            .divider
                            if i_have_points
                                a.item.send(title='send points')
                                    i.gift.icon
                                    span send pts
                                // .ui.button.request(title='request points')
                                //     i.concierge.bell.teal.icon
                                //     span request
                                    
                            if is_current_user
                                a.item.logout(href="#" title='log out')
                                    i.sign.out.icon
                                    |log out
                            // if i_have_points
                            //     .ui.button.send(title='send points')
                            //         i.gift.large.icon
                            //         span send pts
                            //     // .ui.button.request(title='request points')
                            //     //     i.concierge.bell.large.teal.icon
                            //     //     span request
                                    
                            // if is_current_user
                            //     a.ui.button.logout(href="#" title='log out')
                            //         i.sign.out.large.icon
                            //         |log out
                            
            
                        .ui.fluid.dropdown.button
                            i.users.icon
                            | #{friends.count} friends
                            .menu 
                                each friends
                                    a.item(href="/u/#{username}" title=username)
                                        if profile_image_id
                                            img.ui.avatar.invert.image(src="{{c.url profile_image_id height=500 width=300 gravity='face' crop='fill'}}")
                                        // else
                                        //     .ui.label.image #{initials}
                                        | #{username}
                        .ui.selection.link.list.smallscroll
                            each friends
                                a.item(href="/u/#{username}" title=username)
                                    if profile_image_id
                                        img.ui.avatar.invert.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}")
                                    else
                                        .ui.label.image #{initials}
                                    .content
                                        .header #{username}
                    .twelve.wide.column 
                        // .ui.dropdown
                        //     span.text dropdown
                        //     i.dropdown.icon
                        //     .menu 
                        //         +skve k='limit' v=1 l='1'
                        //         +skve k='limit' v=10 l='10'
                        //         .item 1
                        //         .item 5
                        //         .item 10
                        //         .item 20
                        
                        // +skve k='profile_section' v='dashboard' l='dashboard' i='dashboard'
                        // +skve k='profile_section' v='friends' l='friends' i='groups'
                        // +skve k='profile_section' v='finance' l='finance' i='money'
                        // +skve k='profile_section' v='posts' l='posts' i='blog'
                        // +skve k='profile_section' v='tribes' l='tribes' i='campfire'
                        // +skve k='profile_section' v='questions' l='questions' i='faq'
                        // +skve k='profile_section' v='answers' l='answers' i='rss'
                        // +skve k='profile_section' v='overlap' l='overlap' i='exchange'
                        // +skve k='profile_section' v='privacy' l='privacy' i='lock'
                        // +skve k='profile_section' v='debits' l='debits' i='initiate-money-transfer'
                        // +skve k='profile_section' v='credits' l='credits' i='deposit'
                        // if skv_is 'profile_section' 'dashboard'
                        //     .ui.header #{points_earned}pts earned
                        //     +user_dashboard
                        // else if skv_is 'profile_section' 'friends'
                        //     .ui.header friends
                        // else if skv_is 'profile_section' 'authored_overlap'
                        //     +authored_overlap
                        // else if skv_is 'profile_section' 'debits'
                        //     +user_debits
                        // else if skv_is 'profile_section' 'privacy'
                        //     +edit_privacy
                        // else if skv_is 'profile_section' 'alerts'
                        //     +alerts
                        // else if skv_is 'profile_section' 'finance'
                        //     .ui.header finance
                        +yield
    +chatpop
              


template(name='authored_overlap')
    .ui.inline.header
        i.edit.icon
        |authored overlap
    .ui.three.column.grid
        .column
            .ui.header them
            each current_user.authored_tags
                .ui.label #{title}:#{count}
        .column
            .ui.header union
            each overlap
                .ui.label #{name}: #{count}
        .column
            .ui.header you #{currentUser.total_authored_points}
            each currentUser.authored_tags
                .ui.label #{title}:#{count}


template(name='user_rentals')
template(name='user_dashboard')
    // +user_about
    // .ui.hidden.divider
    .ui.stackable.four.column.grid
        // .column
        //     .ui.inline.header 
        //         +icon n='deposit'
        //         |#{total_credit_amount}p
        //         |received
        //         .ui.basic.label #{credit_count} credits
        //             | ##{global_credit_count_rank}
        //     .scrolling
        //         each user_credits
        //             .ui.segment
        //                 if author.profile_image_id
        //                     img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
        //                 .content
        //                     .header
        //                         strong #{amount}pt 
        //                         |from 
        //                         a(href="/u/#{author.username}")
        //                             |#{author.username}
        //                     .description
        //                         a(href="/debit/#{_id}/view")
        //                             |#{when}
        //                 .content
        //                     .description
        //                         |#{description}
        //                         each tags
        //                             .ui.mini.basic.label #{this}
        // .column
        //     .ui.inline.spaced.header 
        //         +icolor n='filled-sent' 
        //         |#{total_send_amount}p
        //         |sent
        //         small(title='send count') (#{send_count}x)
        //             .ui.label ##{global_send_count_rank}
        //     div
        //     .scrolling
        //         each user_debits
        //             .ui.segment
        //                 a(href="/debit/#{_id}/view")
        //                     if recipient.profile_image_id
        //                         img.ui.avatar.image(src="{{c.url recipient.profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
        //                     .header
        //                         strong #{amount}pt
        //                         |#{when}
        //                         | to 
        //                         a(href="/u/#{recipient.username}")
        //                             |#{recipient.username}
        //                     .description
        //                         |#{description}
        //                         each tags
        //                             .ui.mini.label #{this}
        //                         if is_admin
        //                             +remove_button
        // .column
        //     .ui.header 
        //         // i.hand.holding.heart.icon
        //         +icolor n='request-service'
        //         |requests
        //     .smallscroll
        //         each user_requests
        //             a(href="/request/#{_id}/view")
        //                 .ui.segment
        //                     .header #{point_bounty}pts: #{title}
        //                     |#{description}
        //                     |status: #{status}
        //                     if complete 
        //                         |completed by #{completer.name}
        // .column
        //     .ui.header 
        //         +icolor n='calendar' cl='ui inline spaced image'
        //         |events
        //     .smallscroll
        //         each user_event_tickets
        //             a(href="/event/#{event_id}/view")
        //                 .ui.segment
        //                     .header #{ticket_event.title}
        //                         |#{_author.username}
        //                         |#{description}
        //                         |#{when}
    .ui.stackable.padded.grid
        .eight.wide.column
            .ui.comments.medscroll
                .ui.icon.fluid.inverted.input
                    i.plus.icon
                    input.add_post(type='text' placeholder='add post...')
                each latest_posts
                    +post_segment
        .eight.wide.column
            // .ui.segment
            //     .ui.header 
            //         |quick send
            //     if is_current_user
            //         each friends 
            //             a.profile_nav_item(href="/u/#{username}" title=username)
            //                 if profile_image_id
            //                     img.ui.mini.inline.invert.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}")
            //                 else
            //                     .ui.label #{initials}
            //     else
            //         .ui.button.tip
            //             |+1
            // each income
            //     .ui.tiny.header #{amount} #{_author.username}
            // +user_topups
            // .ui.segment
            //     .ui.header questions
            //     .ui.icon.button.ask_question
            //         i.plus.icon
            //     if asking_question
            //         with question_asking
            //             +text_edit k='title' d=true
            //             +number_edit k='bounty' d=true 
            //             .ui.button.save_question
            //                 i.checkmark.icon
            //             +remove_button
            //     each questions_asked
            //         .ui.segment.select_question
            //             a.ui.pointer.header q:#{title}
            //             .ui.label #{bounty}pts
                        
            // .ui.header 
            //     i.big.money.icon(title='log events')
            //     |earnings
            // .ui.header #{points} points
            // i.big.rss.icon(title='log events')
            // .ui.large.list
            //     each log_events
            //         .item 
            //             .content
            //                 .header #{body}
            //                 .meta #{_when}
           
           
           
template(name='user_topups')
    .ui.segment
        .ui.inline.header 
            +i n='donation'
            |topups
        .ui.icon.button.add_topup
            i.plus.icon
        .ui.large.list
            each topups
                .item
                    .content
                        |#{_when} #{amount}
                        +remove_icon

           
template(name='post_segment')           
    .ui.comment
        .avatar
            img.ui.avatar.compact.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)

        .content
            .text #{body}
            a.author(href="/u/#{_author.username}") #{_author.username}
            .metadata
                span.date(title=_when_long)
                    |#{_when}
                .actions
                    // i.eye.grey.icon
                    +voting_small
                    // i.reply.link.grey.icon
                    a.remove_post
                        i.remove.link.grey.icon
                // i.archive.link.grey.icon
                // i.share.grey.icon
                // +emotion_picker
            // if replying
            //     .ui.fluid.small.input
            //         input.reply_body(type='text')
            // .ui.grid
            //     .two.wide.column
            //     .fourteen.wide.column
            //         each replies
            //             div
            //             .ui.tiny.inline.header #{body}
            //             if is_author
            //                 +remove_icon
           
           
                
template(name='emotion_picker')
    +emotion_pick k='joy' i='smile' color='green' 
    +emotion_pick k='sadness' i='frown' color='blue'
    +emotion_pick k='anger' i='anger' color='red'
    +emotion_pick k='disgust' i='tongue' color='orange'
    +emotion_pick k='fear' i='exclamation' color='grey' 
    
template(name='emotion_pick')
    i.link.icon.pick(class="#{icon} #{pick_class} invert" title=key)


template(name='user_friend_button')
    if is_friend
        .ui.blue.button.unfriend(title='unfriend')
            i.checkmark.large.icon
            |friends
    else
        .ui.button.friend(title='friend')
            i.user.plus.large.icon
            |friend




template(name='cloud_comparison')
    .ui.inline.header
        // i.brain.icon
        +i n='brain'
        |cloud comparison
    // i.dropdown.icon
    .ui.two.column.stackable.grid
        // .column
        //     .ui.header you #{currentUser.total_upvoted_points}
        //     each currentUser.upvoted_tags
        //         a.ui.large.label.select_tag #{title}
        //             small #{count}
        // .column
        //     .ui.header union
        //     each overlap_results
        //         a.ui.huge.label.select_tag #{name}
        //             small #{count}
        .column
            .ui.header 
                +i n='brain'
                // i.brain.icon
                |mind
            // each friended_by
            //     a.ui.small.compact.button.select_user(class=friend_button_class)
            //         |#{username}
            each current_user.upvoted_tags
                a.ui.large.label.select_tag #{title}
                    small #{count}
        .column
            .ui.header 
                +i n='autumn'
                // i.cubes.icon
                |matter
            // each friended_by
            //     a.ui.small.compact.button.select_user(class=friend_button_class)
            //         |#{username}
            each current_user.credit_tags
                a.ui.large.label.select_tag #{title}
                    small #{count}

         
         
                        
template(name='user_credit_segment')
    .ui.segment.user_credit_segment.pointer.zoom
        if image_id
            img.ui.fluid.image(src="{{c.url image_id height=200 width=300 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        .header
            strong #{amount}pt 
            // |from 
            if author.profile_image_id
                img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=300 gravity='face' crop='fill'}}" class=currentUser.invert_class)
            |#{_author.username}
     #{_when}
        div
        |#{description}
        div
        each tags
            .ui.mini.label #{this}


template(name='user_debit_segment')
    .ui.segment.user_debit_segment.pointer.zoom
        if image_id
            img.ui.fluid.image(src="{{c.url image_id height=200 width=300 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        .header
            strong #{amount}pt
            | to 
            if recipient.profile_image_id
                img.ui.avatar.image(src="{{c.url recipient.profile_image_id height=200 width=300 gravity='face' crop='fill'}}" class=currentUser.invert_class)
            |#{recipient.username}
     #{_when}
        div
        |#{description}
        div
        each tags
            .ui.mini.label #{this}
            
            
            
template(name='alerts')
    .ui.header
        i.rss.icon
        | alerts
    .ui.header notifiy when 
    .ui.big.link.list
        .item receive credit
        .item invited to event 
        .item invited to shift 
        .item personal request received             
        
        
template(name='edit_privacy')
    .ui.header
        +icolor n='private' cl='ui image'
        | privacy
    .ui.grid 
        .row 
            .four.wide.column
                +boolean_edit k='publish_profile' l='publish profile' d=true
            .twelve.wide.column
                .ui.header 
                    |make profile public 
                .ui.small.header 
                    |allow others to find your profile and follow you, allows you to follow others, enrolls you in public leaderboards
        .row 
            .sixteen.wide.column
                a.ui.basic.compact.button.logout_other_clients(href="#")
                    i.globe.icon
                    |log out other clients
                if is_admin
                    a.ui.basic.compact.button.force_logout(href="#")
                        i.shield.icon
                        |force log out
                
                .ui.header sessions
                .ui.large.list
                    each current_user.services.resume.loginTokens
                        .item #{_when}: #{hashedToken}
        