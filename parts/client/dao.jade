template(name='dao')
    .ui.stackable.grid
        .row
            .sixteen.wide.column
                // a.icon.ui.big.circular.icon.button.zoomer(href='/')
                //     i.large.yin.yang.grey.icon
                // unless viewing_doc
                if selected_tags
                    // if many_tags
                    //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                    //         i.remove.icon
                    each selected_tags
                        +unselect_tag
                .ui.left.icon.transparent.big.input(class=thinking_class)
                    if skv_is 'thinking' true
                        i.big.yin.yang.loading.icon
                    else 
                        i#clear_tags.link.yin.yang.big.icon(class=thinking_class)
                    // i.search.grey.icon
                    input.search_title(type='text' autofocus='' placeholder=doc_count)
                each tag_results
                    +tag_selector
                // .ui.header 
                //     i.smile.large.grey.icon
                //     |emotion
                // .spacer
            .four.wide.right.aligned.column.scrolling
                // .ui.large.basic.label(title='results') #{doc_count} results
                // .ui.basic.circular.button(title='when')
                // i.clock.icon
                // +i n='clock' cl='ui mini inline image'
                // |when
                // .ui.basic.button(title='where')
                    // i.marker.icon
                // div
                // .ui.inline.header 
                //     +i n='reddit' cl='ui mini inline image'
                //     |subreddit
                // each subreddit_results
                //     +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                div
                .ui.inline.grey.header 
                    +i n='marker' cl='ui mini inline image'
                    |where
                each location_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                // .ui.basic.tertiary.button(title='groups')
                // i.users.icon
                div
                .ui.inline.grey.header 
                    +i n='user' cl='ui mini inline image'
                    |people
                each person_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                // .ui.basic.tertiary.button
                div
                .ui.inline.grey.header 
                    +i n='home' cl='ui mini inline image' t='facility'
                    |facilities
                each facility_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                +i n='briefcase' cl='ui mini inline image' t='company'
                each company_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                // +i n='television' cl='ui mini inline image' t='tv shows'
                each tvshow_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                +i n='building' cl='ui mini inline image' t='organization'
                each organization_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                +i n='trophy' cl='ui mini inline image' t='award'
                each award_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                div
                .ui.inline.grey.header 
                    +i n='paper' cl='ui mini inline image'
                    |print media
                    // |where
                each print_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                +i n='sport' cl='ui mini inline image' t='sport'
                each sport_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                +i n='movie' cl='ui mini inline image' t='movie'
                each movie_results
                    +tag_selector
                    // .ui.compact.small.tertiary.add_tag.button #{name}
                each selected_emotions
                    .ui.black.compact.button.unselect_emotion
                        |#{this}
                each emotion_results
                    if name
                        .ui.compact.basic.circular.button.select_emotion
                            |#{name}
                +skve k='emotion_mode' v='happy' l='happy' i='happy--v1'
                +skve k='emotion_mode' v='sad' l='sad' i='sad--v1'
                +skve k='emotion_mode' v='anger' l='anger' i='angry--v1'
                +skve k='emotion_mode' v='disgust' l='disgust' i='disgusting'
                +skve k='emotion_mode' v='fear' l='fear' i='scream'
                +skve k='view_mode' v='posts' l='posts' i='blog'
                +skve k='view_mode' v='wikipedia' l='wikipedia' i='wikipedia'
                +skve k='view_mode' v='stackexchange' l='stackexchange' i='code'
                +skve k='view_mode' v='image' l='image' i='image'
                // +skve k='view_mode' v='github' l='github' i='github'
                +skve k='view_mode' v='video' l='youtube' i='youtube'
                +skve k='view_mode' v='twitter' l='twitter' i='twitter'
                // +skve k='view_mode' v='bitcoin' l='bitcoin' i='bitcoin'
                // +skve k='view_mode' v='covid' l='covid' i='biohazard'
                // +view_mode k='alpha' i='disabled brain'
                // +view_mode k='porn' i='mercury'
                // +view_mode k='bitcoin' i='bitcoin'
                // +view_mode k='covid' i='biohazard'
                    // i.building.icon
                    // |organizations
            .twelve.wide.column.scrolling
                +skve k='main_section' v='dashboard' l='dashboard' i='dashboard'
                +skve k='main_section' v='alpha' l='alpha' i='brain'
                +skve k='main_section' v='duck' l='search' i='search'
                +skve k='main_section' v='reddit' l='reddit' i='reddit'
                +skve k='main_section' v='wikipedia' l='wikipedia' i='wikipedia'
                +skve k='main_section' v='stackexchange' l='stackexchange' i='code'
                // +skve k='main_section' v='shop' l='shop' i='shop'
                // +skve k='main_section' v='chat' l='chat' i='chat'
                // +skve k='main_section' v='groups' l='groups' i='groups'
                // +skve k='main_section' v='events' l='events' i='calendar'
                // +skve k='main_section' v='tasks' l='tasks' i='tasks'
                // +skve k='main_section' v='leaderboard' l='leaderboard' i='leaderboard'
                // +skve k='main_section' v='university' l='university' i='university'
                // +skve k='main_section' v='faq' l='faq' i='faq'
                // +skve k='main_section' v='money' l='money' i='money'
                .scrollin
                    if skv_is 'main_section' 'dashboard'
                        +i n='dashboard'
                        +comments
                        .ui.header views 
                        +voting
                    else if skv_is 'main_section' 'alpha'
                        +alpha
                    else if skv_is 'main_section' 'duck'
                        .ui.inline.grey.header.toggle_duck.pointer
                            i.search.icon
                            |search
                        if viewing_duck
                            if skv_is 'loading_duck' true
                                i.big.globe.loading.icon 
                                |duck duck go...
                            else
                                // unless viewing_doc
                                each ducks
                                    +duck 
                    else if skv_is 'main_section' 'groups'
                        .ui.button
                            .ui.inline.header 
                                i.users.large.grey.icon
                                |group
                            each selected_subreddits
                                .ui.black.compact.button.unselect_subreddit
                                    |#{this}
                            each subreddit_results
                                +select_subreddit
                    else if skv_is 'main_section' 'stack'
                        .ui.inline.header 
                            i.stack.large.icon
                            |stack
                        each stack_docs
                            .ui.header #{title}
                    else if skv_is 'main_section' 'sources'
                        .ui.inline.header 
                            i.database.large.icon
                            |sources
                        each selected_models
                            .ui.black.compact.button.unselect_model
                                |#{this}
                        each model_results
                            .ui.compact.button.select_model
                                |#{name}
                    else if skv_is 'main_section' 'reddit'
                        a.ui.header.toggle_reddit.pointer(href="#")
                            // i.large.reddit.icon
                            +i n='reddit'
                            |#{reddit_docs.count} reddit
                        // if viewing_reddit
                        .ui.dropdown
                            // span.text limit
                            i.dropdown.icon
                            .menu 
                                +skve k='limit' v=1 l='1'
                                +skve k='limit' v=10 l='10'
                                +skve k='limit' v=20 l='20'
                                // .item 1
                                // .item 5
                                // .item 10
                                // .item 20
                        // |sort
                        +skve k='sort_key' v='_timestamp' l='when' i='clock'
                        +skve k='sort_key' v='points' l='points' i='leaderboard'
                        +skve k='sort_direction' v=-1 l='u' i='up'
                        +skve k='sort_direction' v=1 l='d' i='down'
                        // |view
                        +skve k='view_mode' v='cards' l='cards' i='squared-menu' ionly=true
                        +skve k='view_mode' v='list' l='list' i='list' ionly=true
                        if skv_is 'view_mode' 'list'
                            .ui.large.list 
                                each reddit_docs
                                    .item
                                        if is_image
                                            img.ui.small.image.pointer.zoomer.toggle_view(src=url)
                                        else if watson.metadata.image
                                            img.ui.rounded.small.pointer.zoomer.image.toggle_view(src=watson.metadata.image)    
                                        .content
                                            .header 
                                                |#{title}
                        else 
                            .ui.cards
                                each reddit_docs
                                    +reddit_doc
                        
                    else if skv_is 'main_section' 'search_doc'
                        if search_doc
                            .ui.header #{search_doc._when} when
                        else 
                            .ui.button.new_search_doc
                                |add
                        .ui.header search doc
                        .ui.header searched #{input_count} times
                        each searchers
                            .ui.header #{username}
                            // with search_doc
                        .ui.compact.segment
                            +comments
                    else if skv_is 'main_section' 'requests'
                        .ui.button
                            .ui.header 
                                i.hand.holding.icon
                                |requests
                        .ui.button
                            .ui.header 
                                i.shop.icon
                                |offers
                            .ui.button.add_offer
                                i.plus.icon
                        .ui.button
                            .ui.header 
                                i.photo.icon
                                |photos
                            .ui.button.add_photo
                                i.plus.icon
                        .ui.button
                            .ui.header 
                                i.photo.icon
                                |videos
                
                    else if skv_is 'main_section' 'wikipedia'
                        .ui.inline.header
                            i.large.wikipedia.icon
                            |#{wiki_docs.count} wikipedia
                        .ui.cards
                            each wiki_docs
                                +reddit_doc
                
                    
                
                
                
            
                
template(name='view_mode')
    a.ui.compact.icon.large.tertiary.button.toggle_view(class=toggle_view_button_class)
        // i.link.zoomer.icon(class="#{toggle_view_class} #{thinking_class}" title=k)
        // +i n=toggle_view_class
        +i n=i cl='ui mini image'
        // |#{k}

template(name='emotion_mode')
    .ui.compact.icon.big.circular.basic.tertiary.button.toggle_emotion
        +i n=i cl='ui mini image'
        // i.link.zoomer.icon(class="#{toggle_emotion_class} #{thinking_class}" title=t)
        // |#{k}
    // if selected_emotion
    //     i.huge.pointer.zoomer.icon.toggle_emotion(class="#{i2} #{color}" title=t)
    //     // img.ui.inline.image.toggle_emotion.zoomer.pointer(src="https://img.icons8.com/color/50/000000/#{icon}.png" class=cl title=t)
    // else
    //     i.big.grey.pointer.zoomer.icon.toggle_emotion(class="#{i2}" title=t)
    //     // img.ui.inline.image.toggle_emotion.zoomer.pointer(src="https://img.icons8.com/ios/36/000000/#{icon}.png" class=cl title=t)


template(name='pull_reddit')
    .ui.icon.button.pull
        i.reddit.icon
        
template(name='call_watson')
    .ui.icon.button.pull
        i.dna.icon

template(name='convert')
    .ui.icon.button.convert
        i.exchange.icon


template(name='unselect_tag')
    a.unselect_tag.ui.black.big.tertiary.button.select_term(href='#')
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image)    
        strong #{this}

template(name='tag_selector')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.basic.zoomer.tertiary.button.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.zoomer(src=term.watson.metadata.image)    
        | #{name}
        // small #{count}
        
template(name='select_subreddit')
    // a.ui.basic.button.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    a.ui.image.basic.label.pointer.zoomer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.invert.image(src=term.watson.metadata.image)    
        | #{name}
        small #{count}

template(name='doc_tag')
    a.ui.image.large.basic.label.pointer.zoomer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image)    
        | #{this}
        small #{count}


template(name='duck')
    with content
        // .ui.segment
        .ui.inline.header #{Heading}
        // .item abstract #{Abstract}
        .item.abstract !{AbstractText}
        a.ui.icon.button(href=AbstractURL)
            // #{AbstractURL}
            i.large.external.icon
        img(src=Image)
        each RelatedTopics
            if Text
                // .ui.compact.button.topic
                .ui.pointer.small.header.topic(class=thinking_class)
                    img.ui.mini.inline.rounded.image(src=Icon.URL)
                    |#{Text}
                    // | {{lowered Text}}
            // .content
            //     .item #{FirstURL}
            //     .item !{Result}



    
    
template(name='tone')
    // h3 tone
    .ui.horizontal.list
        each tone.result.document_tone.tones
            .item #{tone_id} {{ to_percent score }}%
    .ui.list.l11
        each tone.result.sentences_tone
            .item(class=sentence_class)
                //- span #{sentence_id}
                span.tone_item.ui.zoomer.pointer.text(title="#{sentence_id}" class="#{tone_size} #{sentence_color}") 
                    |{{lowered text}}
                    // .content
                    // .inline.header(title="#{sentence_id}") {{lowered text}}
                    // |weight:#{weight}
                    // i.chevron.up.link.grey.large.icon.upvote_sentence
                    // i.chevron.down.link.grey.large.icon.downvote_sentence
                    // each tones
                    //     .ui.inverted.invert.small.compact.label(class="#{tone_label_class}") 
                    //     .ui.small.compact.inverted.label(class="{{calculated_size 'weight'}} #{tone_label_class}") 
                    //         span.ui.text
                    //             |#{tone_id} &nbsp;
                    //         | {{ to_percent score }}% 
                    // .ui.mini.transparent.icon.input
                    //     input.tag_sentence(type='text' placeholder='tag')
                    // each tags 
                    //     .ui.label #{this}
    // unless tone                
    //- #call_tone.ui.icon.button
    //-     i.refresh.icon
            // +jsonView(json=tone)


template(name='call_tone')
    button.ui.large.button.call
        i.big.download.icon
        |call tone
        |download
    if page_doc.tone 
        i.checkmark.icon