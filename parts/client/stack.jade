template(name='stack')
    .ui.stackable.padded.grid
        .row
            .four.wide.column
                .ui.header 
                    i.big.stack.exchange.icon
                    |stackexchange
                .ui.input
                    input(type='text')
                each sites
                    .ui.header #{title}
                .ui.header.dl 
                    i.globe.icon
                    |sites
                .ui.list
                    each site_docs
                        .item
                            a.ui.small.header(href="/site/#{api_site_parameter}")
                                img(src=icon_url)
                                |#{name}
            .twelve.wide.column
                .ui.header 
                    i.question.icon
                    |questions
                // .ui.dropdown
                //     // span.text limit
                //     i.dropdown.icon
                //     .menu 
                //     +skve k='limit' v=1 l='1'
                //     +skve k='limit' v=10 l='10'
                //     +skve k='limit' v=20 l='20'
                    // .item 1
                    // .item 5
                    // .item 10
                    // .item 20
                        // |sort
                // +skve k='sort_key' v='_timestamp' l='when' i='clock'
                // +skve k='sort_key' v='points' l='points' i='leaderboard'
                // +skve k='sort_direction' v=-1 l='u' i='up'
                // +skve k='sort_direction' v=1 l='d' i='down'
                // |view
                +skve k='view_mode' v='cards' l='cards' i='squared-menu' ionly=true
                +skve k='view_mode' v='list' l='list' i='list' ionly=true
                if skv_is 'view_mode' 'list'
                    .ui.large.list 
                        each stack_docs
                            .item
                                a.ui.small.header(href="/site/#{site}/doc/#{_id}")
                                    |#{title}
                else
                    .ui.cards
                        each stack_docs
                            +stack_card
                        
                        
template(name='stack_card')
    .ui.card
        .content
            a.ui.header(href="/site/#{site}/doc/#{_id}") !{title}
            each tags 
                a.ui.basic.pointer.label.add_stack_tag #{this}
            if is_answered
                .ui.basic.green.label
                    i.green.checkmark.icon
                    |answered
            else
                .ui.basic.label
                    // i..icon
                    |unanswered
            .ui.label 
                i.eye.icon
                |#{view_count}
                
            .ui.label protected_date #{protected_date}
            .ui.label accepted_answer_id #{accepted_answer_id}
            .ui.label #{answer_count} answers
            .ui.label score #{score}
            .ui.label qid #{question_id}
            .ui.label last_activity_date #{last_activity_date}
            .ui.label creation #{creation_date}
            .ui.label #{_when}
            a(href=link target='_window')
                |#{link}
            with owner
                .ui.compact.segment
                    .ui.inline.header #{display_name}
                    img.ui.tiny.inline.centered.image(src=profile_image)
                    .ui.label reputation #{reputation}
                    .ui.label user_id #{user_id}
                    .ui.label user_type #{user_type}
    
    
                        
template(name='site_page')
    with current_site
        .ui.stackable.padded.grid
            .row
                .sixteen.wide.column
                    // img(src=icon_url)
                    img(src=logo_url)
                    .ui.header !{name}
                .six.wide.column
                    .ui.segment(style="background-color:#{styling.tag_background_color}")
                    .ui.label #{tag_background_color}: tag_background_color
                    .ui.label #{tag_foreground_color}: tag_foreground_color
                    .ui.label #{link_color}: link_color
                    .ui.header related sites
                    .ui.segment
                        each related_sites
                            .ui.small.header #{name}
                            .ui.list 
                                .item relation: #{relation}
                                .item api_site_parameter: #{api_site_parameter}
                                .item site_url: #{site_url}
                    a(href="https://www.twitter.com/#{twitter_account}" target='_window' title=twitter_account)
                        i.large.link.twitter.icon
                    a(href=site_url)
                        |#{site_url}
                    .ui.list 
                        .item #{launch_date} launch_date
                        .item #{open_beta_date} open_beta_date
                        .item #{closed_beta_date} closed_beta_date
                        .item #{site_state} site_state
                        // .item #{high_resolution_icon_url} high_resolution_icon_url
                        // .item #{favicon_url} favicon_url
                        .item #{audience} audience
                        .item #{api_site_parameter} api_site_parameter
                        .item #{site_type} site_type
                    +comments
                    +voting_full
                .ten.wide.column
                    .ui.icon.input
                        i.search.icon
                        input.search_site(type='text')
                    .ui.selection.link.list
                        each site_questions
                            a.item(href="/site/#{site}/doc/#{_id}")
                                .content 
                                    .header #{title}
                                    each tags
                                        .ui.label #{this}

                    
template(name='stack_page')
    with current_doc
        .ui.stackable.padded.grid
            .row
                .sixteen.wide.column
                    .ui.header !{title}
                .four.wide.column
                    each tags 
                        a.ui.basic.pointer.label.add_stack_tag #{this}
                    if is_answered
                        .ui.basic.green.label
                            i.green.checkmark.icon
                            |answered
                    else
                        .ui.basic.label
                            // i..icon
                            |unanswered
                    a(href=link target='_window')
                        |#{link}
                    .ui.label 
                        i.eye.icon
                        |#{view_count}
                        
                    .ui.label id #{_id}
                    .ui.label protected_date #{protected_date}
                    .ui.label accepted_answer_id #{accepted_answer_id}
                    .ui.label #{answer_count} answers
                    .ui.label score #{score}
                    .ui.label qid #{question_id}
                    .ui.label last_activity_date #{last_activity_date}
                    .ui.label creation #{creation_date}
                    .ui.label #{_when}
                    +comments
                .twelve.wide.column
                    // iframe(width="100%" height="500" src=link frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)        
                    with owner
                        .ui.compact.segment
                            a.ui.inline.header(href="/stackuser/#{user_id}") #{display_name}
                            img.ui.tiny.inline.centered.image(src=profile_image)
                            .ui.label reputation #{reputation}
                            .ui.label user_id #{user_id}
                            .ui.label user_type #{user_type}
        
            
                    
                    
                    