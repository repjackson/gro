template(name='profile')
    with user
        .ui.stackable.padded.grid
            .sixteen.wide.column
                span.mobile.only
                    a(href="/u/#{username}/")
                        img.ui.centered.tiny.inline.spaced.circular.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}")
                span.mobile.hidden
                    if editing_mode
                        +image_edit key='profile_image_id' icon='picture' title='avatar' direct=true
                    else 
                        a(href="/u/#{username}/")
                            img.ui.small.inline.circular.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}") 
                // a.ui.header.refresh_user_stats(href="/u/#{username}") 
                //     if spirit_animal
                //         span(title="spirit animal #{spirit_animal}")
                //             +icolor name=spirit_animal cl='ui inline image'
                //     |#{name}
                // div
                a.ui.small.inline.header.refresh_user_stats(href="/u/#{username}") 
                    |@#{username}
                //- .ui.compact.icon.button.refresh_user_stats(title='refresh stats')
                //-     i.refresh.icon
                if is_current_user
                    +boolean_edit key='edit_mode' label='edit mode' direct=true
                    if editing_mode
                        +boolean_edit key='online' label='online' direct=true
                        +text_edit key='current_status' label='status' icon='clock' direct=true
                        +text_edit key='first_name' label='first name' direct=true
                        +text_edit key='last_name' label='last name' direct=true
                        
                    else
                        .ui.inline.header 
                            |#{first_name}
                            |#{last_name}
                        +boolean_view key='online' label='online' direct=true
                        +text_view key='current_status' label='status' icon='clock' direct=true
                else 
                    if online 
                        .ui.green.large.label 
                            i.large.checkmark.icon
                            |online
                    else
                        .ui.disabled.large.label 
                            |offline
                    if current_status
                        .ui.small.inline.header(title='status' )
                            i.grey.clock.icon
                            |!{current_status}
                if is_dev
                    .ui.small.inline.header #{_id}
                if i_have_points
                    .ui.circular.button.send(title='send points')
                        i.red.gift.large.icon
                        span send pts
                    // .ui.circular.button.request(title='request points')
                    //     i.concierge.bell.large.teal.icon
                    //     span request
                else
                    .ui.disabled.circular.button(title='send points')
                        i.red.gift.large.icon
                        span send pts
                    // .ui.disabled.basic.circular.button(title='request points')
                    //     i.concierge.bell.teal.icon
                    //     span request
                        
                if is_current_user
                    a.ui.circular.icon.button.logout(href="#" title='log out')
                        i.sign.out.big.icon
                        // |log out
                
                unless is_current_user
                    if currentUser
                        // div
                        +user_friend_button 
                if is_dev
                    +print_this
                +session_edit_value_button key='view_user_section' value='dashboard' label='dashboard' icon='dashboard'
                if session_key_value_is 'view_user_section' 'dashboard'
                    +user_dashboard
                +session_edit_value_button key='view_user_section' value='about' label='about' icon='info'
                if session_key_value_is 'view_user_section' 'info'
                    +user_info
                    +user_about
                    if editing_mode
                        +account
                // +session_edit_value_button key='view_user_section' value='badges' label='badges' icon='certificate'
                // if session_key_value_is 'view_user_section' 'badges'
                //     +user_badges
                +session_edit_value_button key='view_user_section' value='services' label='services' icon='wrench'
                +session_edit_value_button key='view_user_section' value='projects' label='projects' icon='tasks'
                +session_edit_value_button key='view_user_section' value='chat' label='chat' icon='chat'
                +session_edit_value_button key='view_user_section' value='rentals' label='rentals' icon='clock'
                +session_edit_value_button key='view_user_section' value='tribes' label='tribes' icon='campfire'
                +session_edit_value_button key='view_user_section' value='leads' label='leads' icon='phone'
                +session_edit_value_button key='view_user_section' value='privacy' label='privacy' icon='privacy'
                if session_key_value_is 'view_user_section' 'privacy'
                    +alerts
                    if editing_mode
                        +account
                        +edit_privacy
                +session_edit_value_button key='view_user_section' value='groups' label='groups' icon='groups'
                if session_key_value_is 'view_user_section' 'groups'
                    +user_friends
                +session_edit_value_button key='view_user_section' value='cloud_comparison' label='cloud comparison' icon='exchange'
                if session_key_value_is 'view_user_section' 'cloud_comparison'
                    +cloud_comparison
                +session_edit_value_button key='view_user_section' value='membership' label='membership' icon='shield'

                +session_edit_value_button key='view_user_section' value='karma' label='karma' icon='dashboard'
                if session_key_value_is 'view_user_section' 'karma'
                    // +user_kin
                    // .ui.header karma out
                    // |#{upvoted_count} # of tips
                    // each expenses
                    //     .ui.header #{when}
                    // .ui.header karma in
                    // each accounts_received
                    //     .ui.header #{when}
                    // .ui.header deposit
                    // .ui.button
                    //     |topup
                    +user_credit
                    
                    // .ui.header cash out
                    // .ui.button 
                    //     |cash out at $100
                    // +user_kout
                    // +user_karma
                +session_edit_value_button key='view_user_section' value='authored_overlap' label='authored overlap' icon='change'
                if session_key_value_is 'view_user_section' 'authored_overlap'
                    +authored_overlap
                if session_key_value_is 'view_user_section' 'membership'
                    +membership
                if session_key_value_is 'view_user_section' 'rentals'
                    +user_rentals
                if session_key_value_is 'view_user_section' 'kin'
                    |karma in
                    a.ui.inline.header(href="/u/#{username}/credits")
                        i.chevron.down.large.icon
                        |#{credit_count} credits
                    | (#{total_credit_amount}p)
                    .ui.label #{total_credit_amount}p total received
                    // |received
                    .ui.label(title='received count') #{credit_count} total gifts 
                    .ui.label(title='rank') #{global_credit_count_rank} count rank
                        
                    i.tags.icon(title='credit tags')
                    each credit_tags
                        .ui.circular.label #{title}
                            | #{count}
                        #{count}
                    scroll.ui.segments
                       each user_credits
                            +user_credit_segment
                if session_key_value_is 'view_user_section' 'kout'
                    +user_kout
                    .ui.inline.header
                        |karma out
                    a.ui.inline.spaced.header(href="/u/#{username}/kout")
                        i.chevron.up.icon
                        |#{debit_count}k out
                        |(#{total_debit_amount}p)
                        .ui.label #{total_debit_amount}p total sent
                        .ui.label(title='debit count') #{debit_count} gifts sent
                        .ui.label(title='rank') #{global_debit_count_rank} gift sent rank
                            
                        i.tags.icon(title='credit tags')
                        each debit_tags
                            .ui.label #{title}
                                |#{count}
                        .ui.label(title='rank') ##{global_debit_count_rank}
                if session_key_value_is 'view_user_section' 'topups'
                    .ui.inline.header
                        +i name='request-money'
                        |topups
              


template(name='authored_overlap')
    .ui.inline.header
        i.edit.icon
        |authored overlap
    .ui.three.column.grid
        .column
            .ui.header them
            each current_user.authored_tags
                .ui.label #{title}:#{count}
        .column
            .ui.header union
            each overlap
                .ui.label #{name}: #{count}
        .column
            .ui.header you #{currentUser.total_authored_points}
            each currentUser.authored_tags
                .ui.label #{title}:#{count}


template(name='user_dashboard')
    .ui.stackable.padded.grid
        .five.wide.column
            // +
            // +porch_badge
        .five.wide.column
            .ui.segment 
                .ui.header Professional information
                .ui.small.header address
                .ui.small.header phone
        .four.wide.column
        .eight.wide.column
            .ui.segment 
                .ui.header reviews
                each reviews 
                    .ui.header #{title}
        .eight.wide.column
            .ui.segment 
                .ui.header projects
                each projects 
                    .ui.header #{title}
        .eight.wide.column
            .ui.segment 
                .ui.header service area
                if is_current_user
                    if currentUser.edit_mode
                        +array_edit key='service_area_codes' label='service area codes' direct=true
                each service_area_codes 
                    .ui.header #{this}


template(name='porch_badge')
    .ui.segment 
        |Average rating
        .ui.big.center.aligned.header
            i.yellow.star.icon
            |4.90
        |based on 80 online reviews
        // if background_checked
        .ui.list
            // .item
            //     i.users.icon
            //     |owner Background Checked  
            .item No neighbor data for this pro
            .item
                i.calendar.icon
                |1 year in business
            .item
                i.home.icon
                |Typical home value is unknown
            .item
                i.tasks.icon
                |Median project cost is unknown
            .item
                i.clock.icon
                |Response rate is unknown



template(name='user_friend_button')
    if is_friend
        .ui.blue.circular.button.unfriend(title='unfriend')
            i.checkmark.large.icon
            |friends
    else
        .ui.circular.button.friend(title='friend')
            i.user.plus.large.icon
            |friend




template(name='cloud_comparison')
    .ui.inline.header
        // i.brain.icon
        +i name='brain'
        |cloud comparison
    // i.dropdown.icon
    .ui.two.column.stackable.grid
        // .column
        //     .ui.header you #{currentUser.total_upvoted_points}
        //     each currentUser.upvoted_tags
        //         a.ui.large.label.select_tag #{title}
        //             small #{count}
        // .column
        //     .ui.header union
        //     each overlap_results
        //         a.ui.huge.label.select_tag #{name}
        //             small #{count}
        .column
            .ui.header 
                +i name='brain'
                // i.brain.icon
                |mind
            // each friended_by
            //     a.ui.small.compact.button.select_user(class=friend_button_class)
            //         |#{username}
            each current_user.upvoted_tags
                a.ui.large.label.select_tag #{title}
                    small #{count}
        .column
            .ui.header 
                +i name='autumn'
                // i.cubes.icon
                |matter
            // each friended_by
            //     a.ui.small.compact.button.select_user(class=friend_button_class)
            //         |#{username}
            each current_user.credit_tags
                a.ui.large.label.select_tag #{title}
                    small #{count}

         
         
                        
template(name='user_credit_segment')
    .ui.segment.user_credit_segment.pointer.zoom
        if image_id
            img.ui.fluid.image(src="{{c.url image_id height=200 width=300 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        .header
            strong #{amount}pt 
            // |from 
            if author.profile_image_id
                img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=300 gravity='face' crop='fill'}}" class=currentUser.invert_class)
            |#{_author.username}
     #{when}
        div
        |#{description}
        div
        each tags
            .ui.mini.label #{this}


template(name='user_debit_segment')
    .ui.segment.user_debit_segment.pointer.zoom
        if image_id
            img.ui.fluid.image(src="{{c.url image_id height=200 width=300 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        .header
            strong #{amount}pt
            | to 
            if recipient.profile_image_id
                img.ui.avatar.image(src="{{c.url recipient.profile_image_id height=200 width=300 gravity='face' crop='fill'}}" class=currentUser.invert_class)
            |#{recipient.username}
     #{when}
        div
        |#{description}
        div
        each tags
            .ui.mini.label #{this}
            
            
            
template(name='alerts')
    .ui.header
        i.rss.icon
        | alerts
    .ui.header notifiy when 
    .ui.big.link.list
        .item receive credit
        .item invited to event 
        .item invited to shift 
        .item personal request received             
        
        
template(name='edit_privacy')
    .ui.header
        +icolor name='private' cl='ui image'
        | privacy
    .ui.grid 
        .row 
            .four.wide.column
                +boolean_edit key='publish_profile' label='publish profile' direct=true
            .twelve.wide.column
                .ui.header 
                    |make profile public 
                .ui.small.header 
                    |allow others to find your profile and follow you, allows you to follow others, enrolls you in public leaderboards
        .row 
            .sixteen.wide.column
                a.ui.basic.compact.button.logout_other_clients(href="#")
                    i.globe.icon
                    |log out other clients
                if is_admin
                    a.ui.basic.compact.button.force_logout(href="#")
                        i.shield.icon
                        |force log out
                
                .ui.header sessions
                .ui.large.list
                    each current_user.services.resume.loginTokens
                        .item #{when}: #{hashedToken}
        