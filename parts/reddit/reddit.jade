template(name='reddit')
    .ui.stackable.grid
        .sixteen.wide.column
            // if skv_is 'nightmode' true
            //     i.moon.link.icon.toggle_nightmode
            // else
            //     i.lightbulb.link.icon.toggle_nightmode
            .ui.icon.large.input
                if is_loading
                    i.yin.yang.loading.large.icon
                else
                    i.search.icon
                input.search_tag(type='text' value=query autofocus='' placeholder="#{post_counter} results")
                // .ui.label #{this}
            if picked_tags
                // if many_tags
                //     a#clear_tags.ui.red.invert.icon.button.pick_term
                //         i.remove.icon
                each picked_tags
                    +unpick_tag
            each result_tags
                // .ui.label #{this}
                +tag_picker
                // .ui.large.label(title=count) #{name}
            // div
            .ui.inline.header #{post_count}
            // if skv_is 'sort_direction' 1
            //     .ui.icon.compact.basic.tertiary.button.sort_down
            //         i.caret.down.icon
            // else
            //     .ui.icon.compact.basic.tertiary.button.sort_up
            //         i.caret.up.icon
            if currentUser
                if skv_is 'nsfw' true
                    .ui.compact.black.button.make_safe
                        | nsfw
                else
                    .ui.compact.basic.tertiary.button.make_nsfw
                        | safe
            // if skv_is 'view_bounties' 1
            //     .ui.compact.black.button.unview_bounties
            //         i.hand.holding.heart.icon
            //         | bounties
            // else
            //     .ui.compact.basic.tertiary.button.view_bounties
            //         i.hand.holding.heart.icon
            //         | bounties
            // if skv_is 'view_unanswered' 1
            //     .ui.compact.black.button.unview_unanswered
            //         i.checkmark.icon
            //         | unanswered
            // else
            //     .ui.compact.basic.tertiary.button.view_unanswered
            //         i.question.icon
            //         | unanswered
            // .ui.icon.button.show_hot(class=hot_class)
            //     i.large.fire.icon
            // .ui.icon.button.show_best(class=best_class)
            //     i.large.certificate.icon
            // .ui.icon.compact.large.basic.small.button.show_newest(class=sort_created_class)
            //     i.large.clock.icon
            // .ui.compact.basic.small.tertiary.button.limit_1
            //     |1
            // .ui.compact.basic.small.tertiary.button.limit_10
            //     |10
            // if skv_is 'view_detail' true
            //     .ui.black.compact.button.toggle_detail
            //         i.list.large.icon
            //         |detail
            // else
            //     .ui.compact.basic.tertiary.button.toggle_detail
            //         i.minus.large.icon
            //         |simple
            //     // i.line.chart.icon
            // if skv_is 'reddit_view_layout' 'grid'
            //     .ui.compact.large.button.set_grid(class=grid_class) 
            //         i.th.large.icon
            //         |grid
            // else
            //     .ui.icon.compact.large.button.set_grid(class=grid_class) 
            //         i.th.large.icon
            // if skv_is 'reddit_view_layout' 'list'
            //     .ui.compact.large.button.set_list(class=list_class)
            //         i.list.large.icon
            //         |list
            // else
            //     .ui.icon.compact.large.button.set_list(class=list_class)
            //         i.list.large.icon
            // .ui.icon.button.skip_left
            //     i.chevron.left.icon
            // .ui.icon.button.skip_right
            //     i.chevron.right.icon
        .ui.sixteen.wide.column                
            .scrolling
                if skv_is 'view_layout' 'grid'
                    if one_post
                        .ui.stackable.one.column.grid
                            each rposts
                                +post_card
                            
                    else if two_posts
                        .ui.stackable.two.centered.column.grid
                            each rposts
                                +post_card
                    else if three_posts
                        .ui.stackable.three.column.grid.scrolling
                            each rposts
                                +post_card
                if rposts
                    if skv_is 'reddit_view_layout' 'grid'
                        .ui.centered.three.stackable.cards 
                            each rposts
                                +reddit_post_card
                else
                    .ui.basic.center.aligned.segment
                        i.big.loading.yin.yang.icon
   
template(name='reddit_post_card')
    .ui.card
        // .ui.stackable.equal.width.compact.grid
        //     .row
        if embed
            span.rounded.full
                |!{embed}
            div
        else if is_image
            // |image
            a.view_post(href="/r/#{data.subreddit}/post/#{_id}" class=post_header_class)
                img.ui.fluid.zoomer.image.toggle_view(src=data.url)
        else if watson.metadata.image.length
            // |metadata
            a.view_post(href="/r/#{data.subreddit}/post/#{_id}" class=post_header_class)
                img.ui.inline.zoomer.image.toggle_view(src=watson.metadata.image)
        else if data.thumbnail.length
            // |thumbnail
            a.view_post(href="/r/#{data.subreddit}/post/#{_id}" class=post_header_class)
                img.ui.inline.zoomer.image.zoomer(src=data.thumbnail)    
        // else if data.thumbnail.length
        //     .column
        //         a.view_post(href="/r/#{data.subreddit}/post/#{_id}" class=post_header_class)
        //             img.ui.rounded.inline.image.zoomer(src=data.thumbnail)    
        // .column
        .content
            a.ui.inline.small.header.view_post.zoomer(href="/r/#{data.subreddit}/post/#{_id}" class=post_header_class)
                strong #{data.ups}:
                |!{data.title} 
                // span.inline.content
            a.ui.basic.label(href="/r/#{data.subreddit}" class=post_header_class)
                |!{data.subreddit} 
                // span.inline.content
            |{{ufrom data.created_utc}}
            each tags
                .ui.basic.label #{this}
            +print_this
   
   
   
template(name='reddit_post_item')                  
    .ui.ite.seg
        unless skv_is 'view_detail' true
            // .ui.stackable.equal.width.compact.grid
            //     .row
            if embed
                span.rounded.full
                    |!{embed}
                div
            else if is_image
                .column
                    a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                        img.ui.fluid.rounded.image.toggle_view(src=data.url)
            else if watson.metadata.image.length
                .column
                    a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                        img.ui.rounded.inline.image.toggle_view(src=watson.metadata.image)
            else if data.thumbnail.length
                .column
                    a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                        img.ui.rounded.inline.image.zoomer(src=data.thumbnail)    
            // else if data.thumbnail.length
            //     .column
            //         a.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
            //             img.ui.rounded.inline.image.zoomer(src=data.thumbnail)    
            // .column
            a.ui.inline.header.view_post.zoomer(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                strong #{data.ups}:
                |!{data.title} 
                // span.inline.content
            if watson.analyzed_text
                // .spacer
                a.f11.view_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
                    |{{trunc watson.analyzed_text}}...
            .ui.label 
                i.clock.icon
                |{{ufrom data.created}}
                small ({{long_date data.created}})
            .ui.label(title='domain') #{data.domain}
            // each tags
            //     +flat_pick_rtag
            if in_dev
                +print_this
            // if watson
            //     +doc_emotion_small
            // if skv_is 'view_detail' true
            // a.ui.header.view_post.zoomer(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
            //     strong #{data.ups}:
            //     |!{data.title} 
            // span.inline.content
                    
            a.say.goto_post(href="/r/#{subreddit}/post/#{_id}" class=post_header_class) !{data.body}
            a.say(href="/r/#{subreddit}/post/#{_id}" class=post_header_class) !{data.html}
            // .spacer
            // if parsed_selftext_html
            //     .ui.segment
            //         |!{parsed_selftext_html}
            // if data.selftext
            //     // .ui.segment
            //     .ui.basic.segment.say
            //         |{{#markdown}} {{data.selftext}} {{/markdown}}
            // else if data.body
            //     div
            //     .ui.segment.say
            //         |{{nl2br data.body}}
            // if data.body_html
            //     div
            //     a.pointer.say(href="/r/#{subreddit}/post/#{_id}" class=post_header_class)
            //         |!{data.body_html}
            
            each tags
                +flat_pick_rtag
            if watson
                +doc_emotion_small
            a.ui.inline.header(href="/ruser/#{data.author}")
                |#{data.author}
    


        
template(name='unpick_tag')
    a.unpick.ui.black.compact.button(href='#')
        if term
            if term.watson.metadata.image
                img.ui.avatar.compact.image.superzoom(src=term.watson.metadata.image)    
        strong #{this}


        

template(name='flat_tag_picker')
    // a.ui.big.image.basic.rounded.label.zoomer.pointer.select_tag.select_term(href='#' title="#{count} results" class="#{selector_class} #{thinking_class}")
    .ui.basic.tertiary.compact.button.zoomer.select_flat_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.mini.rounded.inline.image.superzoom(src=term.watson.metadata.image )    
        strong #{this}
        // if in_dev
        //     small #{count}



           
                                   
           
                                
                                
                                
template(name='tag_picker')
    // a.ui.big.image.rounded.label.zoomer.pointer.pick_tag.pick_term(href='#' title="#{count} results" class="#{picker_class} #{thinking_class}")
    .ui.compact.tertiary.button.zoomer.pick_tag.penny.add_global_karma(title="#{count} results" class="#{picker_class} #{thinking_class}")
        if term
            if term.watson.metadata.image
                img.ui.avatar.image.superzoom(src=term.watson.metadata.image )    
        strong #{name}
        // if in_dev
        //     small #{count}