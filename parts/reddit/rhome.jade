template(name='home')
    .ui.stackable.grid
        .sixteen.wide.column
            // if skv_is 'nightmode' true
            //     i.moon.link.icon.toggle_nightmode
            // else
            //     i.lightbulb.link.icon.toggle_nightmode
            .ui.icon.input
                i.search.icon
                input.search_tag(type='text' value=query autofocus='' placeholder="#{post_count}")
                // .ui.label #{this}
            if picked_tags
                // if many_tags
                //     a#clear_tags.ui.red.invert.icon.button.pick_term
                //         i.remove.icon
                each picked_tags
                    +unpick_tag
            each result_tags
                // .ui.label #{this}
                +tag_picker
                // .ui.label(title=count) #{name}
        .ui.sixteen.wide.column                
            .scrolling
                +alpha
                .ui.items
                    each wikis
                        .ui.item
                            .image
                                if watson.metadata.image
                                    a(href=url target='_window')
                                        img.ui.inline.image.toggle_view(src=watson.metadata.image)
                            .content
                                i.large.wikipedia.icon
                                a.ui.inline.header(href=url target='_window') #{title}
                                a.black_text(href=url target='_window')
                                    |{{ trunc analyzed_text }}...
                                each ten_tags
                                    +flat_tag_picker
                                    // .ui.label.flat_tag_pick #{this}
                if one_post
                    .ui.stackable.one.column.grid
                        each rposts
                            +card
                        
                else if two_posts
                    .ui.stackable.two.centered.column.grid
                        each rposts
                            +card
                    // else if three_posts
                else
                    .ui.stackable.three.column.centered.grid.scrolling
                        each rposts
                            +card
                //     .ui.basic.center.aligned.segment
                //         i.big.loading.yin.yang.icon
   

template(name='card')
    .column
        // .ui.stackable.equal.width.compact.grid
        //     .row
        a(href="/r/#{subreddit}/post/#{_id}" target='_window')
            if embed
                span.rounded.full
                    |!{embed}
                div
            else if is_image
                img.ui.fluid.zoomer.image.toggle_view(src=data.url)    
            else if watson.metadata.image
                // |metadata
                img.ui.inline.zoomer.image.toggle_view(src=watson.metadata.image)
                // else if data.thumbnail.length
            else if has_thumbnail
                // |thumbnail
                a.view_post(href="/r/#{subreddit}/post/#{_id}")
                    img.ui.inline.zoomer.fluid.image.zoomer(src=data.thumbnail)    
            // else if data.thumbnail.length
            //     .column
            //         a.view_post(href=data.url class=post_header_class)
            //             img.ui.rounded.inline.image.zoomer(src=data.thumbnail)    
            // .column
        .content
            // a.ui.inline.header.view_post.zoomer(href="" class=post_header_class target='_window')
            a.ui.inline.header(class=post_header_class href="/r/#{subreddit}/post/#{_id}" title=domain)
                |!{data.title} 
                // span.inline.content
            |{{ufrom data.created_utc}}
            each unique_tags
                a.ui.basic.label.flat_tag_pick #{this}
            a.black_text(href="/r/#{subreddit}/post/#{_id}")
                |{{ trunc analyzed_text }}...
            +print_this
            // div
   
