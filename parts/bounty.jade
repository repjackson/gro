template(name='bounties')
    .ui.padded.stackable.grid 
        .row
            .three.wide.column
                .ui.inline.header 
                    i.big.bounties.icon
                    |bounties
                .ui.large.icon.basic.circular.button.add_bounty
                    i.plus.icon
                // i.large.clock.icon
                // i.large.thumbs.up.icon
                .ui.icon.transparent.input
                    // if is_loading
                    //     i.yin.yang.loading.icon
                    // else
                    i.search.icon
                    input.search_tag(type='text' value=query)
                    // .ui.label #{this}
                
                if picked_tags
                    // if many_tags
                    //     a#clear_tags.ui.red.invert.icon.compact.button.pick_term
                    //         i.remove.icon
                    each picked_tags
                        +unpick_tag
                each result_tags
                    // .ui.label #{this}
                    +tag_picker
                        
            .thirteen.wide.column
                div(class=main_column_class)
                    // .ui.disabled.button shared with me
                    if skv_is 'view_sidebar' false
                        .ui.icon.compact.basic.circular.button.enable_sidebar
                            i.ellipsis.vertical.icon
                    else
                        .ui.icon.compact.active.circular.button.disable_sidebar
                            i.ellipsis.vertical.icon
                    if skv_is 'sort_direction' 1
                        .ui.icon.compact.basic.button.sort_down
                            i.caret.down.icon
                    else
                        .ui.icon.compact.basic.button.sort_up
                            i.caret.up.icon
                    .ui.compact.large.icon.basic.button.sort_created(class=sort_created_class)
                        i.clock.icon
                    .ui.compact.large.icon.basic.button.sort_ups(class=sort_ups_class)
                        i.thumbs.up.icon
                    if skv_is 'view_detail' true
                        .ui.black.large.icon.compact.basic.button.toggle_detail
                            i.list.icon
                    else
                        .ui.compact.large.icon.basic.button.toggle_detail
                            i.minus.icon
                        // i.line.chart.icon
                    if skv_is 'view_layout' 'grid'
                        .ui.compact.large.icon.black.button.set_grid(class=grid_class) 
                            i.th.icon
                    else
                        .ui.compact.large.icon.basic.button.set_grid(class=grid_class) 
                            i.th.icon
                    if skv_is 'view_layout' 'list'
                        .ui.compact.black.icon.large.button.set_list(class=list_class)
                            i.list.icon
                    else
                        .ui.compact.large.icon.basic.button.set_list(class=list_class)
                            i.list.icon
                    .ui.circular.icon.basic.button.skip_left
                        i.chevron.left.icon
                    .ui.circular.icon.basic.button.skip_right
                        i.chevron.right.icon
                    .ui.icon.button
                        i.film.icon
                    .ui.icon.button
                        i.picture.icon
                    .ui.icon.button
                        i.chat.icon            
                    .ui.input
                        input(type='text' )
            
                .ui.input
                    input(type='text' )
                .ui.stackable.centered.cards
                    each bounty_docs
                        +bounty
                        



template(name='bounty_view')
    with current_doc
        .ui.stackable.padded.grid
            .centered.row 
                .four.wide.column
                    a(href="/u/#{_author.username}") 
                        .ui.header from
                        img.ui.centered.pointer.zoomer.image(src="{{c.url _author.profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        .ui.large.center.aligned.header.pointer.zoomer
                            |#{_author.name}
                .six.wide.column
                    .ui.inline.header requirement
                    +boolean_view key='require_view' label='view' icon='eye'
                    +boolean_view key='require_vote' label='vote' icon='thumbs up'
                    +boolean_view key='require_reply' label='reply' icon='reply'
                    if parent
                        a.ui.header(href="/p/#{parent._id}") #{parent.title}
                    .ui.huge.center.aligned.header
                        i.hand.holding.icon
                        |#{amount}p
                    if is_author
                        a.ui.icon.button(href='/b/#{_id}/edit')
                            i.pencil.icon
                    if is_dev
                        +remove_button
                    .f14
                        |#{description}
                    .spacer
                    +image_view key='image_id' label='image' direct=true
                    div 
                    if tags
                        i.tags.icon
                        each tags 
                            .ui.big.basic.label #{this}
                    +voting_full
                    .ui.small.header
                        i.clock.icon
                        | #{when}
                    .spacer
                    .spacer
                    +comments
                    //- +array_view key='location_tags' label='location_tags' direct=true
                .four.wide.column
                    a(href="/u/#{target.username}")
                        .ui.header to
                        img.ui.centered.fluid.pointer.zoomer.image(src="{{c.url target.profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        .ui.large.center.aligned.header.pointer.zoomer
                            |#{target.name}


template(name='bounty_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .sixteen.wide.column
                    .ui.header edit bounty
            .row 
                .five.wide.column
                    .ui.large.fluid.basic.button.cancel_bounty
                        i.large.remove.red.icon
                        |cancel
                    .ui.segment
                        .ui.inline.grey.header author
                        .ui.inline.header
                            img.ui.small.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{_author.name}
                    .ui.segment
                        .ui.header target
                        with target
                            i.large.remove.link.icon.remove_target
                            a.pointer(href="/u/#{name}")
                                img.ui.tiny.inline.image(src="{{c.url profile_image_id height=400 width=400 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                                .ui.inline.header #{name}
                                .ui.small.grey.inline.header #{points}
                        unless target
                            .ui.divider
                            // i.large.user.plus.icon
                            +single_user_edit key='target_id' label='search member' icon='user plus' direct=true
                            // .ui.icon.input
                            //     i.search.icon
                            //     input.search_username(type='text' placeholder='username')
                            // each members
                            //     .ui.compact.basic.button.add_target
                            //         // i.plus.icon
                            //         img.ui.avatar.image(src="{{c.url profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            //         |#{name}
                            //         small #{points}p
                    +date_edit key='date' label='date' direct=true   
                    +time_edit key='time' label='time' direct=true   
                    +array_edit key='location_tags' label='location tags' icon='marker' direct=true
                .six.wide.column
                    .ui.inline.header requirement
                    +boolean_edit key='require_view' label='view' icon='eye'
                    +boolean_edit key='require_vote' label='vote' icon='thumbs up'
                    +boolean_edit key='require_reply' label='reply' icon='reply'
                    +textarea_edit key='description' label='description' direct=true
                    +image_edit key='image_id' label='image' direct=true
                    div 
                    div
                    .ui.inline.header
                        i.tag.red.icon
                        |tags
                    .ui.input
                        input.new_tag(type='text' placeholder='+' autocomplete="off")
                        //- +clear_value                
                    each terms 
                        a.ui.large.basic.button.select_term(href='#')
                            if image
                                img.ui.mini.rounded.inline.image(src="{{c.url image height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{title}
                    each tags
                        .ui.big.basic.label
                            i.delete.icon.remove_element
                            |#{this}
                    if suggestions.length
                        .ui.small.inline.header suggestions
                    each suggestions
                        a.ui.large.basic.button.select_term(href='#')
                            // if image
                            //     img.ui.mini.rounded.inline.image(src="{{c.url image height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{title}
                .five.wide.center.aligned.column
                    .ui.big.header #{amount}p
                    .ui.big.input
                        input.point_amount(type='number' value=amount min='1' max=point_max)
                    div
                    .spacer
                    .ui.center.aligned.basic.segment
                        if can_submit
                            .ui.green.huge.button.submit
                                i.large.send.icon
                                |send



template(name='user_bounties')
    .ui.inline.header 
        i.donate.icon
        |bounties
    .ui.circular.icon.button.add_bounty
        i.plus.icon
    .ui.stackable.two.column.grid
        .column
            .ui.link.large.selection.list.scrolling
                each bounties_given
                    a.ui.item(href="/b/#{_id}") 
                        if parent.image_id
                            a(href="/b/#{_id}")
                                img.ui.small.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                        if parent.image_link
                            img(src=parent.image_link)
                        .content
                            if is_author
                                +session_edit_toggle
                                if is_editing_this
                                    +text_edit key='description' direct=true
                                    +number_edit key='karma_bounty' direct=true
                            .ui.inline.header #{description}
                            .ui.inline.header #{karma_bounty}
                            +boolean_view key='require_view' label='view' icon='eye'
                            +boolean_view key='require_vote' label='vote' icon='thumbs up'
                            +boolean_view key='require_reply' label='reply' icon='reply'
                            if require_view
                                +boolean_view key='view_requirement_met' label='view requirement met' 
                            if require_vote
                                +boolean_view key='vote_requirement_met' label='vote requirement met' 
                            if require_reply
                                +boolean_view key='reply_requirement_met' label='reply requirement met' 
                            +target_info
                            +print_this
                            +author_info
                            .ui.label #{status}
                            a.ui.icon.basic.circular.button(href="/b/#{_id}")
                                i.chevron.right.icon
                            +print_this
        .column
            .ui.link.large.selection.list.scrolling
                .ui.link.large.selection.list.scrolling
                    each bounties_offered
                        a.ui.item(href="/b/#{_id}") 
                            if parent.image_id
                                a(href="/b/#{_id}")
                                    img.ui.small.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                            if parent.image_link
                                img(src=parent.image_link)
                            .content
                                if is_author
                                    +session_edit_toggle
                                    if is_editing_this
                                        +text_edit key='description' direct=true
                                        +number_edit key='karma_bounty' direct=true
                                .ui.inline.header #{description}
                                .ui.inline.header #{karma_bounty}
                                +boolean_view key='require_view' label='view' icon='eye'
                                +boolean_view key='require_vote' label='vote' icon='thumbs up'
                                +boolean_view key='require_reply' label='reply' icon='reply'
                                if require_view
                                    +boolean_view key='view_requirement_met' label='view requirement met' 
                                if require_vote
                                    +boolean_view key='vote_requirement_met' label='vote requirement met' 
                                if require_reply
                                    +boolean_view key='reply_requirement_met' label='reply requirement met' 
                                +target_info
                                +print_this
                                +author_info
                                .ui.label #{status}
                                a.ui.icon.basic.circular.button(href="/b/#{_id}")
                                    i.chevron.right.icon
                                +print_this


template(name='post_bounties')
    .ui.inline.header
        i.hand.holding.icon
        |bounties
    .ui.icon.button.add_bounty
        i.plus.icon
    each bounty_docs
        +bounty
    
    
template(name='bounty')
    .ui.segment
        if is_author
            +session_edit_toggle
            if is_editing_this
                +text_edit key='description' direct=true
                +number_edit key='karma_bounty' direct=true
        .ui.inline.header #{description}
        .ui.inline.header #{karma_bounty}
        +boolean_view key='require_view' label='view' icon='eye'
        +boolean_view key='require_vote' label='vote' icon='thumbs up'
        +boolean_view key='require_reply' label='reply' icon='reply'
        if require_view
            +boolean_view key='view_requirement_met' label='view requirement met' 
        if require_vote
            +boolean_view key='vote_requirement_met' label='vote requirement met' 
        if require_reply
            +boolean_view key='reply_requirement_met' label='reply requirement met' 
        +target_info
        +print_this
        +author_info
        .ui.label #{status}
        a.ui.icon.basic.circular.button(href="/b/#{_id}")
            i.chevron.right.icon
    
template(name='bounty_small')
    .ui.item
        if is_author
            +session_edit_toggle
            if is_editing_this
                +text_edit key='description' direct=true
                +number_edit key='karma_bounty' direct=true
        .ui.inline.header #{description}
        .ui.inline.header #{karma_bounty}
        // +boolean_view key='require_view' label='view' icon='eye' icon_only=true
        // +boolean_view key='require_vote' label='vote' icon='thumbs up' icon_only=true
        // +boolean_view key='require_reply' label='reply' icon='reply' icon_only=true
        if require_view
            +boolean_view key='view_requirement_met' label='view requirement met' icon_only=true icon='eye'
        if require_vote
            +boolean_view key='vote_requirement_met' label='vote requirement met' icon_only=true icon='thumbs up'
        if require_reply
            +boolean_view key='reply_requirement_met' label='reply requirement met' icon_only=true icon='reply'
        +target_info
        +print_this
        +author_info
        .ui.label #{status}
        a.ui.icon.basic.circular.button(href="/b/#{_id}")
            i.chevron.right.icon
    
